{
    "version": "https://jsonfeed.org/version/1",
    "title": "但行好事，莫问前程",
    "subtitle": "",
    "icon": "https://60saint.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://60saint.github.io",
    "items": [
        {
            "id": "https://60saint.github.io/typora%E5%BF%AB%E6%8D%B7%E9%94%AE(mac)/",
            "url": "https://60saint.github.io/typora%E5%BF%AB%E6%8D%B7%E9%94%AE(mac)/",
            "title": "typora 快捷键使用(mac)",
            "date_published": "2024-09-25T14:05:21.406Z",
            "content_html": "<p>一级标题：⌘1 (command + 1)<br />\n 二级标题：⌘2 (command + 2)<br />\n 三级标题：⌘3 (command + 3)<br />\n 四级标题：⌘4 (command + 4)<br />\n 五级标题：⌘5 (command + 5)</p>\n<p>段落：⌘o 不生效，快捷键冲突，使用⌃o (control + o)</p>\n<p>提升标题级别：⌘= (command + =)<br />\n 降低标题级别：⌘- (command + -)</p>\n<p>表格：⌥⌘T (option + command + T)<br />\n 代码块：⌥⌘C (option + command + C)<br />\n 公式块：⌥⌘B (option + command + B)</p>\n<p>引用：⌥⌘Q (option + command + Q)<br />\n 有序列表：⌥⌘O (option + command + O)<br />\n 无序列表：⌥⌘U (option + command + U)</p>\n<p>任务列表：⌥⌘X (option + command + X)<br />\n 列表缩进：<br />\n​ 增加缩进：⌘] (command +])<br />\n​ 减少缩进：⌘[( command + [)</p>\n<p>链接引用：⌥⌘L (option + command + L)<br />\n 脚注：⌥⌘R (option + command + R)</p>\n<p>水平分割线：⇧⌘- (shift + command + -)</p>\n<p>加粗：⌘B (command + B)<br />\n 斜体：⌘I (command + I)<br />\n 下划线：⌘U (command + U)</p>\n<p>代码：⇧⌘(shift + command +)</p>\n<p>内联公式：⌃M (control + M)<br />\n 删除线：⌃~ (control + ~)<br />\n 注释：⌃- (control + -)</p>\n<p>超链接:⌘K (command + K)<br />\n 图像：⌃⌘I (control + command + U)<br />\n 清除样式：⌘\\ (command +)</p>\n<p>显示 / 隐藏侧边栏：⇧⌘L (shift + command + L)<br />\n 大纲视图：⌃⌘1 (control + command + 1)<br />\n 文档列表视图：⌃⌘2 (control + command +2)<br />\n 文件树视图：⌃⌘3 (control + command + 3)</p>\n",
            "tags": [
                "Markdown"
            ]
        },
        {
            "id": "https://60saint.github.io/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/",
            "url": "https://60saint.github.io/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/",
            "title": "Hexo个人博客搭建教程",
            "date_published": "2024-09-25T10:53:11.000Z",
            "content_html": "<h1 id=\"准备工具\"><a class=\"anchor\" href=\"#准备工具\">#</a> 准备工具</h1>\n<ol>\n<li>\n<p>安装 Node.js</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>brew <span class=\"token function\">install</span> <span class=\"token function\">node</span></pre></td></tr></table></figure></li>\n<li>\n<p>安装 Hexo</p>\n<p>一旦下载了 Node.js，就能用 npm（Node 包管理器）全局安装 Hexo：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> hexo-cli</pre></td></tr></table></figure></li>\n<li>\n<p>验证 Hexo 是否安装成功</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo <span class=\"token parameter variable\">-v</span></pre></td></tr></table></figure><p>如果安装成功，则显示一系列版本号</p>\n</li>\n</ol>\n<h1 id=\"生成ssh-keys\"><a class=\"anchor\" href=\"#生成ssh-keys\">#</a> 生成 ssh Keys</h1>\n<p>Git bash 输入</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"邮件地址\"</span></pre></td></tr></table></figure><ol>\n<li>\n<p>敲 4 次 Enter⌨️</p>\n</li>\n<li>\n<p>访达 -&gt; shift+command+G -&gt; 输入～/.ssh</p>\n<p>即：访达 -&gt; 前往 -&gt; 前往文件夹 -&gt; 输入～/.ssh</p>\n</li>\n<li>\n<p>打开里面的 id_rsa.pub，全选复制代码</p>\n</li>\n<li>\n<p>打开 github</p>\n</li>\n<li>\n<p>进入用户设置，找到 SSH and GPG keys</p>\n</li>\n<li>\n<p>新建一个 New SSH key，标题任意，粘贴刚刚复制的代码，点击 Add SSH key 创建</p>\n</li>\n<li>\n<p>打开 git bash 验证是否已经成功添加</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-T</span> git@github.com</pre></td></tr></table></figure><p>输入 yes</p>\n<p>看到 <code>Hi 60sAINT! You've successfully authenticated, but GitHub does not provide shell access.</code>  则成功</p>\n</li>\n</ol>\n<h1 id=\"本地部署\"><a class=\"anchor\" href=\"#本地部署\">#</a> 本地部署</h1>\n<ol>\n<li>选择一个合适的位置创建一个文件夹，用于放置博客文件。control + 单击文件夹 -&gt; “新建位于文件夹位置的终端窗口”</li>\n<li>输入 <code>hexo init</code>  进行初始化。如果不行就在前面加 npx -&gt;  <code>npx hexo init</code></li>\n<li><code>hexo install</code>  安装</li>\n<li><code>hexo g</code>  生成</li>\n<li><code>hexo s</code>  本地部署，得到一个链接，打开就可以看到博客已经成功在本地部署了</li>\n</ol>\n<blockquote>\n<p>下一步就可以选择喜欢的主题在本地继续配置了</p>\n<p>我的爱用：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6L2d1aWRlL2NvbmZpZy5odG1sI2FsZ29saWEtJUU2JTkwJTlDJUU3JUI0JUEy\">https://docs.kaitaku.xyz/guide/config.html#algolia - 搜索</span></p>\n</blockquote>\n<h1 id=\"上线博客\"><a class=\"anchor\" href=\"#上线博客\">#</a> 上线博客</h1>\n<ol>\n<li>\n<p>打开博客文件夹中的 config 文件，配置下列代码：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/60sAINT/60sAINT.github.io.git</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main</pre></td></tr></table></figure></li>\n<li>\n<p>git bash -&gt;  <code>hexo algolia</code>  上传索引</p>\n</li>\n<li>\n<p><code>hexo g</code>  生成</p>\n</li>\n<li>\n<p>安装 Hexo Git 部署插件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>hexo d</code>  上传</p>\n<blockquote>\n<p>第一次上传要进行身份验证</p>\n<p>GitHub 已经不再支持使用密码进行身份验证，它要求用户使用更安全的身份验证方式。</p>\n<ol>\n<li>\n<p><mark>使用 SSH 密钥</mark></p>\n<ol>\n<li>\n<p><strong>生成 SSH 密钥</strong>（如果您还没有的话）：<br />\n打开终端并输入以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-b</span> <span class=\"token number\">4096</span> <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"your_email@example.com\"</span></pre></td></tr></table></figure><p>按照提示操作，默认情况下会在  <code>~/.ssh/id_rsa</code>  生成密钥。</p>\n</li>\n<li>\n<p><strong>将公钥添加到 GitHub</strong>：</p>\n<ul>\n<li>\n<p>复制公钥：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> ~/.ssh/id_rsa.pub</pre></td></tr></table></figure></li>\n<li>\n<p>登录到 GitHub，进入 <strong>Settings</strong> -&gt; <strong>SSH and GPG keys</strong> -&gt; <strong>New SSH key</strong>，将公钥粘贴进去。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>更改 Hexo 配置</strong>：<br />\n在您的 Hexo 项目的  <code>_config.yml</code>  中，将 GitHub 的 URL 更改为 SSH 格式：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> git@github.com<span class=\"token punctuation\">:</span>60sAINT/60sAINT.github.io.git</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main</pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li>\n<p><mark>使用 Personal Access Token</mark></p>\n<p>如果更愿意使用 HTTPS，可以使用 GitHub 的 Personal Access Token 代替密码：</p>\n<ol>\n<li><strong>在 Hexo 中使用 Token</strong>：<br />\n在您执行  <code>hexo d</code>  时，输入用户名为 GitHub 用户名，密码为刚刚生成的 token。</li>\n<li><strong>在 Hexo 中使用 Token</strong>：<br />\n在您执行  <code>hexo d</code>  时，输入用户名为 GitHub 用户名，密码为刚刚生成的 token。</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "Hexo",
                "GitHub"
            ]
        },
        {
            "id": "https://60saint.github.io/hexo%E4%B8%ADmarkdown%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E5%A4%84%E7%90%86/",
            "url": "https://60saint.github.io/hexo%E4%B8%ADmarkdown%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E5%A4%84%E7%90%86/",
            "title": "Hexo 中 Markdown 特殊字符的处理方法",
            "date_published": "2024-09-24T12:19:05.000Z",
            "content_html": "<h1 id=\"问题描述\"><a class=\"anchor\" href=\"#问题描述\">#</a> 问题描述</h1>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1IZXhvJmFtcDtzcG09MTAwMS4yMTAxLjMwMDEuNzAyMA==\">Hexo</span> 搭建的博客中对文章进行编写，经常会用到一些特殊字符需要转译，比如  <code>-</code> 、 <code>.</code> 、空格、制表符等等，在正常情况下可以使用  <code>\\</code>  进行转译，但是有一些字符无法转译，使用后在执行  <code>hexo server</code>  命令的时候会报错。</p>\n<p><strong>报错信息：</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Unhandled rejection Template render error: <span class=\"token punctuation\">(</span>unknown path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Line <span class=\"token number\">7</span>, Column <span class=\"token number\">23</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Error: Unable to call <span class=\"token variable\"><span class=\"token variable\">`</span>worldcount<span class=\"token variable\">`</span></span>, <span class=\"token function\">which</span> is undefined or falsey<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr></table></figure><h1 id=\"解决方案\"><a class=\"anchor\" href=\"#解决方案\">#</a> 解决方案</h1>\n<p>报错的原因是，Hexo 编译时发生错误，可能是文章中存在特殊字符，如：{[ () ] } 等等。如下面这段代码：</p>\n<p><strong>在页面中：</strong></p>\n<pre><code>&#123;&#123; worldcount(post.content) &#125;&#125;\n</code></pre>\n<p><strong>在 Markdown 中：</strong></p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;&#123; worldcount<span class=\"token entity\" title=\"&#40;\">&amp;#40;</span>post.content<span class=\"token entity\" title=\"&#41;\">&amp;#41;</span> &#125;&#125;</pre></td></tr></table></figure><p>在 Markdown 中使用  <code>\\</code>  无法转译的字符需要使用字符的命名实体或十进制编码，如上面代码中。</p>\n<p><em><strong>注意：需要转义的字符只是文本中的特殊字符，代码块中的特殊字符无需转译或使用转译字符。</strong></em></p>\n<h1 id=\"常见特殊字符\"><a class=\"anchor\" href=\"#常见特殊字符\">#</a> 常见特殊字符</h1>\n<p>常用特殊字符转译字符对照表：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">特殊符号</th>\n<th style=\"text-align:center\">命名实体</th>\n<th style=\"text-align:center\">十进制编码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">空格</td>\n<td style=\"text-align:center\"><code>&amp;nbsp;</code></td>\n<td style=\"text-align:center\"><code>&amp;#160;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">全角空格</td>\n<td style=\"text-align:center\"><code>&amp;emsp;</code></td>\n<td style=\"text-align:center\"><code>&amp;#12288;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">回车</td>\n<td style=\"text-align:center\">—</td>\n<td style=\"text-align:center\"><code>&amp;#13;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">’</td>\n<td style=\"text-align:center\"><code>&amp;apos;</code></td>\n<td style=\"text-align:center\"><code>&amp;#39;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&quot;</td>\n<td style=\"text-align:center\"><code>&amp;quot;</code></td>\n<td style=\"text-align:center\"><code>&amp;#34;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(</td>\n<td style=\"text-align:center\">—</td>\n<td style=\"text-align:center\"><code>&amp;#40;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">)</td>\n<td style=\"text-align:center\">—</td>\n<td style=\"text-align:center\"><code>&amp;#41;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\"><code>&amp;lt;</code></td>\n<td style=\"text-align:center\"><code>&amp;#60;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\"><code>&amp;gt;</code></td>\n<td style=\"text-align:center\"><code>&amp;#62;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[</td>\n<td style=\"text-align:center\">—</td>\n<td style=\"text-align:center\"><code>&amp;#91;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">]</td>\n<td style=\"text-align:center\">—</td>\n<td style=\"text-align:center\"><code>&amp;#93;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{</td>\n<td style=\"text-align:center\">—</td>\n<td style=\"text-align:center\"><code>&amp;#123;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">}</td>\n<td style=\"text-align:center\">—</td>\n<td style=\"text-align:center\"><code>&amp;#125;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">´</td>\n<td style=\"text-align:center\"><code>&amp;acute;</code></td>\n<td style=\"text-align:center\"><code>&amp;#180;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">°</td>\n<td style=\"text-align:center\"><code>&amp;deg;</code></td>\n<td style=\"text-align:center\"><code>&amp;#176;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">®</td>\n<td style=\"text-align:center\"><code>&amp;reg;</code></td>\n<td style=\"text-align:center\"><code>&amp;#174;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">©</td>\n<td style=\"text-align:center\"><code>&amp;copy;</code></td>\n<td style=\"text-align:center\"><code>&amp;#169;</code></td>\n</tr>\n</tbody>\n</table>\n<p>常用数学转译字符对照表：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">特殊符号</th>\n<th style=\"text-align:center\">命名实体</th>\n<th style=\"text-align:center\">十进制编码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">≤</td>\n<td style=\"text-align:center\"><code>&amp;le;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8804;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">≥</td>\n<td style=\"text-align:center\"><code>&amp;ge;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8805;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">≈</td>\n<td style=\"text-align:center\"><code>&amp;asymp;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8773;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">≠</td>\n<td style=\"text-align:center\"><code>&amp;ne;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8800;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">∩</td>\n<td style=\"text-align:center\"><code>&amp;cap;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8745;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">∪</td>\n<td style=\"text-align:center\"><code>&amp;cup;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8746;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">∠</td>\n<td style=\"text-align:center\"><code>&amp;ang;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8736;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">∞</td>\n<td style=\"text-align:center\"><code>&amp;infin;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8734;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">±</td>\n<td style=\"text-align:center\"><code>&amp;plusmn;</code></td>\n<td style=\"text-align:center\"><code>&amp;#177;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\"><code>&amp;radic;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8730;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">∑</td>\n<td style=\"text-align:center\"><code>&amp;sum;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8722;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">∫</td>\n<td style=\"text-align:center\"><code>&amp;int;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8747;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Δ</td>\n<td style=\"text-align:center\"><code>&amp;Delta;</code></td>\n<td style=\"text-align:center\"><code>&amp;#916;</code></td>\n</tr>\n</tbody>\n</table>\n<p>常用希腊字母转译字符对照表：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">特殊符号</th>\n<th style=\"text-align:center\">命名实体</th>\n<th style=\"text-align:center\">十进制编码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Φ</td>\n<td style=\"text-align:center\"><code>&amp;Phi;</code></td>\n<td style=\"text-align:center\"><code>&amp;#934;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Ω</td>\n<td style=\"text-align:center\"><code>&amp;Omega;</code></td>\n<td style=\"text-align:center\"><code>&amp;#937;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">α</td>\n<td style=\"text-align:center\"><code>&amp;alpha;</code></td>\n<td style=\"text-align:center\"><code>&amp;#945;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">β</td>\n<td style=\"text-align:center\"><code>&amp;beta;</code></td>\n<td style=\"text-align:center\"><code>&amp;#946;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">γ</td>\n<td style=\"text-align:center\"><code>&amp;gamma;</code></td>\n<td style=\"text-align:center\"><code>&amp;#947;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">δ</td>\n<td style=\"text-align:center\"><code>&amp;delta;</code></td>\n<td style=\"text-align:center\"><code>&amp;#948;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ε</td>\n<td style=\"text-align:center\"><code>&amp;epsilon;</code></td>\n<td style=\"text-align:center\"><code>&amp;#949;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ζ</td>\n<td style=\"text-align:center\"><code>&amp;zeta;</code></td>\n<td style=\"text-align:center\"><code>&amp;#950;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">η</td>\n<td style=\"text-align:center\"><code>&amp;eta;</code></td>\n<td style=\"text-align:center\"><code>&amp;#951;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">θ</td>\n<td style=\"text-align:center\"><code>&amp;theta;</code></td>\n<td style=\"text-align:center\"><code>&amp;#952;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">λ</td>\n<td style=\"text-align:center\"><code>&amp;lambda;</code></td>\n<td style=\"text-align:center\"><code>&amp;#955;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">μ</td>\n<td style=\"text-align:center\"><code>&amp;mu;</code></td>\n<td style=\"text-align:center\"><code>&amp;#956;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ξ</td>\n<td style=\"text-align:center\"><code>&amp;xi;</code></td>\n<td style=\"text-align:center\"><code>&amp;#958;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">π</td>\n<td style=\"text-align:center\"><code>&amp;pi;</code></td>\n<td style=\"text-align:center\"><code>&amp;#960;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ρ</td>\n<td style=\"text-align:center\"><code>&amp;rho;</code></td>\n<td style=\"text-align:center\"><code>&amp;#961;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">σ</td>\n<td style=\"text-align:center\"><code>&amp;sigma;</code></td>\n<td style=\"text-align:center\"><code>&amp;#963;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">φ</td>\n<td style=\"text-align:center\"><code>&amp;phi;</code></td>\n<td style=\"text-align:center\"><code>&amp;#966;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ψ</td>\n<td style=\"text-align:center\"><code>&amp;psi;</code></td>\n<td style=\"text-align:center\"><code>&amp;#968;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ω</td>\n<td style=\"text-align:center\"><code>&amp;omega;</code></td>\n<td style=\"text-align:center\"><code>&amp;#969;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">∂</td>\n<td style=\"text-align:center\"><code>&amp;part;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8706;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">∅</td>\n<td style=\"text-align:center\"><code>&amp;empty;</code></td>\n<td style=\"text-align:center\"><code>&amp;#8709;</code></td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "Hexo",
                "Markdown"
            ]
        },
        {
            "id": "https://60saint.github.io/picgo%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/",
            "url": "https://60saint.github.io/picgo%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/",
            "title": "PicGo + Github搭建个人免费图床",
            "date_published": "2024-09-24T12:18:45.000Z",
            "content_html": "<h1 id=\"使用github搭建图床\"><a class=\"anchor\" href=\"#使用github搭建图床\">#</a> 使用 Github 搭建图床</h1>\n<ol>\n<li>\n<p>新建仓库</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/01beef3b3c4e103bf2b917fa3b2ece7f.png\" alt=\"\" /></p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/df5caf78053ddd629eafd2e070e1d601.png#pic_center\" alt=\"\" /></p>\n</li>\n<li>\n<p>点击右上角用户头像 =&gt; settings</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/fd2d33ec7af4cd97d200964800d46e96.png#pic_center\" alt=\"\" /></p>\n</li>\n<li>\n<p>生成 token 令牌，往下拉，直到左侧到底，选择 Developer settings</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/2457c2967d3162a2d36cba836bb9ed31.png#pic_center\" alt=\"\" /></p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/bf241934abfa40f564fcf1bd7b032379.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>密码验证</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/fdc9bffd5248b3316f515302f0ae09db.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>可以给令牌 (token) 做个 Note (标记)，然后选择令牌 (token) 截止时间。不建议选永久，因为不安全。基本是该图床用到多久就选多久。</p>\n<p>选择 repo 权限，然后拉到底部，选择创建就行了。</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/347507b620fb87d8bd353cf111e1b868.png#pic_center\" alt=\"\" /></p>\n<p>创建完毕之后，生成的 Token 是你的账户下的 github 服务器的令牌</p>\n</li>\n</ol>\n<h1 id=\"picgo整合github图床\"><a class=\"anchor\" href=\"#picgo整合github图床\">#</a> PicGo 整合 Github 图床</h1>\n<p>PicGo 是一款优秀的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTUlOUIlQkUlRTUlQkElOEElRTUlQjclQTUlRTUlODUlQjcmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">图床工具</span>，能够自动把本地图片上传至网络，并转换成可访问的链接。</p>\n<h2 id=\"下载并安装picgo\"><a class=\"anchor\" href=\"#下载并安装picgo\">#</a> 下载并安装 PicGo</h2>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dvL3JlbGVhc2Vz\">https://github.com/Molunerfinn/PicGo/releases</span></p>\n<p>根据自己的操作系统（Win/Linux/Mac）来下载安装包</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/3035f057d679b37022e99c66a4abed02.png#pic_center\" alt=\"\" /></p>\n<h2 id=\"设置图床\"><a class=\"anchor\" href=\"#设置图床\">#</a> 设置图床</h2>\n<p>图床设置 -&gt; Github</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/a50228abf2f1d6bde41c3355f8f95e0b.png#pic_center\" alt=\"\" /></p>\n<h2 id=\"整合jsdelivr\"><a class=\"anchor\" href=\"#整合jsdelivr\">#</a> 整合 jsDelivr</h2>\n<p>想要知道 jsDelivr 的作用，首先就需要了解 CDN 是什么</p>\n<p>CDN 的全称是 Content Delivery Network，即内容分发网络。CDN 是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。</p>\n<p>由于 Github 的资源在国内加载速度比较慢，因此需要使用 CDN 加速来优化网站打开速度，jsDelivr + Github 便是免费且好用的 CDN，非常适合博客网站使用。</p>\n<p>进行图床配置：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20240924163148.png\" alt=\"\" /></p>\n<div class=\"note info\">\n<p>具体配置介绍</p>\n<div class=\"tab\" data-id=\"id1\" data-title=\"图床配置名\">\n<p>自己取</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"设定仓库名\">\n<p>用户名 + 仓库名</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"设定分支名\">\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/81f6ed105a3b2a70638a27af265362da.png\" alt=\"\" /></p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"设定Token\">\n<p>上面刚刚在 Github 上获取的 token</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"设定存储路径\">\n<p>需要放到仓库中的哪个文件夹下</p>\n<ul>\n<li>如果直接放到仓库的根目录下就不需要填写这一栏</li>\n<li>如果需要放到某个目录下，直接写目录名就行，不需要在目录名前加 /</li>\n</ul>\n<blockquote>\n<p>建议在路径后面统一都加个 ’ / '，否则 PicGo 会在 test 后再拼接上本地的文件名然后一起作为远程仓库存储图片的图片名</p>\n<p>eg：test/</p>\n</blockquote>\n<ul>\n<li>\n<p>当有多级目录时，也是直接写路径。</p>\n<p>eg：test/test1/test2/</p>\n</li>\n<li>\n<p>当填写的目录不存在时，PicGo 会自动帮你在 Github 上创建目录，这个不用担心！</p>\n</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"设定自定义域名\">\n<p>此时就需要结合 jsDelivr 来加速了</p>\n<p>打开 jsDelivr 官网，了解它的使用方法：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuanNkZWxpdnIuY29t\">https://www.jsdelivr.com</span></p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/0ea88c6aca825ae3bfafb52c9236f0de.png#pic_center\" alt=\"\" /></p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># https://cdn.jsdelivr.net/gh/：固定的前缀，相当于替换掉了Github地址中的https://github.com/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre># user：Github上的用户名</pre></td></tr><tr><td data-num=\"3\"></td><td><pre># repo：仓库名</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># @version：版本号（这里我们可以不管）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># file：文件名（这里我们也不需要加上，因为上传完图片后，它会自动将上传的图片的名字作为存储的文件名）</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//cdn.jsdelivr.net/gh/user/repo@version/file</span></span></pre></td></tr></table></figure><p>例如我的自定义域名就为：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doLzYwc0FJTlQvaW1hZ2VzQGxhdGVzdA==\">https://cdn.jsdelivr.net/gh/60sAINT/images@latest</span></p>\n<blockquote>\n<p>这里值得注意的是，如果需要指定上传到哪个分支，此时需要在自定义域名后面使用 @ + 分支名，如果是仓库默认的分支，可以省略指定分支这一步。</p>\n<p>eg：我需要上传到 test 分支上，此时自定义域名就变成了：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doLzYwc0FJTlQvaW1hZ2VzQGxhdGVzdA==\">https://cdn.jsdelivr.net/gh/60sAINT/images@latest</span></p>\n</blockquote>\n</div>\n</div>\n<h2 id=\"测试\"><a class=\"anchor\" href=\"#测试\">#</a> 测试</h2>\n<p>配置完成后，切换到刚刚配置好的图床，然后手动上传图片试试：可以点击’点击上传’，也可以通过拖拽的方式进行上传</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/a107215b7c09281a0658ae20354c83be.png#pic_center\" alt=\"\" /></p>\n<p>然后，我们能够在相册中看到我们已经上传的图片，可以查看、复制已经上传的图片的 URL，同时也可以将上传的图片删除。</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/dfed05ff74d39c2b159d34d0299880ec.png#pic_center\" alt=\"\" /></p>\n<h2 id=\"附录\"><a class=\"anchor\" href=\"#附录\">#</a> 附录</h2>\n<p>可以在 PicGo 设置中开启 时间戳重命名 ，这样同时上传相同的图片就不会被覆盖了。</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/c4172687d999c1c996dda7e6247354ec.png\" alt=\"\" /></p>\n",
            "tags": [
                "GitHub",
                "PicGo"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/AJAX/AJAX-%E8%BF%9B%E9%98%B6%E7%AF%87/",
            "url": "https://60saint.github.io/front-end/AJAX/AJAX-%E8%BF%9B%E9%98%B6%E7%AF%87/",
            "title": "AJAX - 进阶篇",
            "date_published": "2023-08-28T16:00:00.000Z",
            "content_html": "<h1 id=\"同步代码和异步代码\"><a class=\"anchor\" href=\"#同步代码和异步代码\">#</a> 同步代码和异步代码</h1>\n<ul>\n<li>\n<p>&lt;u&gt; 同步代码 &lt;/u&gt;：逐行执行，需原地等待结果后，才继续向下执行</p>\n<p>我们应该注意的是，实际上浏览器是按照我们 &lt;u&gt; 书写代码的顺序一行一行地执行程序的 &lt;/u&gt;。浏览器会等待代码的解析和工作，在 &lt; u &gt; 上一行完成后才会执行下一行 &lt;/u&gt;。这样做是很有必要的，因为每一行新的代码都是建立在前面代码的基础之上的</p>\n<p>这也使得它成为一个同步程序</p>\n</li>\n<li>\n<p>&lt;u&gt; 异步代码 &lt;/u&gt;：调用后耗时，不阻塞代码继续执行（不必原地等待），在将来完成后触发一个回调函数</p>\n<p>异步编程技术使你的程序可以在执行一个 &lt;u&gt; 可能长期运行的任务 &lt;/u &gt; 的同时继续对其他事件做出反应 &lt; u &gt; 不必等待任务完成 &lt;/u&gt;。与此同时，你的程序也将在任务 &lt; u &gt; 完成后显示结果 &lt;/u&gt;</p>\n</li>\n</ul>\n<blockquote>\n<p>例子：回答打印数字的顺序是什么？</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'pink'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>打印结果：1,4,2</p>\n<p>点击按钮一次就打印一次 3</p>\n<p>异步代码接收结果：使用回调函数</p>\n</blockquote>\n<h1 id=\"回调函数地狱\"><a class=\"anchor\" href=\"#回调函数地狱\">#</a> 回调函数地狱</h1>\n<p>需求：展示默认第一个省，第一个城市，第一个地区在下拉菜单中</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 获取默认第一个省份的名字</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/province'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">const</span> pname <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.province'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> pname</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">// 2. 获取默认第一个城市的名字</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/city'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> pname <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">const</span> cname <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.city'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> cname</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 3. 获取默认第一个地区的名字</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/area'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> pname<span class=\"token punctuation\">,</span> cname <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token keyword\">const</span> areaName <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.area'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> areaName</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token comment\">// 若第三步获取默认第一个地区的名字传入 url 错误，该行不会执行，错误直接被 axios 内部代码捕获抛出到浏览器中</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>概念：在回调函数中嵌套回调函数，一直嵌套下去就形成了回调函数地狱</p>\n<p>缺点：可读性差，异常无法捕获，耦合性严重，牵一发动全身</p>\n<h1 id=\"promise-链式调用\"><a class=\"anchor\" href=\"#promise-链式调用\">#</a> Promise - 链式调用</h1>\n<p>概念：依靠 then () 方法会返回一个新生成的 Promise 对象特性，继续串联下一环任务，直到结束</p>\n<p>细节：then () 回调函数中的返回值，会影响新生成的 Promise 对象最终状态和结果</p>\n<p>好处：通过链式调用，解决回调函数嵌套问题</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230829134953.png\" alt=\"\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 目标：掌握 Promise 的链式调用</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * 需求：把省市的嵌套结构，改成链式调用的线性结构</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 1. 创建 Promise 对象 - 模拟请求省份名字</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'北京市'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 2. 获取省份名字</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">const</span> p2 <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token comment\">// 3. 创建 Promise 对象 - 模拟请求城市名字</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token comment\">//return Promise 对象最终状态和结果，影响到新的 Promise 对象</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">+</span> <span class=\"token string\">'--- 北京'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 4. 获取城市名字</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p2<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">//then () 返回的结果是一个新的 Promise 对象</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p2 <span class=\"token operator\">===</span> p<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>📗Promise 链式应用</p>\n<p>目标：使用 Promise 链式调用，解决回调函数地狱问题</p>\n<p>做法：每个 Promise 对象中管理一个异步任务，用 then 返回 Promise 对象，串联起来</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230829144835.png\" alt=\"\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    * 目标：把回调函数嵌套代码，改成 Promise 链式调用结构</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    * 需求：获取默认第一个省，第一个市，第一个地区并展示在下拉菜单中</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">let</span> pname <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 1. 得到 - 获取省份 Promise 对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/province'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     pname <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.province'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> pname</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token comment\">// 2. 得到 - 获取城市 Promise 对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     <span class=\"token keyword\">return</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/city'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> pname <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     <span class=\"token keyword\">const</span> cname <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.city'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> cname</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     <span class=\"token comment\">// 3. 得到 - 获取地区 Promise 对象</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     <span class=\"token keyword\">return</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/area'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> pname<span class=\"token punctuation\">,</span> cname <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     <span class=\"token keyword\">const</span> areaName <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.area'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> areaName</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<h1 id=\"async-和-await-使用\"><a class=\"anchor\" href=\"#async-和-await-使用\">#</a> async 和 await 使用</h1>\n<p>&lt;u&gt; 定义 &lt;/u&gt;：async 函数是使用  <code>async</code>  关键字声明的函数。async 函数是 &lt;u&gt; <code>AsyncFunction</code> &lt;/u&gt; 构造函数的实例，并且其中允许使用  <code>await</code>  关键字。  <code>async</code>  和  <code>await</code>  关键字让我们可以用一种更简洁的方式写出基于 &lt;u&gt; <code>Promise</code> &lt;/u&gt; 的异步行为，而无需刻意地链式调用  <code>promise</code></p>\n<p>概念： 在 async 函数内，使用 await 关键字取代 then 函数，等待获取 Promise 对象成功状态的结果值</p>\n<p>示例：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 定义 async 修饰函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token comment\">// 2. await 等待 Promise 对象成功的结果</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">const</span> pObj <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/province'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">const</span> pname <span class=\"token operator\">=</span> pObj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">const</span> cObj <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/city'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> pname <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token keyword\">const</span> cname <span class=\"token operator\">=</span> cObj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">const</span> aObj <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/area'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> pname<span class=\"token punctuation\">,</span> cname <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token keyword\">const</span> areaName <span class=\"token operator\">=</span> aObj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.province'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> pname</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.city'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> cname</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.area'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> areaName</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "AJAX",
                "前端",
                "JavaScript",
                "AJAX"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/AJAX/AJAX-%E5%8E%9F%E7%90%86%E7%AF%87/",
            "url": "https://60saint.github.io/front-end/AJAX/AJAX-%E5%8E%9F%E7%90%86%E7%AF%87/",
            "title": "AJAX - 原理篇",
            "date_published": "2023-08-23T16:00:00.000Z",
            "content_html": "<h1 id=\"xmlhttprequest\"><a class=\"anchor\" href=\"#xmlhttprequest\">#</a> XMLHttpRequest</h1>\n<ul>\n<li>\n<p>定义：  <code>XMLHttpRequest</code>  （XHR）对象用于与服务器交互。通过 XMLHttpRequest 可以在不刷新页面的情况下请求特定 URL，获取数据。这允许网页在不影响用户操作的情况下，更新页面的局部内容。  <code>XMLHttpRequest</code>  在 AJAX 编程中被大量使用。</p>\n</li>\n<li>\n<p>关系：axios 内部采用 XMLHttpRequest 与服务器交互</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230824155906.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>好处：掌握使用 XHR 与服务器进行数据交互，了解 axios 内部原理</p>\n</li>\n</ul>\n<h2 id=\"使用-xmlhttprequest\"><a class=\"anchor\" href=\"#使用-xmlhttprequest\">#</a> 使用 XMLHttpRequest</h2>\n<p>步骤：</p>\n<ol>\n<li>创建 XMLHttpRequest 对象</li>\n<li>配置请求方法和请求 url 地址</li>\n<li>监听 loadend 事件，接收响应结果</li>\n<li>发起请求</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请求方法'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'请求url网址'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 响应结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//response 是 xhr 对象里的一个固定属性</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 这句代码执行后才会真正发起一次请求到服务器</span></pre></td></tr></table></figure><blockquote>\n<p>📗需求：获取并展示所有省份名字</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-p<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://hmajax.itheima.net/api/province'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">//xhr.response 是一个对象结构的 json 字符串，而 axios 会把返回的数据从 json 字符串转成 js 对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;br>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"查询参数\"><a class=\"anchor\" href=\"#查询参数\">#</a> 查询参数</h2>\n<p>定义：浏览器提供给服务器的额外信息，让服务器返回浏览器想要的数据</p>\n<p>语法：<span class=\"exturl\" data-url=\"aHR0cDovL3h4eHguY29tL3h4eC94eHg=\">http://xxxx.com/xxx/xxx</span>? 参数名 1 = 值 1 &amp; 参数名 2 = 值 2</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230828111629.png\" alt=\"\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>city-p<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://hmajax.itheima.net/api/city?pname=河北省'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.city-p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;br>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>📗案例：地区查询</p>\n<p>需求：输入省份和城市名字，查询地区列表</p>\n<p>请求地址：<span class=\"exturl\" data-url=\"aHR0cDovL2htYWpheC5pdGhlaW1hLm5ldC9hcGkvYXJlYQ==\">http://hmajax.itheima.net/api/area</span>? 参数名 1 = 值 1 &amp; 参数名 2 = 值 2</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230828112517.png\" alt=\"\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// URLSearchParams 对象：把普通的 js 对象转成查询参数字符串的格式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 1. 创建 URLSearchParams 对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> paramsObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  参数名<span class=\"token number\">1</span><span class=\"token operator\">:</span> 值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  参数名<span class=\"token number\">2</span><span class=\"token operator\">:</span> 值<span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 2. 生成指定格式查询参数字符串</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> queryString <span class=\"token operator\">=</span> paramsObj<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 结果：参数名 1 = 值 1&amp; 参数名 2 = 值 2</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 查询按钮 - 点击事件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.sel-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// 2. 收集省份和城市名字</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">const</span> pname <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.province'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">const</span> cname <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'city'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 3. 组织查询参数字符串</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">const</span> qObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       pname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       cname</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token comment\">// 查询参数对象 -> 查询参数字符串</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token keyword\">const</span> paramsObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span>qObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token keyword\">const</span> queryString <span class=\"token operator\">=</span> paramsObj<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token comment\">// 4. 使用 xhr 对象，查询地区列表</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://hmajax.itheima.net/api/area?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>queryString<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   xhr<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       <span class=\"token keyword\">const</span> htmlStr <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">areaName</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>           <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li class=\"list-group-item\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>areaName<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/li></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>       document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list-group'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> htmlStr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"数据提交\"><a class=\"anchor\" href=\"#数据提交\">#</a> 数据提交</h2>\n<ul>\n<li>\n<p>需求：通过 XHR 提交用户名和密码，完成注册功能</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230828195705.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>核心：</p>\n<p>请求头设置 Content-Type：application/json</p>\n<p>请求体携带 JSON 字符串</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请求方法'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'请求url网址'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 告诉服务器我传递的内容是 JSON 字符串</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 准备数据并转成 JSON 字符串</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'lxy0819'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> userStr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringfy</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 发送请求体数据</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>userStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>reg-btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>注册用户<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.reg-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">assEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\txhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://hmajax.itheima.net/api/register'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 准备提交的数据</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">const</span> userObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'lxy0819'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">const</span> userStr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringfy</span><span class=\"token punctuation\">(</span>userObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 设置请求体，发起请求</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>userStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"promise\"><a class=\"anchor\" href=\"#promise\">#</a> Promise</h1>\n<ul>\n<li>\n<p>定义：  <code>Promise</code>  对象用于表示一个异步操作的最终完成（或失败）及其结果值</p>\n</li>\n<li>\n<p>好处：</p>\n<ol>\n<li>逻辑更清晰</li>\n<li>了解 axios 函数内部运作机制</li>\n<li>能解决回调函数地狱问题</li>\n</ol>\n</li>\n<li>\n<p>语法：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 创建 Promise 对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 这两个形参为函数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 2. 执行异步任务 - 并传递结果</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 成功调用：resolve (值) 触发 then () 执行</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 失败调用：reject (值) 触发 catch () 执行</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 3. 接收结果</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 成功</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 失败</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>三种状态：</p>\n<p>一个 Promise 对象，必然处于以下几种状态之一</p>\n<ul>\n<li>待定（pending）：初始状态，既没有被兑现，也没有被拒绝</li>\n<li>已兑现（fulfilled）：意味着，操作成功完成</li>\n<li>已拒绝（rejected）：意味着，操作失败</li>\n</ul>\n<p>注意：Promise 对象一旦被兑现 / 拒绝就是已敲定了，状态无法再被改变</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 创建 Promise 对象（pending - 待定状态）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// Promise 对象创建时，这里的代码就会立刻执行</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 2. 执行异步代码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 在异步函数执行之前，会先继续执行下面的代码，给 Promise 对象绑定 then 和 catch 的回调</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//resolve () => 'fulfilled 状态 - 已兑现 ' => then ()</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'模拟AJAX请求-成功结果'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 2s 后调用 resolve 后会把 Promise 对象的状态从 pending 改为 fulfilled</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//reject () => 'rejected 状态 - 已拒绝 ' => catch ()</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'模拟AJAX请求-失败结果'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 两个函数都写，Promise 对象最后还是” 已兑现 “状态，因为先执行上面的代码。Promise 对象一旦被兑现 / 拒绝就是已敲定了，状态无法再被改变</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 3. 获取结果</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 模拟 AJAX 请求 - 成功结果</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// Error: 模拟 AJAX 请求 - 失败结果</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ul>\n<blockquote>\n<p>📗案例：使用 Promise + XHR 获取省份列表</p>\n<p>需求：使用 Promise 管理 XHR 获取省份列表，并展示到页面上</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230828211527.png\" alt=\"\" /></p>\n<p>步骤：</p>\n<ol>\n<li>创建 Promise 对象</li>\n<li>执行 XHR 异步代码，获取省份列表</li>\n<li>关联成功或失败函数，做后续处理</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 创建 Promise 对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// 2. 执行 xhr 异步代码，获取省份列表</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://hmajax.itheima.net/api/province'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   xhr<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token comment\">//xhr 如何判断响应成功还是失败？——2 开头的都是成功响应状态码</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">>=</span><span class=\"token number\">200</span> <span class=\"token operator\">&amp;&amp;</span> xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">&lt;</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>           <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 3. 关联成功或失败函数，做后续处理</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;br>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token comment\">// 错误对象要用 console.dir 详细打印</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token comment\">// 服务器返回错误提示消息，插入到 p 标签显示</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<h1 id=\"封装简易版-axios\"><a class=\"anchor\" href=\"#封装简易版-axios\">#</a> 封装简易版 axios</h1>\n<h2 id=\"获取省份列表\"><a class=\"anchor\" href=\"#获取省份列表\">#</a> 获取省份列表</h2>\n<p>需求：基于 Promise + XHR 封装 myAxios 函数，获取省份列表展示</p>\n<p>步骤：</p>\n<ol>\n<li>定义 myAxios 函数，接收配置对象，返回 Promise 对象</li>\n<li>发起 XHR 请求，默认请求方法为 GET</li>\n<li>调用成功 / 失败的处理程序</li>\n<li>使用 myAxios 函数，获取省份列表展示</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// XHR 请求</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 调用成功 / 失败的处理程序</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'目标资源地址'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-p<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 定义 myAxios 函数，接收配置对象，返回 Promise 对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 2. 发起 XHR 请求，默认请求方法为 GET</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>method <span class=\"token operator\">||</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token comment\">// 3. 调用成功 / 失败的处理程序</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">>=</span> <span class=\"token number\">200</span> <span class=\"token operator\">&amp;&amp;</span> xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">&lt;</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 4. 使用 myAxios 函数，获取省份列表展示</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/province'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;br>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> error<span class=\"token punctuation\">.</span>message</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"获取地区列表\"><a class=\"anchor\" href=\"#获取地区列表\">#</a> 获取地区列表</h2>\n<p>需求：修改 myAxios 函数支持传递查询参数，获取 &quot;辽宁省&quot;，&quot;大连市&quot; 对应地区列表展示</p>\n<p>步骤：</p>\n<ol>\n<li>myAxios 函数调用后，判断 params 选项</li>\n<li>基于 URLSearchParams 转换查询参数字符串</li>\n<li>使用自己封装的 myAxios 函数展示地区列表</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// XHR 请求</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 调用成功 / 失败的处理程序</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'目标资源地址'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        参数名<span class=\"token number\">1</span><span class=\"token operator\">:</span> 值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        参数名<span class=\"token number\">2</span><span class=\"token operator\">:</span> 值<span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-p<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 1. 判断有 params 选项，携带查询参数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token comment\">// 2. 使用 URLSearchParams 转换，并携带到 url 上</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token keyword\">const</span> paramsObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token keyword\">const</span> queryString <span class=\"token operator\">=</span> paramsObj<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token comment\">// 把查询参数字符串，拼接在 url？后面</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          config<span class=\"token punctuation\">.</span>url <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>queryString<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>method <span class=\"token operator\">||</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">>=</span> <span class=\"token number\">200</span> <span class=\"token operator\">&amp;&amp;</span> xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">&lt;</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 3. 使用 myAxios 函数，获取地区列表</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/area'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token literal-property property\">pname</span><span class=\"token operator\">:</span> <span class=\"token string\">'辽宁省'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token literal-property property\">cname</span><span class=\"token operator\">:</span> <span class=\"token string\">'大连市'</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;br>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"注册用户\"><a class=\"anchor\" href=\"#注册用户\">#</a> 注册用户</h2>\n<p>需求：修改 myAxios 函数支持传递请求体数据，完成注册用户功能</p>\n<p>步骤：</p>\n<ol>\n<li>myAxios 函数调用后，判断 data 选项</li>\n<li>转换数据类型，在 send 方法中发送</li>\n<li>使用自己封装的 myAxios 函数完成注册用户功能</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// XHR 请求</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 调用成功 / 失败的处理程序</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'目标资源地址'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        参数名<span class=\"token number\">1</span><span class=\"token operator\">:</span> 值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        参数名<span class=\"token number\">2</span><span class=\"token operator\">:</span> 值<span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>reg-btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>注册用户<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token keyword\">const</span> paramsObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token keyword\">const</span> queryString <span class=\"token operator\">=</span> paramsObj<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          config<span class=\"token punctuation\">.</span>url <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>queryString<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>method <span class=\"token operator\">||</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">>=</span> <span class=\"token number\">200</span> <span class=\"token operator\">&amp;&amp;</span> xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">&lt;</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 1. 判断有 data 选项，携带请求体</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token comment\">// 2. 转换数据类型，在 send 中发送</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token keyword\">const</span> jsonStr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          xhr<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>jsonStr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token comment\">// 如果没有请求体数据，正常的发起请求</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.reg-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token comment\">// 3. 使用 myAxios 函数，完成注册用户</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/register'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>          <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'itheima999'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>          <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'666666'</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"案例-天气预报\"><a class=\"anchor\" href=\"#案例-天气预报\">#</a> 案例 - 天气预报</h1>\n<p>步骤：</p>\n<ol>\n<li>获取北京市天气数据，展示</li>\n<li>搜索城市列表，展示</li>\n<li>点击城市，显示对应天气数据</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230829105444.png\" alt=\"\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 目标 1：默认显示 - 北京市天气</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> *  1.1 获取北京市天气数据</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> *  1.2 数据展示到页面</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 获取并渲染城市天气函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getWeather</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cityCode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// 1.1 获取北京市天气数据</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/weather'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token literal-property property\">city</span><span class=\"token operator\">:</span> cityCode</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">const</span> wObj <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 1.2 数据展示到页面</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 阳历和农历日期</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">const</span> dateStr <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;span class=\"dateShort\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>wObj<span class=\"token punctuation\">.</span>date<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    &lt;span class=\"calendar\">农历&amp;nbsp;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      &lt;span class=\"dateLunar\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>wObj<span class=\"token punctuation\">.</span>dateLunar<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    &lt;/span></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> dateStr</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 城市名字</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.area'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> wObj<span class=\"token punctuation\">.</span>area</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">// 当天气温</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">const</span> nowWStr <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div class=\"tem-box\"></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    &lt;span class=\"temp\"></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      &lt;span class=\"temperature\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>wObj<span class=\"token punctuation\">.</span>temperature<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      &lt;span>°&lt;/span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    &lt;/span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  &lt;/div></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  &lt;div class=\"climate-box\"></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    &lt;div class=\"air\"></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      &lt;span class=\"psPm25\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>wObj<span class=\"token punctuation\">.</span>psPm25<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      &lt;span class=\"psPm25Level\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>wObj<span class=\"token punctuation\">.</span>psPm25Level<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    &lt;/div></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    &lt;ul class=\"weather-list\"></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      &lt;li></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        &lt;img src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>wObj<span class=\"token punctuation\">.</span>weatherImg<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\" class=\"weatherImg\" alt=\"\"></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        &lt;span class=\"weather\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>wObj<span class=\"token punctuation\">.</span>weather<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      &lt;/li></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      &lt;li class=\"windDirection\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>wObj<span class=\"token punctuation\">.</span>windDirection<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/li></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      &lt;li class=\"windPower\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>wObj<span class=\"token punctuation\">.</span>windPower<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/li></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    &lt;/ul></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  &lt;/div></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.weather-box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> nowWStr</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\">// 当天天气</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">const</span> twObj <span class=\"token operator\">=</span> wObj<span class=\"token punctuation\">.</span>todayWeather</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">const</span> todayWStr <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div class=\"range-box\"></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    &lt;span>今天：&lt;/span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    &lt;span class=\"range\"></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      &lt;span class=\"weather\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>twObj<span class=\"token punctuation\">.</span>weather<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      &lt;span class=\"temNight\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>twObj<span class=\"token punctuation\">.</span>temNight<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      &lt;span>-&lt;/span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      &lt;span class=\"temDay\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>twObj<span class=\"token punctuation\">.</span>temDay<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      &lt;span>℃&lt;/span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    &lt;/span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  &lt;/div></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  &lt;ul class=\"sun-list\"></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    &lt;li></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      &lt;span>紫外线&lt;/span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      &lt;span class=\"ultraviolet\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>twObj<span class=\"token punctuation\">.</span>ultraviolet<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    &lt;/li></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    &lt;li></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      &lt;span>湿度&lt;/span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      &lt;span class=\"humidity\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>twObj<span class=\"token punctuation\">.</span>humidity<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span>%</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    &lt;/li></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    &lt;li></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      &lt;span>日出&lt;/span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>      &lt;span class=\"sunriseTime\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>twObj<span class=\"token punctuation\">.</span>sunriseTime<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    &lt;/li></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    &lt;li></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>      &lt;span>日落&lt;/span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>      &lt;span class=\"sunsetTime\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>twObj<span class=\"token punctuation\">.</span>sunsetTime<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    &lt;/li></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  &lt;/ul></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.today-weather'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> todayWStr</pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token comment\">// 7 日天气预报数据展示</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">const</span> dayForecast <span class=\"token operator\">=</span> wObj<span class=\"token punctuation\">.</span>dayForecast</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">const</span> dayForecastStr <span class=\"token operator\">=</span> dayForecast<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li class=\"item\"></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>      &lt;div class=\"date-box\"></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        &lt;span class=\"dateFormat\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>dateFormat<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        &lt;span class=\"date\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>date<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      &lt;/div></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>      &lt;img src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>weatherImg<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\" alt=\"\" class=\"weatherImg\"></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>      &lt;span class=\"weather\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>weather<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>      &lt;div class=\"temp\"></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        &lt;span class=\"temNight\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>temNight<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span>-</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        &lt;span class=\"temDay\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>temDay<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        &lt;span>℃&lt;/span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>      &lt;/div></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>      &lt;div class=\"wind\"></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        &lt;span class=\"windDirection\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>windDirection<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        &lt;span class=\"windPower\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>windPower<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      &lt;/div></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    &lt;/li></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.week-wrap'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> dayForecastStr</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token comment\">// 默认进入网页 - 就要获取天气数据（北京市城市编码：'110100'）</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token function\">getWeather</span><span class=\"token punctuation\">(</span><span class=\"token string\">'110100'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"109\"></td><td><pre> * 目标 2：搜索城市列表</pre></td></tr><tr><td data-num=\"110\"></td><td><pre> *  2.1 绑定 input 事件，获取关键字</pre></td></tr><tr><td data-num=\"111\"></td><td><pre> *  2.2 获取展示城市列表数据</pre></td></tr><tr><td data-num=\"112\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token comment\">// 2.1 绑定 input 事件，获取关键字。当一个 &lt;input>, &lt;select>, 或 &lt;textarea> 元素的 value 被修改时，会触发 input 事件</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.search-city'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  <span class=\"token comment\">// 2.2 获取展示城市列表数据</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  <span class=\"token function\">myAxios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/weather/city'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>      <span class=\"token literal-property property\">city</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token keyword\">const</span> liStr <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      <span class=\"token comment\">// 给 li 设置自定义属性是为了点击 li 时获取该 li 的城市编码</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li class=\"city-item\" data-code=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>code<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/li></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.search-list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> liStr</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"132\"></td><td><pre> * 目标 3：切换城市天气</pre></td></tr><tr><td data-num=\"133\"></td><td><pre> *  3.1 绑定城市点击事件，获取城市 code 值</pre></td></tr><tr><td data-num=\"134\"></td><td><pre> *  3.2 调用获取并展示天气的函数</pre></td></tr><tr><td data-num=\"135\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token comment\">// 3.1 绑定城市点击事件，获取城市 code 值</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.search-list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'city-item'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token comment\">// 只有点击城市 li 才会走这里</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token keyword\">const</span> cityCode <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>code</pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token comment\">// 3.2 调用获取并展示天气的函数</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token function\">getWeather</span><span class=\"token punctuation\">(</span>cityCode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "AJAX",
                "前端",
                "JavaScript",
                "AJAX"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/JS/JS%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1Object%E8%AF%A6%E8%A7%A3/",
            "url": "https://60saint.github.io/front-end/JS/JS%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1Object%E8%AF%A6%E8%A7%A3/",
            "title": "JS内置对象 Object 详解",
            "date_published": "2023-08-06T16:00:00.000Z",
            "content_html": "<h1 id=\"方法\"><a class=\"anchor\" href=\"#方法\">#</a> 方法</h1>\n<h2 id=\"objectkeys\"><a class=\"anchor\" href=\"#objectkeys\">#</a>  <code>Object.keys()</code></h2>\n<p><strong> <code>Object.keys()</code> </strong> 静态方法返回一个由给定对象自身的可枚举的字符串键属性名组成的数组。</p>\n<ul>\n<li>\n<p>尝试一下</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> object1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">'somestring'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>object1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Expected output: Array [\"a\", \"b\", \"c\"]</span></pre></td></tr></table></figure></li>\n<li>\n<p>语法</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>\n<p>参数：</p>\n<ul>\n<li>\n<p><code>obj</code></p>\n<p>一个对象</p>\n</li>\n</ul>\n</li>\n<li>\n<p>返回值：</p>\n<p>一个由给定对象自身可枚举的字符串键属性键组成的数组。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>示例</p>\n<blockquote>\n<p>📗使用  <code>Object.keys()</code></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 简单数组</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['0', '1', '2']</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 类数组对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['0', '1', '2']</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 键的顺序随机的类数组对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> anObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">100</span><span class=\"token operator\">:</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>anObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['2', '7', '100']</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>🍏在基本类型中使用  <code>Object.keys()</code></p>\n<p>非对象参数会强制转换为对象。只有字符串可以有自己的可枚举属性，而其他所有基本类型都返回一个空数组。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 字符串具有索引作为可枚举的自有属性</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['0', '1', '2']</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 其他基本类型没有自有属性</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// []</span></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>\n",
            "tags": [
                "前端",
                "JavaScript",
                "JavaScript"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/AJAX/AJAX-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B%E7%AF%87/",
            "url": "https://60saint.github.io/front-end/AJAX/AJAX-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B%E7%AF%87/",
            "title": "AJAX - 综合案例篇",
            "date_published": "2023-08-02T16:00:00.000Z",
            "content_html": "<h1 id=\"案例-图书管理\"><a class=\"anchor\" href=\"#案例-图书管理\">#</a> 案例 - 图书管理</h1>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230803103902.png\" alt=\"\" /></p>\n<ol>\n<li>Bootstrap 弹框</li>\n<li>渲染列表（查）</li>\n<li>新增图书（增）</li>\n<li>删除图书（删）</li>\n<li>编辑图书（改）</li>\n</ol>\n<h2 id=\"bootstrap-弹框\"><a class=\"anchor\" href=\"#bootstrap-弹框\">#</a> Bootstrap 弹框</h2>\n<p>Bootstrap 弹框 = Modal = 模态</p>\n<p>功能：不离开当前页面，显示单独内容，供用户操作</p>\n<h3 id=\"通过属性控制\"><a class=\"anchor\" href=\"#通过属性控制\">#</a> 通过属性控制</h3>\n<p>单纯显示 / 隐藏</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230803104312.png\" alt=\"\" /></p>\n<p>步骤：</p>\n<ol>\n<li>\n<p>引入 bootstrap.css</p>\n</li>\n<li>\n<p>准备弹框标签，确认结构</p>\n</li>\n<li>\n<p>通过 bootstrap 内部的自定义属性，控制弹框的显示和隐藏</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">data-bs-toggle</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-bs-target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css选择器<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>显示弹框<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">data-bs-dismiss</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Close<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 引入 bootstrap.css --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 引入 bootstrap.js --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-bs-toggle</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-bs-target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.my-box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>显示弹框<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 以下是从 bootstrap 引入的 Modal --></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 给以下的弹框设置一个自己的类名，方便上面的 button 按钮绑定 --></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal my-box<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-dialog<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">&lt;!-- 弹框 - 内容 --></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token comment\">&lt;!-- 弹框 - 头部 --></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Modal title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>close<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-dismiss</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Close<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">aria-hidden</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&times;\">&amp;times;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token comment\">&lt;!-- 弹框 - 身体 --></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Modal body text goes here.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token comment\">&lt;!-- 弹框 - 底部 --></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-secondary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-dismiss</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Close<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Save changes<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"通过-js-控制\"><a class=\"anchor\" href=\"#通过-js-控制\">#</a> 通过 JS 控制</h3>\n<p>额外逻辑代码，增加功能：</p>\n<ol>\n<li>点击 “编辑姓名” 按钮弹出弹框，同时赋予输入框默认值</li>\n<li>点击 “保存” 按钮获取输入框数据提交给服务器</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230803113128.png\" alt=\"\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建弹框对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> modalDom <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'css选择器'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> modal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bootstrap<span class=\"token punctuation\">.</span>Modal</span><span class=\"token punctuation\">(</span>modelDom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 显示弹框</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>modal<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 隐藏弹框</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>modal<span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 引入 bootstrap.css --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 引入 bootstrap.js --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-primary edit-btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>编辑姓名<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 以下是从 bootstrap 引入的 Modal --></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 给以下的弹框设置一个自己的类名，方便上面的 button 按钮绑定 --></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal name-box<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-dialog<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">&lt;!-- 弹框 - 内容 --></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token comment\">&lt;!-- 弹框 - 头部 --></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>请输入姓名<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>close<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-dismiss</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Close<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">aria-hidden</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&times;\">&amp;times;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token comment\">&lt;!-- 弹框 - 身体 --></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token comment\">&lt;!-- 弹框 - 底部 --></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-secondary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-dismiss</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>取消<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-primary save-btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>保存<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 创建弹框对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> modalDom <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.name-box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> modal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bootstrap<span class=\"token punctuation\">.</span>Modal</span><span class=\"token punctuation\">(</span>modelDom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 编辑姓名 -> 点击 -> 赋予默认姓名 -> 弹框显示</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.edit-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">'默认姓名'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 2. 显示弹框</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    modal<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 保存 -> 点击 -> 获取姓名 -> 弹框隐藏</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.save-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 2. 隐藏弹框</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    modal<span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"图书管理-渲染列表\"><a class=\"anchor\" href=\"#图书管理-渲染列表\">#</a> 图书管理 - 渲染列表</h2>\n<p>自己的图书数据：给自己起个外号，并告诉服务器，默认会有三本书，基于这三本书做数据的增删改查</p>\n<p>获取数据 -&gt; 渲染数据</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> creator <span class=\"token operator\">=</span> <span class=\"token string\">'老张'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 封装 - 获取并渲染图书列表函数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getBooksList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/books'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            creator</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">const</span> bookList <span class=\"token operator\">=</span> reault<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><span class=\"token comment\">// 一个数组，每个元素是一个图书对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 渲染数据</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">const</span> htmlStr <span class=\"token operator\">=</span> bookList<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;tr></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      \t\t\t\t\t&lt;td></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/td></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                      \t&lt;td></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>bookname<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/td></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                      \t&lt;td></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>author<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/td></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                      \t&lt;td></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>publisher<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/td></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                      \t&lt;td data-id=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                        \t&lt;span class=\"del\">删除&lt;/span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                        \t&lt;span class=\"edit\">编辑&lt;/span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                      \t&lt;/td></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    \t\t\t\t&lt;/tr></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 自定义属性 data-id，方便删除图书时判断删除的是哪个图书</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> htmlStr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// 网页加载运行，获取并渲染列表一次</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token function\">getBooksList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"图书管理-新增图书\"><a class=\"anchor\" href=\"#图书管理-新增图书\">#</a> 图书管理 - 新增图书</h2>\n<p>新增图书 - 弹框（显示 &amp; 隐藏） -&gt; 收集数据 &amp; 提交保存 -&gt; 刷新 - 图书列表</p>\n<p>&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td data-num=&quot;1&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&quot;token comment&quot;&gt;// 创建弹框对象 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;2&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; addModalDom &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'.add-modal'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;3&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; addModal &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;addModalDom&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;4&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&quot;token comment&quot;&gt;// 保存按钮 -&gt; 点击 -&gt; 隐藏弹框 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;5&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'.add-btn'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;6&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&quot;token comment&quot;&gt;// 收集表单数据，并提交到服务器保存 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;7&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; addForm &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'.add-form'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;8&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; bookObj &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;addForm&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token literal-property property&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;9&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&quot;token comment&quot;&gt;// 提交到服务器 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;10&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&quot;token function&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;11&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&quot;token literal-property property&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'<span class=\"exturl\" data-url=\"aHR0cDovL2htYWpheC5pdGhlaW1hLm5ldC9hcGkvYm9va3M=\">http://hmajax.itheima.net/api/books</span>'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;12&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&quot;token literal-property property&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'post'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;13&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&quot;token literal-property property&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;14&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;bookObj&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;15&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            creator&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;16&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;17&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;18&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&quot;token comment&quot;&gt;// 添加成功后，重新请求并渲染图书列表 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;19&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&quot;token function&quot;&gt;getBookList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;20&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&quot;token comment&quot;&gt;// 重置表单，不写这行代码的话点保存按钮再点添加按钮会发现表单还填着已提交的内容 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;21&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        addForm&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;22&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&quot;token comment&quot;&gt;// 隐藏弹框 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;23&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        addModal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;24&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;25&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</p>\n<h2 id=\"图书管理-删除图书\"><a class=\"anchor\" href=\"#图书管理-删除图书\">#</a> 图书管理 - 删除图书</h2>\n<p>绑定点击事件（获取图书 id） -&gt; 调用删除接口 -&gt; 刷新图书列表</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 删除元素 -> 点击（事件委托，委托给 tbody，就不需要给每个删除按钮循环绑定事件了）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 判断点击的是删除元素</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'del'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 获取图书 id</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">const</span> theId <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 调用删除接口</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\">// 接口文档写的参数位置为 path</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://hmajax.itheima.net/api/books/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>theId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'delete'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token function\">getBooksList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"图书管理-编辑图书\"><a class=\"anchor\" href=\"#图书管理-编辑图书\">#</a> 图书管理 - 编辑图书</h2>\n<p>编辑图书 - 弹框（显示 &amp; 隐藏） -&gt; 表单（数据回显） -&gt; 保存修改 &amp; 刷新列表</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> editDom <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.edit-modal'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> editModal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bootstrap<span class=\"token punctuation\">.</span>Modal</span><span class=\"token punctuation\">(</span>editDom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'edit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 获取当前编辑图书数据 -> 回显到编辑表单中</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">const</span> theId <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://hmajax.itheima.net/api/books/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>theId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\">// 默认 get 方法</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">const</span> bookObj <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">/* </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            document.querySelector('.edit-form .bookname').value = bookObj.bookname;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            document.querySelector('.edit-form .author').value = bookObj.author; </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 数据对象的属性和标签类名一致</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">// 遍历数据对象，使用属性去获取对应的标签，快速取值</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">const</span> keys <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>bookObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//keys 是一个数组，每个元素为 bookObj 属性名的字符串</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            keys<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.edit-form .</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>key<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> bookObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        editModal<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// 修改按钮 -> 点击 -> 隐藏弹框</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.edit-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">const</span> editForm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.edit-form'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>id<span class=\"token punctuation\">,</span> bookname<span class=\"token punctuation\">,</span> author<span class=\"token punctuation\">,</span> publisher<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span>editForm<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">hash</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">empty</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://hmajax.itheima.net/api/books/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'PUT'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            bookname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            author<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            pubisher<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            creator</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token function\">getBooksList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    editModal<span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"图片上传\"><a class=\"anchor\" href=\"#图片上传\">#</a> 图片上传</h1>\n<ol>\n<li>\n<p>获取图片文件对象</p>\n</li>\n<li>\n<p>使用 FormData 携带图片文件</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> fd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>参数名<span class=\"token punctuation\">,</span> 值<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>提交表单数据到服务器，使用图片 url 网址</p>\n</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230807105911.png\" alt=\"\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 文件选择元素 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>upload<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-img<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 监听文件选择元素选完图片之后的 change 改变事件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.upload'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 1. 获取图片文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">//e.target 是触发事件的文件选择元素 &amp; lt;input type=\"file\" class=\"upload\"></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 刚刚用户选的文件就在 inupt 元素里边，原生属性 files 可以拿到文件选择元素 input 里边的文件列表</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 2. 使用 FormData 携带图片文件</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">const</span> fd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    fd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 3. 提交到服务器，获取图片 url 网址使用</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/uploadimg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> fd</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 取出图片 url 网址，用 img 标签加载显示</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">const</span> imgUrl <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> imgUrl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"案例-网站换肤\"><a class=\"anchor\" href=\"#案例-网站换肤\">#</a> 案例 - 网站换肤</h1>\n<ol>\n<li>选择图片上传，设置 body 背景</li>\n<li>上传成功时，保存 url 网址</li>\n<li>网页运行后，获取 url 网址使用</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>更换背景<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bg-ipt<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.bg-ipt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> fd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    fd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/uploadimg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> fd</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">const</span> imgUrl <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>backgroundImage <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">url(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>imgUrl<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 2. 上传成功时，“保存” 图片 url 网址</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bgImg'</span><span class=\"token punctuation\">,</span> imgUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 3. 网页运行后，“获取” url 网址使用</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">const</span> bgUrl <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bgImg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>bgUrl <span class=\"token operator\">&amp;&amp;</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundImage <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">url(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>bgUrl<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 如果 bgUrl 值为空，则 &amp; amp;&amp; 后面的代码就不执行了</span></pre></td></tr></table></figure><h1 id=\"案例-个人信息设置\"><a class=\"anchor\" href=\"#案例-个人信息设置\">#</a> 案例 - 个人信息设置</h1>\n<p>步骤：</p>\n<ol>\n<li>信息渲染</li>\n<li>头像修改</li>\n<li>提交表单</li>\n<li>结果提示</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230807124843.png\" alt=\"\" /></p>\n<h2 id=\"信息渲染\"><a class=\"anchor\" href=\"#信息渲染\">#</a> 信息渲染</h2>\n<p>自己的用户信息：给自己起个外号，并告诉服务器，获取对应的用户信息</p>\n<p>获取数据 -&gt; 渲染数据</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> creator <span class=\"token operator\">=</span> <span class=\"token string\">'lxy'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 1.1 获取用户的数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">aixos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/settings'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        creator</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">const</span> userObj <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><span class=\"token comment\">// &#123;avator: ' 头像图片文件的网址 ', desc: ' 我是李欣怡，大家好！！！', email: 'lxy1@itcast.cn', gender: 1, nickname: 'lxy1'&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 1.2 回显数据到标签上</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>userObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'avator'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.prew'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> userObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 获取性别单选框：[男 radio 元素，女 radio 元素]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">const</span> gRadioList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.gender'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 获取性别数字：0 男，1 女</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">const</span> gNum <span class=\"token operator\">=</span> userObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            gRadioList<span class=\"token punctuation\">[</span>gNum<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>checked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>key<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> userObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"头像修改\"><a class=\"anchor\" href=\"#头像修改\">#</a> 头像修改</h2>\n<p>选择头像文件 -&gt; 提交保存 + 回显</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>upload<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>更换头像<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>upload<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>upload<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.upload'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> fd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    fd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'avator'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    fd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'creator'</span><span class=\"token punctuation\">,</span> creator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/avator'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'put'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> fd</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">const</span> imgUrl <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>avator<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 把新的头像回显到页面上</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.prew'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> imgUrl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"信息修改\"><a class=\"anchor\" href=\"#信息修改\">#</a> 信息修改</h2>\n<p>收集表单 -&gt; 提交保存</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.submit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 收集表单信息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> userForm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.user-form'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">const</span> userObj <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span>userForm<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">hash</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">empty</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    userObj<span class=\"token punctuation\">.</span>creator <span class=\"token operator\">=</span> creator<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 性别数字字符串，转成数字类型</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    userObj<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>userObj<span class=\"token punctuation\">.</span>gender<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 提交到服务器保存</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/settings'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'put'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> userObj</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 这行开始为” 提示框 “代码</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">const</span> toastDom <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-toast'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">const</span> toast <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bootstrap<span class=\"token punctuation\">.</span>Toast</span><span class=\"token punctuation\">(</span>toastDom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        toast<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"提示框\"><a class=\"anchor\" href=\"#提示框\">#</a> 提示框</h2>\n<p>确认 - 提示框 -&gt; 控制显示</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toast my-toast<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-bs-delay</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1500<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toast-body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alert alert-success info-box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            提示框内容</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建提示框对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> toastDom <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'css选择器'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> toast <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bootstrap<span class=\"token punctuation\">.</span>Toast</span><span class=\"token punctuation\">(</span>toastDom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 显示提示框</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>toast<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在上一节 “信息修改” 中继续修改代码</p>\n",
            "tags": [
                "前端",
                "AJAX",
                "前端",
                "JavaScript",
                "AJAX"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/AJAX/AJAX-%E5%85%A5%E9%97%A8%E7%AF%87/",
            "url": "https://60saint.github.io/front-end/AJAX/AJAX-%E5%85%A5%E9%97%A8%E7%AF%87/",
            "title": "AJAX - 入门篇",
            "date_published": "2023-08-01T16:00:00.000Z",
            "content_html": "<h1 id=\"ajax-入门篇\"><a class=\"anchor\" href=\"#ajax-入门篇\">#</a> AJAX - 入门篇</h1>\n<h1 id=\"ajax-概念和-axios-使用\"><a class=\"anchor\" href=\"#ajax-概念和-axios-使用\">#</a> AJAX 概念和 axios 使用</h1>\n<h2 id=\"什么是-ajax\"><a class=\"anchor\" href=\"#什么是-ajax\">#</a> 什么是 AJAX</h2>\n<p>定义：AJAX [ˈeɪdʒæks] 是异步的 JavaScript 和 XML（<strong>A</strong>synchronous <strong>J</strong>avaScript <strong>A</strong>nd <strong>X</strong>ML）。简单点说，就是使用  <code>XMLHttpRequest</code>  对象与服务器通信。它可以使用 JSON，XML，HTML 和 text 文本等格式发送和接收数据。AJAX 最吸引人的就是它的 “异步” 特性，也就是说它可以在不重新刷新页面的情况下与服务器通信，交换数据，或更新页面。</p>\n<p>概念：AJAX 是浏览器与服务器进行数据通信的技术</p>\n<h2 id=\"怎么用-ajax\"><a class=\"anchor\" href=\"#怎么用-ajax\">#</a> 怎么用 AJAX</h2>\n<ol>\n<li>先使用 axios [æk‘sioʊs] 库，与服务器进行数据通信\n<ul>\n<li>基于 XMLHttpRequest 封装、代码简单、月下载量在 14 亿次</li>\n<li>Vue、React 项目中都会用到 axios</li>\n</ul>\n</li>\n<li>再学习 XMLHttpRequest 对象的使用，了解 AJAX 底层原理</li>\n</ol>\n<h2 id=\"axios-使用\"><a class=\"anchor\" href=\"#axios-使用\">#</a> axios 使用</h2>\n<p>语法：</p>\n<ol>\n<li>\n<p>引入 axios.js：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9heGlvcy9kaXN0L2F4aW9zLm1pbi5qcw==\">https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js</span></p>\n</li>\n<li>\n<p>使用 axios 函数</p>\n<ul>\n<li>传入配置对象</li>\n<li>再用 .then 回调函数接收结果，并做后续处理</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'目标资源地址'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// 对服务器返回的数据做后续处理</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<blockquote>\n<p>📗</p>\n<p>需求：请求目标资源地址，拿到省份列表数据，显示到页面</p>\n<p>目标资源地址：<span class=\"exturl\" data-url=\"aHR0cDovL2htYWpheC5pdGhlaW1hLm5ldC9hcGkvcHJvdmluY2U=\">http://hmajax.itheima.net/api/province</span></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802095404.png\" alt=\"\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">&lt;!-- 引入 axios 库 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-p<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><pre><code class=\"language-JS\">// 使用 axios 函数\naxios(&#123;\n   url: 'http://hmajax.itheima.net/api/province'\n&#125;).then(result =&gt; &#123;\n   // 好习惯：多打印，确认属性名\n   console.log(result);\n   console.log(result.data.list);\n   console.log(result.data.list.join('&lt;br&gt;'));\n   // 把准备好的省份列表插入到页面\n   document.querySelector('.my-p').innerHTML = result.data.list.join('&lt;br&gt;');\n&#125;)\n</code></pre>\n<p>控制台打印如下：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/eeffa77a7f52fc64c0ef6993010a26b.jpg\" alt=\"\" /></p>\n</blockquote>\n<h1 id=\"认识-url\"><a class=\"anchor\" href=\"#认识-url\">#</a> 认识 URL</h1>\n<p>知道作用和组成，方便与后端人员沟通</p>\n<h2 id=\"什么是-url\"><a class=\"anchor\" href=\"#什么是-url\">#</a> 什么是 URL</h2>\n<p>定义：</p>\n<p><strong>统一资源定位符</strong>（英语：<strong>U</strong>niform <strong>R</strong>esource <strong>L</strong>ocator，缩写：<strong>URL</strong>，或称<strong>统一资源定位器、定位地址、URL 地址</strong>）俗称网页地址，简称<strong>网址</strong>，是因特网上标准的资源的地址（Address），如同在网络上的门牌。它最初是由蒂姆・伯纳斯 - 李发明用来作为万维网的地址，现在它已被万维网联盟编制为因特网标准 RFC 1738。</p>\n<p>例如：</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmFpZHUuY29tL2luZGV4Lmh0bWw=\">https://www.baidu.com/index.html</span></p>\n<p>网页资源</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaXRoZWltYS5jb20vaW1hZ2VzL2xvZ28ucG5n\">https://www.itheima.com/images/logo.png</span></p>\n<p>图片资源</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2htYWpheC5pdGhlaW1hLm5ldC9hcGkvcHJvdmluY2U=\">http://hmajax.itheima.net/api/province</span></p>\n<p>数据资源</p>\n</li>\n</ul>\n<p>概念：</p>\n<p>URL 就是统一资源定位符，简称网址，用于访问网络上的资源</p>\n<h2 id=\"url-的组成\"><a class=\"anchor\" href=\"#url-的组成\">#</a> URL 的组成</h2>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802101615.png\" alt=\"\" /></p>\n<h3 id=\"协议\"><a class=\"anchor\" href=\"#协议\">#</a> 协议</h3>\n<p>http 协议：超文本传输协议，规定浏览器和服务器之间传输数据的格式</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802101755.png\" alt=\"\" /></p>\n<p>协议范围：http，https，...</p>\n<h3 id=\"域名\"><a class=\"anchor\" href=\"#域名\">#</a> 域名</h3>\n<p>标记服务器在互联网中方位</p>\n<p>例如：</p>\n<ul>\n<li>百度服务器 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5iYWlkdS5jb20=\">www.baidu.com</span></li>\n<li>淘宝服务器 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy50YW9iYW8uY29t\">www.taobao.com</span></li>\n</ul>\n<h3 id=\"资源路径\"><a class=\"anchor\" href=\"#资源路径\">#</a> 资源路径</h3>\n<p>标记资源在服务器下的具体位置</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802102210.png\" alt=\"\" /></p>\n<blockquote>\n<p>📗获取 - 新闻列表</p>\n<p>需求：使用 axios 从服务器拿到新闻列表数据</p>\n<p>目标资源地址：<span class=\"exturl\" data-url=\"aHR0cDovL2htYWpheC5pdGhlaW1hLm5ldC9hcGkvbmV3cw==\">http://hmajax.itheima.net/api/news</span></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/news'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   cosnole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/de00985cb4b9a1953dbcaf09f70fd08.jpg\" alt=\"\" /></p>\n</blockquote>\n<h2 id=\"url-查询参数\"><a class=\"anchor\" href=\"#url-查询参数\">#</a> URL 查询参数</h2>\n<p>定义：浏览器提供给服务器的额外信息，让服务器返回浏览器想要的数据</p>\n<p>语法：<span class=\"exturl\" data-url=\"aHR0cDovL3h4eHguY29tL3h4eC94eHg/JUU1JThGJTgyJUU2JTk1JUIwJUU1JTkwJThE\">http://xxxx.com/xxx/xxx? 参数名</span> 1 = 值 1 &amp; 参数名 2 = 值 2</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802103146.png\" alt=\"\" /></p>\n<blockquote>\n<p>📗axios－查询参数</p>\n<p>语法：使用 axios 提供的 params 选项</p>\n<p>注意：axios 在运行时把参数名和值，会拼接到 url? 参数名 = 值</p>\n<p>城市列表：<span class=\"exturl\" data-url=\"aHR0cDovL2htYWpheC5pdGhlaW1hLm5ldC9hcGkvY2l0eT9wbmFtZQ==\">http://hmajax.itheima.net/api/city?pname</span> = 河北省</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/city'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// 查询参数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token literal-property property\">pname</span><span class=\"token operator\">:</span> <span class=\"token string\">'河北省'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;br>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>🍏案例 - 地区查询</p>\n<p>需求：根据输入的省份名字和城市名字，查询地区并渲染列表</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/985b3a58a7060ad20dbd572998ad36c.jpg\" alt=\"\" /></p>\n<p>首先：确定 URL 网址和参数说明</p>\n<ul>\n<li>查询某个省内某个城市的所有地区: <span class=\"exturl\" data-url=\"aHR0cDovL2htYWpheC5pdGhlaW1hLm5ldC9hcGkvYXJlYQ==\">http://hmajax.itheima.net/api/area</span></li>\n<li>参数名：</li>\n<li>pname：省份名字或直辖市名字，比如北京、福建省、辽宁省...</li>\n<li>cname：城市名字，比如北京市、厦门市、大连市...</li>\n</ul>\n<p>完整：<span class=\"exturl\" data-url=\"aHR0cDovL2htYWpheC5pdGhlaW1hLm5ldC9hcGkvYXJlYT9wbmFtZQ==\">http://hmajax.itheima.net/api/area?pname</span> = 北京 &amp; cname = 北京市</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 查询按钮 - 点击事件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.sel-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// 2. 获取省份和城市名字</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">let</span> pname <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.province'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">let</span> cname <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.city'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 3. 基于 axios 请求地区列表数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/area'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>           <span class=\"token comment\">// pname: pname,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>           <span class=\"token comment\">// cname: cname,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>           <span class=\"token comment\">// ES6 对象当中属性名和属性值变量同名时可以只写一个，属性名是后端要求的，不能乱写，属性值变量名可以随便定义</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>           pname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>           cname</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token comment\">// 把数据转成 li 标签插入到页面上</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       <span class=\"token keyword\">let</span> list <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       <span class=\"token keyword\">let</span> theLi <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">areaName</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li class=\"list-group-item\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>areaName<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/li></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//.join ('') 前的代码返回一个数组，每个元素是 '&lt;li class=\"list-group-item\">$&#123;areaName&#125;&lt;/li>' 字符串</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>       document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list-group'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> theLi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<h1 id=\"常用请求方法和数据提交\"><a class=\"anchor\" href=\"#常用请求方法和数据提交\">#</a> 常用请求方法和数据提交</h1>\n<h2 id=\"常用请求方法\"><a class=\"anchor\" href=\"#常用请求方法\">#</a> 常用请求方法</h2>\n<p>请求方法：对服务器资源，要执行的操作</p>\n<table>\n<thead>\n<tr>\n<th>请求方法</th>\n<th>操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td>获取数据</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>数据提交</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>修改数据（全部）</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>删除数据</td>\n</tr>\n<tr>\n<td>PATCH</td>\n<td>修改数据（部分）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"数据提交\"><a class=\"anchor\" href=\"#数据提交\">#</a> 数据提交</h2>\n<p>场景：当数据需要在服务器上保存</p>\n<p>url：请求的 URL 网址</p>\n<p>method：请求的方法，GET 为默认值，可以省略（不区分大小写）</p>\n<p>data：提交数据</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'目标资源地址'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'请求方法'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \t<span class=\"token literal-property property\">参数名</span><span class=\"token operator\">:</span> 值</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// 对服务器返回的数据做后续处理</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>📗数据提交－注册账号</p>\n<p>需求：通过 axios 提交用户名和密码，完成注册功能</p>\n<p>注册用户 URL 地址：<span class=\"exturl\" data-url=\"aHR0cDovL2htYWpheC5pdGhlaW1hLm5ldC9hcGkvcmVnaXN0ZXI=\">http://hmajax.itheima.net/api/register</span></p>\n<p>请求方法：POST</p>\n<p>参数名：</p>\n<p>username 用户名（中英文和数字组成，最少 8 位）</p>\n<p>password 密码（最少 6 位）</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>注册用户<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/register'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token comment\">// 指定请求方法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token comment\">// 提交数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>           <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'lxy0819'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"axios-错误处理\"><a class=\"anchor\" href=\"#axios-错误处理\">#</a> axios 错误处理</h2>\n<p>场景：再次注册相同的账号，会遇到报错信息</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802130519.png\" alt=\"\" /></p>\n<p>处理：用更直观的方式，给普通用户展示错误信息</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802130658.png\" alt=\"\" /></p>\n<p>语法：在 then 方法的后面，通过点语法调用 catch 方法，传入回调函数并定义形参</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 请求选项</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// 处理数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 处理错误</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>📗注册案例，重复注册时通过弹框提示用户错误原因</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/register'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token comment\">// 指定请求方法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token comment\">// 提交数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>           <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'lxy0819'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token comment\">// 处理错误信息</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<h1 id=\"http-协议-报文\"><a class=\"anchor\" href=\"#http-协议-报文\">#</a> HTTP 协议 - 报文</h1>\n<h2 id=\"http-协议-请求报文\"><a class=\"anchor\" href=\"#http-协议-请求报文\">#</a> HTTP 协议 - 请求报文</h2>\n<p>HTTP 协议：规定了浏览器发送及服务器返回内容的格式</p>\n<p>请求报文：浏览器按照 HTTP 协议要求的格式，发送给服务器的内容</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/register'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'itheima007'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'7654321'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802141030.png\" alt=\"\" /></p>\n<p>请求报文的组成部分有：</p>\n<ol>\n<li>\n<p>请求行：请求方法，URL，协议</p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">http://hmajax.itheima.net/api/register</span> <span class=\"token http-version property\">HTTP/1.1</span></span></pre></td></tr></table></figure><p>请求方法：由代码中的 method 选项设置</p>\n<p>URL：由代码中的 url 选项设置</p>\n<p>协议：自动携带</p>\n</li>\n<li>\n<p>请求头：以键值对的格式携带的附加信息</p>\n<p>请求头里的内容并没有在代码中书写，它是自动生成的</p>\n<p>注意这行，规定这次请求时携带的内容类型是一个 json 的字符串：</p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/json</span></span></pre></td></tr></table></figure><p>所以服务器就会接着往下找，找到空行之后服务器就会知道上面的内容已经告一段落，再往下找就是浏览器发来的内容数据了</p>\n</li>\n<li>\n<p>空行：分隔请求头，空行之后的是发送给服务器的资源</p>\n</li>\n<li>\n<p>请求体：发送的资源</p>\n<p>这里是 json 字符串，是在代码当中的 data 项携带的</p>\n</li>\n</ol>\n<p>通过 Chrome 的网络面板查看请求报文：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/88c1653da4bd0a936a7d87f131fd662.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802143324.png\" alt=\"\" /></p>\n<h2 id=\"http-响应报文\"><a class=\"anchor\" href=\"#http-响应报文\">#</a> HTTP - 响应报文</h2>\n<p>HTTP 协议：规定了浏览器发送及服务器返回内容的格式</p>\n<p>响应报文：服务器按照 HTTP 协议要求的格式，返回给浏览器的内容</p>\n<p>以下是再次注册已注册的账号后，服务器返回的响应报文：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802143940.png\" alt=\"\" /></p>\n<ol>\n<li>\n<p>响应行（状态行）：协议、HTTP 响应状态码、状态信息</p>\n<p>HTTP 响应状态码：用来表明请求是否成功完成</p>\n<p>比如：404（服务器找不到资源）</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 响应状态码 404 的可能原因之一是 url 写错了</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/registerweer1ddd'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'itheima007'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'7654321'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1xx</td>\n<td>信息</td>\n</tr>\n<tr>\n<td>2xx</td>\n<td>成功</td>\n</tr>\n<tr>\n<td>3xx</td>\n<td>重定向消息</td>\n</tr>\n<tr>\n<td>4xx</td>\n<td>客户端错误</td>\n</tr>\n<tr>\n<td>5xx</td>\n<td>服务端错误</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>响应头：以键值对的格式携带的附加信息，比如：Content-Type</p>\n</li>\n<li>\n<p>空行：分隔响应头，空行之后的是服务器返回的资源</p>\n</li>\n<li>\n<p>响应体：返回的资源</p>\n</li>\n</ol>\n<p>通过 Chrome 的网络面板查看响应报文：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802145010.png\" alt=\"\" /></p>\n<h1 id=\"接口文档\"><a class=\"anchor\" href=\"#接口文档\">#</a> 接口文档</h1>\n<p><strong>接口文档</strong>：描述接口的文章 （后端工程师）</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802145656.png\" alt=\"\" /></p>\n<p>位置 - query：表示参数 pname 和值要在查询参数里传递，写在 params 里面</p>\n<p><strong>接口</strong>：使用 AJAX 和服务器通讯时，使用的 URL，请求方法，以及参数</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/city'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">pname</span><span class=\"token operator\">:</span> <span class=\"token string\">'辽宁省'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>传送门</strong>：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGlmb3guY29tL2FwaWRvYy9zaGFyZWQtMWIwZGQ4NGYtZmFhOC00MzVkLWIzNTUtNWE4YTMyOWUzNGE4\">AJAX 阶段接口文档</span></p>\n<blockquote>\n<p>📗案例 - 注册账号</p>\n<p><strong>接口文档：</strong></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802150607.png\" alt=\"\" /></p>\n<p>Body 参数的意思是在请求体 data 里边把用户名和密码携带<br />\n application/json 的意思是这次交的请求体数据得是 json 字符串</p>\n<p><strong>接口：</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/register'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 在 axios 内部的源码如果发现 data 属性的值是一个对象，内部就会帮你把这个对象转成 json 字符串携带给服务器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'lxy0819'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>🍏案例 - 登录</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>用户登录<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">// 用户登录</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/login'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>           <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'lxy0819'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       \t<span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<h1 id=\"案例-用户登录\"><a class=\"anchor\" href=\"#案例-用户登录\">#</a> 案例 - 用户登录</h1>\n<ol>\n<li>点击登录时，判断用户名和密码长度</li>\n<li>提交数据和服务器通信</li>\n<li>提示信息</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802152744.png\" alt=\"\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 目标 1：点击登录时，用户名和密码长度判断，并提交数据和服务器通信</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 目标 2：使用提示框，反馈提示消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 2.1 获取提示框</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> myAlert <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.alert'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* 2.2 封装提示框函数，重复调用，满足提示需求</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   功能：</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   1. 显示提示框</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   2. 不同提示文字 msg，和成功绿色失败红色 isSuccess（true 成功，false 失败）</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   3. 过 2 秒后，让提示框自动消失</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">alertFn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg<span class=\"token punctuation\">,</span> isSuccess</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 显示提示框</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    myAlert<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.show'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 提示框内文字</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    myAlert<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 提示框背景颜色添加</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">const</span> bgStyle <span class=\"token operator\">=</span> isSuccess <span class=\"token operator\">?</span> <span class=\"token string\">'alert-success'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'alert-danger'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    myAlert<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>bgStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// 过 2 秒隐藏</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        myAlert<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'show'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">// 同时去除提示框背景颜色，避免类名冲突</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        myAlert<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>bgStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// 1.1 登录 - 点击事件</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.btn-login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">// 1.2 获取用户名和密码</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">const</span> password <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 1.3 判断长度</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token function\">alertFn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户名必须大于等于8位'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户名必须大于等于8位'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">alertFn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'密码必须大于等于6位'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'密码必须大于等于6位'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">// 1.4 基于 axios 提交用户名和密码</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/login'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            password</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 成功才会进入 then</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token function\">alertFn</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 失败才会进入 catch</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token function\">alertFn</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"form-serialize-插件\"><a class=\"anchor\" href=\"#form-serialize-插件\">#</a> form-serialize 插件</h1>\n<p>作用：快速收集表单元素的值</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./lib/form-serialize.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript:;<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>example-form<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>uname<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pwd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>提交<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">&lt;!-- 目标：点击提交时，使用 form-serialize 插件，快速收集表单元素值 --></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> form <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.example-form'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/* 参数 1：要获取哪个表单的数据</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       参数 2：配置对象</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         hash 设置获取数据 data 的结构</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>           - true：js 对象 &#123;uname: 'lxy0819', pwd: '123456'&#125;（推荐）</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>           - false：查询字符串 'uname=lxy0819&amp;pwd=123456'</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         empty 设置是否获取空值</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           - true：获取空值 &#123;uname: '', pwd: '123456'&#125;（推荐，获取到的数据 data 结构与标签结构一致）</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>           - false：不获取空值 &#123;pwd: '123456'&#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">hash</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">empty</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// &#123;uname: 'lxy0819', pwd: '123456'&#125;。获取到数据对象的属性名来自于 input 元素的 name 属性，建议 name 属性的值和接口文档参数名一致</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>📗案例 - 用户登录</p>\n<p>使用 form-serialize 插件，收集用户名和密码</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230802154317.png\" alt=\"\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 记得在 head 引入插件和 axios 库 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 表单 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>login-form<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mb-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-label<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>账号名<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-control username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mb-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-label<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>密码<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-control password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-primary btn-login<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>登录<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> myAlert <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.alert'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">alertFn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg<span class=\"token punctuation\">,</span> isSuccess</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   myAlert<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.show'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   myAlert<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">const</span> bgStyle <span class=\"token operator\">=</span> isSuccess <span class=\"token operator\">?</span> <span class=\"token string\">'alert-success'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'alert-danger'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   myAlert<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>bgStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       myAlert<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'show'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       myAlert<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>bgStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.btn-login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token comment\">// 使用 serialize 函数，收集登录表单里用户名和密码</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token keyword\">const</span> form <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.login-form'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">hash</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">empty</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//data 为 &#123;username: 'lxy0819', password: '123456'&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token comment\">// 解构赋值，变量名和变量值相同，可简写</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token comment\">// const &#123;username: username, password: password&#125; = data;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token comment\">/* 插件把原本一个一个用 querySelector 获取的代码替换掉了</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   const username = document.querySelector ('.username').value;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   const password = document.querySelector ('.password').value; </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>       <span class=\"token function\">alertFn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户名必须大于等于8位'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户名必须大于等于8位'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>       <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>       <span class=\"token function\">alertFn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'密码必须大于等于6位'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'密码必须大于等于6位'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>       <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>       <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://hmajax.itheima.net/api/login'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>       <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>       <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>           username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>           password</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 成功才会进入 then</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>       <span class=\"token function\">alertFn</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 失败才会进入 catch</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>       <span class=\"token function\">alertFn</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n",
            "tags": [
                "前端",
                "AJAX",
                "前端",
                "JavaScript",
                "AJAX"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/JS/JS%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1Array%E8%AF%A6%E8%A7%A3/",
            "url": "https://60saint.github.io/front-end/JS/JS%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1Array%E8%AF%A6%E8%A7%A3/",
            "title": "JS内置对象 Array 详解",
            "date_published": "2023-08-01T16:00:00.000Z",
            "content_html": "<h1 id=\"方法\"><a class=\"anchor\" href=\"#方法\">#</a> 方法</h1>\n<h2 id=\"arrayprototypemap\"><a class=\"anchor\" href=\"#arrayprototypemap\">#</a>  <code>Array.prototype.map()</code></h2>\n<p><strong> <code>map()</code> </strong> 方法<strong>创建一个新数组</strong>，这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成。</p>\n<ul>\n<li>\n<p>尝试一下</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> array1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// Pass a function to map</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> map1 <span class=\"token operator\">=</span> array1<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>map1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// Expected output: Array [2, 8, 18, 32]</span></pre></td></tr></table></figure></li>\n<li>\n<p>语法</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>callbackFn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>callbackFn<span class=\"token punctuation\">,</span> thisArg<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>\n<p>参数：</p>\n<ul>\n<li>\n<p><code>callbackFn</code></p>\n<p>为数组中的每个元素执行的函数。它的返回值作为一个元素被添加为新数组中。该函数被调用时将传入以下参数：</p>\n<ul>\n<li>\n<p><code>element</code></p>\n<p>数组中当前正在处理的元素</p>\n</li>\n<li>\n<p><code>index</code></p>\n<p>正在处理的元素在数组中的索引</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>返回值：</p>\n<p>一个新数组，每个元素都是回调函数的返回值。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>示例</p>\n<blockquote>\n<p>📗求数组中每个元素的平方根</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 下面的代码创建了一个新数组，值为原数组中对应数字的平方根。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> roots <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//roots 现在是     [1, 2, 3]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//numbers 依旧是   [1, 4, 9]</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>🍏在稀疏数组上使用 map ()</p>\n<p>稀疏数组在使用  <code>map()</code>  方法后仍然是稀疏的。  <code>map()</code>  方法会跳过稀疏数组中未定义的元素，直接应用于已定义的元素。在新数组中，未定义的索引位置仍然保持为空缺。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Visit </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>index<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Visit 0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// Visit 2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// [2, empty, 6]</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>💚映射包含 undefined 的数组</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 当返回 undefined 或没有返回任何内容时：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> filteredNumbers <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//index 从 0 开始，因此 filterNumbers 为 1、2、3 和 undefined。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//filteredNumbers 是 [1, 2, 3, undefined]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//numbers 依旧是 [1, 2, 3, 4]</span></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>\n",
            "tags": [
                "前端",
                "JavaScript",
                "JavaScript"
            ]
        },
        {
            "id": "https://60saint.github.io/software-test/postman/",
            "url": "https://60saint.github.io/software-test/postman/",
            "title": "Postman HTTP 接口测试",
            "date_published": "2023-04-14T16:00:00.000Z",
            "content_html": "<h1 id=\"postman-简介\"><a class=\"anchor\" href=\"#postman-简介\">#</a> Postman 简介</h1>\n<p>Postman 是一类 HTTP 协议的 API 接口测试工具</p>\n<h1 id=\"下载安装-postman\"><a class=\"anchor\" href=\"#下载安装-postman\">#</a> 下载安装 Postman</h1>\n<p>官网主页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucG9zdG1hbi5jb20vZG93bmxvYWRzLyVFRiVCQyU4QyVFNCVCOCU4QiVFOCVCRCVCRCVFNiU4OSU4MCVFOSU5QyU4MCVFNyU4OSU4OCVFNiU5QyVBQyVFOCVCRiU5QiVFOCVBMSU4QyVFNSVBRSU4OSVFOCVBMyU4NSVFNSU4RCVCMyVFNSU4RiVBRg==\">https://www.postman.com/downloads/，下载所需版本进行安装即可</span></p>\n<h1 id=\"使用-postman\"><a class=\"anchor\" href=\"#使用-postman\">#</a> 使用 Postman</h1>\n<ul>\n<li>\n<p>点击 “Overview” 右边的加号创建新请求</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230416013413.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>各个模块功能：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230416015422.png\" alt=\"\" /></p>\n</li>\n</ul>\n<h2 id=\"处理请求\"><a class=\"anchor\" href=\"#处理请求\">#</a> 处理请求</h2>\n<ol>\n<li>\n<p>从浏览器顶部搜索引擎获取待测试接口的 URL</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230416193204.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>选择 HTTP 请求方式（这里为 “GET”），在 URL 区域输入链接</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230416193007.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>填入参数键值对</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230416193619.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>在 “Tests” 区域编写脚本</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230416194849.png\" alt=\"\" /></p>\n<p>常见断言：</p>\n<ul>\n<li>\n<p>校验接口响应的状态码，常见的有 200、401、404、500 等</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pm<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Status code is 200\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    pm<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>have<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>检查响应信息中是否包含某些指定的字符串</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pm<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Body matches string\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    pm<span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>pm<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">include</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"string_you_want_to_search\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>检查从 JSON 响应中获取到某个字段，判断其是否与预期字段一致</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pm<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your test name\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> jsonData <span class=\"token operator\">=</span> pm<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    pm<span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>jsonData<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">eql</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>检查实际获取的响应体（即 Body 信息）与预期结果的响应体是否一致</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pm<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Body is correct\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    pm<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>have<span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"response_body_string\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>检查响应中头域信息（Headers）的 Key 是否包含预期字段</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pm<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type is present\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    pm<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>have<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>判断实际响应时间是否低于预期时间</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pm<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Response time is less than 200ms\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    pm<span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>pm<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>responseTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>be<span class=\"token punctuation\">.</span><span class=\"token function\">below</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>检查响应码是否与预期集合中的某个值一致</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pm<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Successful POST request\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    pm<span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>pm<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>be<span class=\"token punctuation\">.</span><span class=\"token function\">oneOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">201</span><span class=\"token punctuation\">,</span><span class=\"token number\">202</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>检查响应状态原因是否为某个预期值</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pm<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Status code name has string\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    pm<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>have<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Created\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>转化 XML 格式的响应成 JSON 对象</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> jsonObject <span class=\"token operator\">=</span> <span class=\"token function\">xml2Json</span><span class=\"token punctuation\">(</span>responseBody<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>点击”Send“按钮</p>\n</li>\n</ol>\n",
            "tags": [
                "软件测试与质量保证",
                "软件测试",
                "Postman"
            ]
        },
        {
            "id": "https://60saint.github.io/%E6%91%84%E5%BD%B1%E5%B1%95/",
            "url": "https://60saint.github.io/%E6%91%84%E5%BD%B1%E5%B1%95/",
            "title": "Zn1's Photographic Exhibition",
            "date_published": "2023-04-13T16:00:00.000Z",
            "content_html": "<h1 id=\"2019\"><a class=\"anchor\" href=\"#2019\">#</a> 2019</h1>\n<details class=\"info\"><summary>Shanghai August</summary><div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"5th\">\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/41097ef8ad26e12d0bec44e85537c08.jpg\" alt=\"\" /></p>\n<p>徐家汇 18:35 | 闹市上空也有一片梦幻的晚霞</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"6th\">\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/8e48f2e2573fa0fd05eb9a18b1069dc.jpg\" alt=\"\" /></p>\n<p>静安 16:51 | 打卡上海自然博物馆</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"7th\">\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/a9a49ad030f1f28d27c911933dcdc28.jpg\" alt=\"\" /></p>\n<p>Tongji University 14:51</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"8th\">\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/bfaf1c59c3162f5dc27c2727340e55d.jpg\" alt=\"\" /></p>\n<p>城隍庙 12:27 | 虽然正值烈夏，但还是想到了那句 “春江水暖鸭先知”</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/3fe1ff877904af9947b0c2f3e63fcb6.jpg\" alt=\"\" /></p>\n<p>武康大楼 16:10 | 好巧不巧遇到施工，只能看看被绿布网包裹的名建筑啦</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/8744d9a4acfa2cda90ca577e548ff8b.jpg\" alt=\"\" /></p>\n<p>Rosa Gallica 17:13 | 武康路一处花艺空间，种植着武康路的浪漫与温柔</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/6c00152d815a898eeea195a215197c4.jpg\" alt=\"\" /></p>\n<p>Shanghai Jiaotong University 18:49 | 很喜欢徐汇校区的建筑风格，老上海的缩影</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"9th\">\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/9680a4e544cdd383da475c1f804198c.jpg\" alt=\"\" /></p>\n<p>龙美术馆 12:57 | 是 Kim Kardashian 热衷的赤贫风</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/57d46a6bf72d93c72819352ef53a119.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/10473beb54fe2367477231a2fa173fa.jpg\" alt=\"\" /></p>\n<p>外滩 16:51~17:31 | 台风降至时陆家嘴的压迫感越过黄浦江滚滚而来，江的另一岸是行色匆匆的行人</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/295f2ee3edfcb1aed6fb1bd9ffd02b9.jpg\" alt=\"\" /></p>\n<p>南京路步行街 18:39 | 台风也不能吹灭上海人民逛街的热情...</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"10th\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/bf3640116d8658554d4f642a787a4f5.jpg\" alt=\"\" /></p>\n<p>11:57 | 从 30 层高的酒店房间俯瞰南京路步行街，还在刮大风下小雨</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/4565e7f4245c36d32756a9c362b0e6d.jpg\" alt=\"\" /></p>\n<p>12:53 | 冒着伞被掀翻的风险下楼吃午饭，忘记店名了，只知道这些菜统称 “本帮菜”，清淡又美味，吃饱喝足。只有伞受伤的世界达成了...</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"11st\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/6d629a73e3b2e4a2122fc981ef74819.jpg\" alt=\"\" /></p>\n<p>陆家嘴 16:43 | 雨过天晴后的陆家嘴三件套</p>\n</div>\n</div></details>\n<h1 id=\"2020\"><a class=\"anchor\" href=\"#2020\">#</a> 2020</h1>\n<details class=\"danger\"><summary>Xinjin</summary><div>\n<div class=\"tab\" data-id=\"id2020\" data-title=\"May\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/daffdabc3f5e79f21f03d88a7da65c2.jpg\" alt=\"\" /></p>\n<p>新津 5.2 19:23 | 奥特莱斯商场外放了满地的干冰，如入仙境</p>\n</div>\n<div class=\"tab\" data-id=\"id2020\" data-title=\"August\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/eaa5e0b0de17e63181db1fa7853c1c0.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/62799efd39e1ccb5c18aef70a3dbe88.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/2958c1cb631da6231bf6acec35263be.jpg\" alt=\"\" /></p>\n<p>五津湿地公园 8.24 | 新津夏天有紫色的傍晚和金色的余晖，照片拍不出身临其境时的半分惊艳</p>\n</div>\n</div></details>\n<h1 id=\"2022\"><a class=\"anchor\" href=\"#2022\">#</a> 2022</h1>\n<details class=\"success\"><summary></summary><div>\n<div class=\"tab\" data-id=\"id20221\" data-title=\"June\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/9611fb3c53fa33f694b23d0e8859c5a.jpg\" alt=\"\" /></p>\n<p>6.30</p>\n</div>\n<div class=\"tab\" data-id=\"id20221\" data-title=\"July\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/b74f436c7773f859b16f1be79b88878.jpg\" alt=\"\" /></p>\n<p>东郊记忆 7.8 | MEET ME AT NEED! FLEA</p>\n</div>\n</div></details>\n<details class=\"warning\"><summary>Guizhou August</summary><div>\n<div class=\"tab\" data-id=\"id20222\" data-title=\"7th\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/823f96a3168ca4545a9262115bc84d2.jpg\" alt=\"\" /></p>\n<p>甲秀楼 | 很喜欢阳光打在城市建筑上的感觉</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/ee01ee70f90f260edc9d2d82403f744.jpg\" alt=\"\" /></p>\n<p>也很喜欢被夕阳笼罩的城市</p>\n</div>\n<div class=\"tab\" data-id=\"id20222\" data-title=\"8th\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/fe390efd4f5e7de8bb2f9e31af094c7.jpg\" alt=\"\" /></p>\n<p>黔灵山公园索道 | 几乎是梦境</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/d40e213beacfa61f000c7821aede20d.jpg\" alt=\"\" /></p>\n<p>绿柳红墙</p>\n</div>\n<div class=\"tab\" data-id=\"id20222\" data-title=\"9th\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/7be34cc43f9a63cdaf06b088d5e962c.jpg\" alt=\"\" /></p>\n<p>西江千户苗寨 | 《童年》</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/b529fd002735ea3292670a450e98d99.jpg\" alt=\"\" /></p>\n</div>\n<div class=\"tab\" data-id=\"id20222\" data-title=\"10th\">\n<p>在苗寨度过了贵州之旅的最后一天。不过可能因为没关相机电源就取出了 SD 卡，照片被清空了...</p>\n<p>⚠️以后一定要先关电源再拔卡！！！😭血的教训</p>\n</div>\n</div></details>\n<details class=\"primary\"><summary></summary><div>\n<div class=\"tab\" data-id=\"id20223\" data-title=\"December\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/902e8130ffd74c732e873bf213c772f.jpg\" alt=\"\" /></p>\n<p>画厨 12.25 18:04</p>\n</div>\n</div></details>\n<h1 id=\"2023\"><a class=\"anchor\" href=\"#2023\">#</a> 2023</h1>\n<details><summary>Xiling snow mountain January</summary><div>\n<div class=\"tab\" data-id=\"id20231\" data-title=\"17th\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/7b497ba7b06a108f0dcaa0d7a20752e.jpg\" alt=\"\" /></p>\n<p>瞬间就想到了花样年华</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/cb84a37a8d2fe77e70daf4fa81bf546.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/717b7f732c0354043b1d27fe0a2469c.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/65c59aed6c7b4e3e987eb1fa57fafd7.jpg\" alt=\"\" /></p>\n<p>玩得很开心的小朋友们</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/1e121d63a2df2f888963607258fabb9.jpg\" alt=\"\" /></p>\n<p>富士直出既视感</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/cf88b1b17ae19db04b5bd045a8b3448.jpg\" alt=\"\" /></p>\n<p>看得出来雪堆上站了一排小鸭子吗😜</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/4954cf13c5bdd5e3b392336eb06091e.jpg\" alt=\"\" /></p>\n<p>右边那哥们滑雪应该摔了很多跤吧</p>\n</div>\n</div></details>\n<details class=\"info\"><summary></summary><div>\n<div class=\"tab\" data-id=\"id20232\" data-title=\"April\">\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/69e65661a5a16e48974fc83b96d4958.jpg\" alt=\"\" /></p>\n<p>电子科技大学清水河校区 4.2 18:09 | 为什么你坐在那儿看上去就像一个没写地址的信封？</p>\n</div>\n</div></details>\n",
            "tags": []
        },
        {
            "id": "https://60saint.github.io/software-test/JUnit/",
            "url": "https://60saint.github.io/software-test/JUnit/",
            "title": "JUnit 单元测试",
            "date_published": "2023-04-13T16:00:00.000Z",
            "content_html": "<h1 id=\"junit-的核心类结构\"><a class=\"anchor\" href=\"#junit-的核心类结构\">#</a> Junit 的核心类结构</h1>\n<ul>\n<li>Assert 类：验证条件是否成立，当条件成立时，assert 方法保持沉默，若条件不成立时就抛出异常</li>\n<li>Test 接口：测试和收集测试的结果，它是单独的测试用例、聚合的测试模式以及测试扩展的共同接口</li>\n<li>TestCase 抽象类：根据输入的测试名称来创建一个测试用例，提供测试名的目的在于方便测试失败时查找失败的测试用例</li>\n<li>TestSuite 类：由几个 TestCase 或其他的 TestSuite 构成。被加入到 TestSuite 中的测试在一个线程上依次被执行</li>\n<li>TestResult 类：负责收集 TestCase 所执行的结果，它将结果分类，分为客户可预测的错误和没有预测的错误，它还将测试结果转发到 TestListener 处理</li>\n<li>TestRunner 类：客户对象调用的起点，负责对整个测试过程进行跟踪。能够显示测试结果，并且报告测试的进度</li>\n<li>TestListener 类：包含 4 个方法：addError ()，addFailure ()，startTest () 和 endTest ()。测试中若产生事件（错误、失败、开始、结束）会通知 TestListener</li>\n</ul>\n<p>Assert 类的主要方法：</p>\n<ol>\n<li>\n<p><code>void assertEquals(boolean expected, boolean actual)</code></p>\n<p>检查两个变量或者等式是否平衡</p>\n</li>\n<li>\n<p><code>void assertFalse(boolean condition)</code></p>\n<p>检查条件是假的</p>\n</li>\n<li>\n<p><code>void assertNotNull(Object object)</code></p>\n<p>检查对象不是空的</p>\n</li>\n<li>\n<p><code>void assertNull(Object object)</code></p>\n<p>检查对象是空的</p>\n</li>\n<li>\n<p><code>void assertTrue(boolean condition)</code></p>\n<p>检查条件为真</p>\n</li>\n<li>\n<p><code>void fail()</code></p>\n<p>在没有报告的情况下使测试不通过</p>\n</li>\n</ol>\n<p>TestCase 类的主要方法：</p>\n<ol>\n<li>\n<p><code>int countTestCases()</code></p>\n<p>为被 run (TestResult result) 执行的测试案例计数</p>\n</li>\n<li>\n<p><code>TestResult createResult()</code></p>\n<p>创建一个默认的 TestResult 对象</p>\n</li>\n<li>\n<p><code>String getName()</code></p>\n<p>获取 TestCase 的名称</p>\n</li>\n<li>\n<p><code>TestResult run()</code></p>\n<p>一个运行这个测试的方便的方法，收集由 TestResult 对象产生的结果</p>\n</li>\n<li>\n<p><code>void run(TestResult result)</code></p>\n<p>在 TestReault 中运行测试案例并收集结果</p>\n</li>\n<li>\n<p><code>void setName(String name)</code></p>\n<p>设置 TestCase 的名称</p>\n</li>\n<li>\n<p><code>void setUp()</code></p>\n<p>创建固定装置，例如打开一个网络连接</p>\n</li>\n<li>\n<p><code>void tearDown()</code></p>\n<p>拆除固定装置，例如关闭一个网络连接</p>\n</li>\n<li>\n<p><code>String toString()</code></p>\n<p>返回测试案例的一个字符串表示</p>\n</li>\n</ol>\n<p>TestSuite 类的主要方法：</p>\n<ol>\n<li>\n<p><code>void addTest(Test test)</code></p>\n<p>在套中加入测试</p>\n</li>\n<li>\n<p><code>void addTestSuite(Class&lt;? extends TestCase&gt; testCase)</code></p>\n<p>将已经给定的类中的测试加到套中</p>\n</li>\n<li>\n<p><code>int countTestCases()</code></p>\n<p>对这个测试即将运行的测试案例进行计数</p>\n</li>\n<li>\n<p><code>String getName()</code></p>\n<p>返回套的名称</p>\n</li>\n<li>\n<p><code>void run(TestResult result)</code></p>\n<p>在 TestResult 中运行测试并收集结果</p>\n</li>\n<li>\n<p><code>void setName(String name)</code></p>\n<p>设置套的名称</p>\n</li>\n<li>\n<p><code>Test testAt(int index)</code></p>\n<p>在给定的目录中返回测试</p>\n</li>\n<li>\n<p><code>int testCount()</code></p>\n<p>返回套中测试的数量</p>\n</li>\n<li>\n<p><code>static Test warning(String warning)</code></p>\n<p>返回会失败的测试并且记录警告信息</p>\n</li>\n</ol>\n<p>TestResult 类的主要方法：</p>\n<ol>\n<li>\n<p><code>void addError(Test test, Throwable t)</code></p>\n<p>在错误列表中加入一个错误</p>\n</li>\n<li>\n<p><code>void addFailure(Test test, AssertionFailedError t)</code></p>\n<p>在失败列表中加入一个失败</p>\n</li>\n<li>\n<p><code>void endTest(Test test)</code></p>\n<p>显示测试被编译的这个结果</p>\n</li>\n<li>\n<p><code>int errorCount()</code></p>\n<p>获取被检测出错误的数量</p>\n</li>\n<li>\n<p><code>Enumeration errors()</code></p>\n<p>返回错误的详细信息</p>\n</li>\n<li>\n<p><code>int failureCount()</code></p>\n<p>获取被检测出的失败的数量</p>\n</li>\n<li>\n<p><code>void run(TestCase test)</code></p>\n<p>运行 TestCase</p>\n</li>\n<li>\n<p><code>int runCount()</code></p>\n<p>获得运行测试的数量</p>\n</li>\n<li>\n<p><code>void startTest(Test test)</code></p>\n<p>声明一个测试即将开始</p>\n</li>\n<li>\n<p><code>void stop()</code></p>\n<p>标明测试必须停止</p>\n</li>\n</ol>\n<h1 id=\"junit-的主要注解\"><a class=\"anchor\" href=\"#junit-的主要注解\">#</a> JUnit 的主要注解</h1>\n<p>@Test—— 将一个类中方法修饰成一个测试方法</p>\n<p>@BeforeClass—— 在所有方法执行前被执行，全局只会执行一次，而且是第一个运行</p>\n<p>@AfterClass—— 在所有方法执行后被执行，全局只会执行一次，而且是最后一个运行</p>\n<p>@Before—— 在每一个测试方法被运行前执行一次</p>\n<p>@After—— 在每一个测试方法被运行后执行一次</p>\n<p>@Ignore—— 所修饰的测试方法会被测试运行器忽略</p>\n<p>@RunWith—— 更改测试运行器 org.junit.runner.Runner</p>\n<h1 id=\"eclipse-中-junit-的安装及初始使用\"><a class=\"anchor\" href=\"#eclipse-中-junit-的安装及初始使用\">#</a> Eclipse 中 JUnit 的安装及初始使用</h1>\n<ol>\n<li>\n<p>下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdW5pdC5vcmcvanVuaXQ0Lw==\">JUnit – About</span></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230414165610.png\" alt=\"\" /></p>\n<p>点击”Download and install“</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230414165745.png\" alt=\"\" /></p>\n<p>点击  <code>junit.jar</code></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230414170010.png\" alt=\"\" /></p>\n<p>点击右边栏 “Latest version” 后的 “View all”</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230414170124.png\" alt=\"\" /></p>\n<p>点击 “Browse”</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230414170215.png\" alt=\"\" /></p>\n<p>点击 “junit-4.13.2.jar” 即可下载</p>\n</li>\n<li>\n<p>同理下载 “hamcrest-core-2.2-javadoc.jar”</p>\n</li>\n<li>\n<p>为项目添加 JUnit 类库</p>\n<p>打开 eclipse -&gt; 点击项目名 -&gt; 再点击菜单栏的 “Project” -&gt; Properties</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230414171248.png\" alt=\"\" /></p>\n<p>选择 Java Build Path -&gt; Libraries -&gt; Add Library -&gt; JUnit -&gt; Next -&gt; 下拉 “JUnit library version” 选择 “JUnit 4” -&gt; 点击 “Finish”</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230415200905.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>在 eclipse 中添加 junit.jar 包和 hamcrest.core.jar 包</p>\n<p>点击 JUnit 4 -&gt; Add External JARs -&gt; 选择刚刚下载的 2 个 jar 包 -&gt; 点击 “打开” 则添加成功</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230415201220.png\" alt=\"\" /></p>\n<p>点击 “Apply and Close”</p>\n</li>\n<li>\n<p>为项目添加 JUnit 库</p>\n<p>项目名右键 -&gt; properties -&gt; Java Build Path -&gt; Libraries -&gt; Add Library -&gt; JUnit -&gt; Next -&gt; Apply and Close</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230415202220.png\" alt=\"\" /></p>\n<p>这里表示你已经添加 JUnit 类库成功</p>\n</li>\n<li>\n<p>生成 JUnit 测试框架</p>\n<p>在需要测试的类文件名处右键 -&gt; new -&gt; Other... -&gt; JUnit -&gt; JUnit Test Case -&gt; 选择 “New JUnit 4 test” -&gt; 更改”Package“ -&gt; 勾选”@Before setUp ()“ -&gt; Next</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230415203136.png\" alt=\"\" /></p>\n<p>勾选 “GetMax” 和 “Object” -&gt; Finish</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230415203328.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>编写测试代码</p>\n</li>\n<li>\n<p>使用 JUnit 运行测试代码</p>\n<p>GetMaxTest.java 中点击鼠标右键 -&gt; Run As -&gt; 1 JUnit Test 启动 JUnit</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230415203712.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>运行</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230415203857.png\" alt=\"\" /></p>\n</li>\n</ol>\n",
            "tags": [
                "软件测试与质量保证",
                "软件测试",
                "JUnit"
            ]
        },
        {
            "id": "https://60saint.github.io/software-test/pmdTest/",
            "url": "https://60saint.github.io/software-test/pmdTest/",
            "title": "PMD 基于缺陷模式的测试",
            "date_published": "2023-04-13T16:00:00.000Z",
            "content_html": "<h1 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h1>\n<ul>\n<li>PMD——Java 程序代码缺陷的开源静态检查工具</li>\n</ul>\n<h1 id=\"eclipse-安装-pmd-插件\"><a class=\"anchor\" href=\"#eclipse-安装-pmd-插件\">#</a> Eclipse 安装 PMD 插件</h1>\n<ol>\n<li>\n<p>在 Eclipse 的菜单中找到 “Help” --&gt; “Eclipse MarketPlace...”</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/20230413153813.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>打开之后，会看到如图所示界面，在 “Find” 的搜索框中输入 “PMD”，点击搜索</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/20230413154023.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>会看到 pmd-eclipse-plugin 7.0.0，点击”Install“安装（这里我已经安装过了，所以显示”Installed“）</p>\n</li>\n<li>\n<p>弹出界面，点击”Confirm“</p>\n</li>\n<li>\n<p>跳转界面，选勾接受条款，点击”Finish“</p>\n</li>\n<li>\n<p>安装完成之后，提示重启 Eclipse，点击”Yes“</p>\n</li>\n<li>\n<p>查看 PMD。在菜单栏中”Window“--&gt; ”Preferences“</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/20230413155500.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>可查看到 PMD，则安装成功</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/20230413155556.png\" alt=\"\" /></p>\n</li>\n</ol>\n<h1 id=\"使用-pmd-测试程序\"><a class=\"anchor\" href=\"#使用-pmd-测试程序\">#</a> 使用 PMD 测试程序</h1>\n<ol>\n<li>\n<p>让 PMD view 在控制台中显示</p>\n<p>”Windows“--&gt; ”Show View“ --&gt; ”Other“ --&gt; “Violations Outline” 和 “Violations Overview” 各自 “Open” 一次</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/20230413155914.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>完成之后，控制台如图所示</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/20230413160438.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>右键点击项目文件，选择 “PMD” --&gt; “Check Code”</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/20230413161523.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>控制台即显示缺陷信息</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/20230413161704.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>点击右上角 “最大化” 可全屏查看</p>\n<p><img data-src=\"https://raw.githubusercontent.com/60sAINT/images/main/20230413161844.png\" alt=\"\" /></p>\n</li>\n</ol>\n<p>⚠️：代码没有语法错误测试才能成功</p>\n",
            "tags": [
                "软件测试与质量保证",
                "软件测试",
                "PMD"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/ECharts/",
            "url": "https://60saint.github.io/front-end/ECharts/",
            "title": "ECharts",
            "date_published": "2022-04-21T16:00:00.000Z",
            "content_html": "<h1 id=\"什么是数据可视化\"><a class=\"anchor\" href=\"#什么是数据可视化\">#</a> 什么是数据可视化</h1>\n<h2 id=\"数据可视化\"><a class=\"anchor\" href=\"#数据可视化\">#</a> 数据可视化</h2>\n<ul>\n<li>数据可视化主要目的：借助于图形化手段，清晰有效地传达与沟通信息。</li>\n<li>数据可视化可以把数据从冰冷的数字转换成图形，揭示蕴含在数据中的规律和道理。</li>\n</ul>\n<h2 id=\"数据可视化的场景\"><a class=\"anchor\" href=\"#数据可视化的场景\">#</a> 数据可视化的场景</h2>\n<p>目前互联网公司通常有这么几大类的可视化需求：</p>\n<ul>\n<li>通用报表</li>\n<li>移动端图表</li>\n<li>大屏可视化</li>\n<li>图编辑 &amp; 图分析</li>\n<li>地理可视化</li>\n</ul>\n<h2 id=\"常见的数据可视化库\"><a class=\"anchor\" href=\"#常见的数据可视化库\">#</a> 常见的数据可视化库</h2>\n<ul>\n<li>D3.js，目前 Web 端评价最高的 Javascript 可视化工具库 (入手难)</li>\n<li>ECharts.js。百度出品的一个开源 Javascript 数据可视化库</li>\n<li>Highcharts.js，国外的前端数据可视化库，非商用免费，被许多国外大公司所使用</li>\n<li>AntV，蚂蚁金服全新一代数据可视化解决方案</li>\n</ul>\n<h1 id=\"echarts-简介\"><a class=\"anchor\" href=\"#echarts-简介\">#</a> ECharts 简介</h1>\n<p>ECharts 是一个使用 JavaScript 实现的开源可视化库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器（IE8/9/10/11，Chrome，Firefox，Safari 等），底层依赖矢量图形库 ZRender，提供直观，交互丰富，可高度个性化定制的数据可视化图表。</p>\n<p>官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWNoYXJ0c2pzLmNvbS96aC9pbmRleC5odG1s\">https://www.echartsjs.com/zh/index.html</span></p>\n<ul>\n<li>丰富的可视化类型</li>\n<li>多种数据格式支持</li>\n<li>流数据的支持</li>\n<li>移动端优化</li>\n<li>跨平台使用</li>\n<li>绚丽的特效详</li>\n<li>细的文档说明</li>\n</ul>\n<h1 id=\"echarts-的基本使用\"><a class=\"anchor\" href=\"#echarts-的基本使用\">#</a> Echarts 的基本使用</h1>\n<h2 id=\"echarts-使用五步曲\"><a class=\"anchor\" href=\"#echarts-使用五步曲\">#</a> ECharts 使用五步曲</h2>\n<ol>\n<li>\n<p>下载并引入 echarts.js 文件</p>\n<p>图表依赖这个 js 库</p>\n</li>\n<li>\n<p>准备一个具备大小的 DOM 容器</p>\n<p>生成的图表会放入这个容器内</p>\n</li>\n<li>\n<p>初始化 echarts 实例对象</p>\n<p>实例化 echarts 对象</p>\n</li>\n<li>\n<p>指定配置项和数据 (option)</p>\n<p>根据具体需求修改配置选项</p>\n</li>\n<li>\n<p>将配置项设置给 echarts 实例对象</p>\n<p>让 echarts 对象根据修改好的配置生效</p>\n</li>\n</ol>\n<h2 id=\"相关配置讲解\"><a class=\"anchor\" href=\"#相关配置讲解\">#</a> 相关配置讲解</h2>\n<ul>\n<li>\n<p>title：标题组件</p>\n</li>\n<li>\n<p>tooltip：提示框组件</p>\n</li>\n<li>\n<p>legend：图例组件</p>\n</li>\n<li>\n<p>toolbox: 工具栏</p>\n</li>\n<li>\n<p>grid：直角坐标系内绘图网格</p>\n</li>\n<li>\n<p>xAxis：直角坐标系 grid 中的 x 轴</p>\n</li>\n<li>\n<p>yAxis：直角坐标系 grid 中的 y 轴</p>\n</li>\n<li>\n<p>series: 系列列表</p>\n<ul>\n<li>\n<p>type: 类型 (什么类型的图表) 比如 line 是折线 bar 柱形等</p>\n</li>\n<li>\n<p>name: 系列名称，用于 tooltip 的显示，legend 的图例筛选变化</p>\n</li>\n<li>\n<p>stack: 数据堆叠。如果设置相同值，则会数据堆叠。</p>\n<p>第二个数据值 = 第一个数据值 + 第二个数据值</p>\n<p>第三个数据值 = 第二个数据值 + 第三个数据值…. 依次叠加</p>\n<p>如果给 stack 指定不同值或者去掉这个属性则不会发生数据堆叠</p>\n</li>\n</ul>\n</li>\n<li>\n<p>color：调色盘颜色列表</p>\n</li>\n</ul>\n<p>其余配置还有具体细节查阅文档：文档菜单 — 配置项手册</p>\n<p>学 echarts 关键在于学会查阅文档，根据需求修改配置</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230801231019.png\" alt=\"\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">'Stacked Line'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">tooltip</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">trigger</span><span class=\"token operator\">:</span> <span class=\"token string\">'axis'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token literal-property property\">legend</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Email'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Union Ads'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token literal-property property\">grid</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> <span class=\"token string\">'3%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> <span class=\"token string\">'4%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token literal-property property\">bottom</span><span class=\"token operator\">:</span> <span class=\"token string\">'3%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token literal-property property\">containLabel</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token literal-property property\">toolbox</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token literal-property property\">feature</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token literal-property property\">saveAsImage</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token literal-property property\">xAxis</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token literal-property property\">boundaryGap</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Mon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Wed'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Thu'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Fri'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sun'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token literal-property property\">yAxis</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'value'</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token literal-property property\">series</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Email'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token literal-property property\">stack</span><span class=\"token operator\">:</span> <span class=\"token string\">'Total'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">134</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">230</span><span class=\"token punctuation\">,</span> <span class=\"token number\">210</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Union Ads'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token literal-property property\">stack</span><span class=\"token operator\">:</span> <span class=\"token string\">'Total'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">220</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182</span><span class=\"token punctuation\">,</span> <span class=\"token number\">191</span><span class=\"token punctuation\">,</span> <span class=\"token number\">234</span><span class=\"token punctuation\">,</span> <span class=\"token number\">290</span><span class=\"token punctuation\">,</span> <span class=\"token number\">330</span><span class=\"token punctuation\">,</span> <span class=\"token number\">310</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.jsdelivr.net/gh/60sAINT/images@latest/20230801231158.png\" alt=\"\" /></p>\n",
            "tags": [
                "前端",
                "数据可视化",
                "ECharts",
                "前端"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/JS/JS-%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E7%AF%87/",
            "url": "https://60saint.github.io/front-end/JS/JS-%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E7%AF%87/",
            "title": "JS - 本地存储篇",
            "date_published": "2022-03-02T16:00:00.000Z",
            "content_html": "<p>随着互联网的快速发展，基于网页的应用越来越普遍，同时也变的越来越复杂，为了满足各种各样的需求，会经常性在本地存储大量的数据，HTML5 规范提出了相关解决方案。</p>\n<p><strong>本地存储特性</strong></p>\n<ol>\n<li>数据存储在用户浏览器中</li>\n<li>设置、读取方便、甚至页面刷新不丢失数据</li>\n<li>容量较大，  <code>sessionStorage</code>  约 5M、  <code>localStorage</code>  约 20M</li>\n<li>只能存储字符串，可以将对象  <code>JSON.stringify()</code>  编码后存储</li>\n</ol>\n<h1 id=\"windowsessionstorage\"><a class=\"anchor\" href=\"#windowsessionstorage\">#</a>  <code>window.sessionStorage</code></h1>\n<ol>\n<li>生命周期为关闭浏览器窗口（就算刷新页面数据也不会丢失）</li>\n<li>在同一个窗口 (页面) 下数据可以共享</li>\n<li>以键值对的形式存储使用</li>\n</ol>\n<p><strong>存储数据：</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>存储的数据可以在此查看：</p>\n<p><strong>获取数据：</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>删除数据：</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>删除所有数据：</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>set<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>存储数据<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>获取数据<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>remove<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>删除数据<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>del<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>清空所有数据<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ipt <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> set <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.set'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> get <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.get'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> remove <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.remove'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> del <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.del'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 存储数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">var</span> val <span class=\"token operator\">=</span> ipt<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uname'</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pwd'</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 获取数据</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>get<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uname'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 删除数据</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>remove<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uname'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 删除所有数据</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>del<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"windowlocalstorage\"><a class=\"anchor\" href=\"#windowlocalstorage\">#</a>  <code>window.localStorage</code></h1>\n<ol>\n<li>声明周期永久生效，除非手动删除，否则关闭页面也会存在</li>\n<li>可以多窗口（页面）共享（同一浏览器可以共享）</li>\n<li>以键值对的形式存储使用</li>\n</ol>\n<p><strong>存储数据：</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>获取数据：</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>删除数据：</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>删除所有数据：</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>📗<strong>案例：记住用户名</strong></p>\n<p>如果勾选记住用户名，下次用户打开浏览器，就在文本框里面自动显示上次登录的用户名</p>\n<ol>\n<li>把数据存起来，用到本地存储</li>\n<li>关闭页面，也可以显示用户名，所以用到  <code>localStorage</code></li>\n<li>打开页面，先判断是否有这个用户名，如果有，就在表单里面显示用户名，并且勾选复选框</li>\n<li>当复选框发生改变的时候 change 事件</li>\n<li>如果勾选，就存储，否则就移除</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>remember<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 记住用户名</pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> username <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> remember <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#remember'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   username<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   remember<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>remember<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n",
            "tags": [
                "前端",
                "JavaScript",
                "前端",
                "JavaScript"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/JS/JS-PC%E7%AB%AF%E7%BD%91%E9%A1%B5%E7%89%B9%E6%95%88/",
            "url": "https://60saint.github.io/front-end/JS/JS-PC%E7%AB%AF%E7%BD%91%E9%A1%B5%E7%89%B9%E6%95%88/",
            "title": "JS - PC端网页特效",
            "date_published": "2022-03-01T16:00:00.000Z",
            "content_html": "<h1 id=\"元素偏移量-offset-系列\"><a class=\"anchor\" href=\"#元素偏移量-offset-系列\">#</a> 元素偏移量 offset 系列</h1>\n<p>offset 翻译过来就是偏移量，我们使用 offset 系列相关属性可以动态的得到该元素的位置（偏移）、大小等。</p>\n<ul>\n<li>获得元素距离带有定位父元素的位置</li>\n<li>获得元素自身的大小（宽度高度）</li>\n<li>注意：返回的数值都不带单位</li>\n</ul>\n<p>offset 系列常用属性：</p>\n<table>\n<thead>\n<tr>\n<th>offset 系列属性</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>element.offsetParent</code></td>\n<td>返回作为该元素带有定位的父级元素，如果父级都没有定位则返回 body</td>\n</tr>\n<tr>\n<td><code>element.offsetTop</code></td>\n<td>返回元素相对带有定位父元素上方的偏移</td>\n</tr>\n<tr>\n<td><code>element.offsetLeft</code></td>\n<td>返回元素相对带有定位父元素左边框的偏移</td>\n</tr>\n<tr>\n<td><code>element.offsetWidth</code></td>\n<td>返回自身包括 padding、边框、内容区的宽度，返回数值不带单位</td>\n</tr>\n<tr>\n<td><code>element.offsetHeight</code></td>\n<td>返回自身包括 padding、边框、内容区的高度，返回数值不带单位</td>\n</tr>\n</tbody>\n</table>\n<p><strong>offset 与 style 区别</strong></p>\n<p>offset：</p>\n<ul>\n<li>offset 可以得到任意样式表中的样式值</li>\n<li>offset 系列获得的数值是没有单位的</li>\n<li><code>offsetWidth</code>  包含 padding+border+width</li>\n<li><code>offsetWidth</code>  等属性是只读属性，只能获取不能赋值</li>\n<li>想要获取元素大小位置，用 offset 更合适</li>\n</ul>\n<p>style：</p>\n<ul>\n<li>style 只能得到行内样式表中的样式值</li>\n<li><code>style.width</code>  获得的是带有单位的字符串</li>\n<li><code>style.width</code>  获得不包含 padding 和 border 的值</li>\n<li><code>style.width</code>  是可读写属性，可以获取也可以赋值</li>\n<li>想要给元素更改值，则需要用 style 改变</li>\n</ul>\n<blockquote>\n<p>📗<strong>案例：获取鼠标在盒子内的坐标</strong></p>\n<ol>\n<li>我们在盒子内点击，想要得到鼠标距离盒子左右的距离。</li>\n<li>首先得到鼠标在页面中的坐标  <code>(e.pageX, e.pageY)</code></li>\n<li>其次得到盒子在页面中的距离  <code>( box.offsetLeft, box.offsetTop)</code></li>\n<li>用鼠标距离页面的坐标减去盒子在页面中的距离，得到鼠标在盒子内的坐标</li>\n<li>如果想要移动一下鼠标，就要获取最新的坐标，使用鼠标移动事件 mousemove</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>box<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offsetLeft<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>pageY <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'x坐标是'</span> <span class=\"token operator\">+</span> x <span class=\"token operator\">+</span> <span class=\"token string\">'，y坐标是'</span> <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<h1 id=\"元素可视区-client-系列\"><a class=\"anchor\" href=\"#元素可视区-client-系列\">#</a> 元素可视区 client 系列</h1>\n<p>client 翻译过来就是客户端，我们使用 client 系列的相关属性来获取元素可视区的相关信息。通过 client 系列的相关属性可以动态的得到该元素的边框大小、元素大小等。</p>\n<table>\n<thead>\n<tr>\n<th>client 系列属性</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>element.clientTop</code></td>\n<td>返回元素上边框的大小</td>\n</tr>\n<tr>\n<td><code>element.clientLeft</code></td>\n<td>返回元素左边框的大小</td>\n</tr>\n<tr>\n<td><code>element.clientWidth</code></td>\n<td>返回自身包括 padding、内容区的宽度，不含边框，返回数值不带单位</td>\n</tr>\n<tr>\n<td><code>element.clientHeight</code></td>\n<td>返回自身包括 padding、内容区的高度，不含边框，返回数值不带单位</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"元素滚动-scroll-系列\"><a class=\"anchor\" href=\"#元素滚动-scroll-系列\">#</a> 元素滚动 scroll 系列</h1>\n<p>scroll 翻译过来就是滚动的，我们使用 scroll 系列的相关属性可以动态的得到该元素的大小、滚动距离等。</p>\n<table>\n<thead>\n<tr>\n<th>scroll 系列属性</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>element.scrollTop</code></td>\n<td>返回被卷去的上侧距离，返回数值不带单位</td>\n</tr>\n<tr>\n<td><code>element.scrollLeft</code></td>\n<td>返回被卷去的左侧距离，返回数值不带单位</td>\n</tr>\n<tr>\n<td><code>element.scrollWidth</code></td>\n<td>返回自身实际的宽度，不含边框，返回数值不带单位</td>\n</tr>\n<tr>\n<td><code>element.scrollHeight</code></td>\n<td>返回自身实际的高度，不含边框，返回数值不带单位</td>\n</tr>\n</tbody>\n</table>\n<p><strong>页面被卷去的头部：</strong></p>\n<p>如果浏览器的高（或宽）度不足以显示整个页面时，会自动出现滚动条。当滚动条向下滚动时，页面上面被隐藏掉的高度，我们就称为页面被卷去的头部。滚动条在滚动时会触发  <code>onscroll</code>  事件。</p>\n<p>可以通过  <code>window.pageYOffset</code>  获得。如果是被卷去的左侧，  <code>window.pageXOffset</code></p>\n<h1 id=\"mouseenter-和-mouseover-的区别\"><a class=\"anchor\" href=\"#mouseenter-和-mouseover-的区别\">#</a>  <code>mouseenter</code>  和  <code>mouseover</code>  的区别</h1>\n<ul>\n<li>当鼠标移动到元素上时就会触发  <code>mouseenter</code>  事件</li>\n<li>类似 mouseover，它们两者之间的差别是：</li>\n<li>mouseover 鼠标经过自身盒子会触发，经过子盒子还会触发。  <code>mouseenter</code>  只会经过自身盒子触发</li>\n<li>之所以这样，是因为  <code>mouseenter</code>  不会冒泡</li>\n<li>跟  <code>mouseenter</code>  搭配，鼠标离开  <code>mouseleave</code>  同样不会冒泡</li>\n</ul>\n<h1 id=\"动画函数封装\"><a class=\"anchor\" href=\"#动画函数封装\">#</a> 动画函数封装</h1>\n<h2 id=\"动画实现原理\"><a class=\"anchor\" href=\"#动画实现原理\">#</a> 动画实现原理</h2>\n<p><strong>核心原理</strong>：通过定时器 setInterval () 不断移动盒子位置。</p>\n<p>实现步骤：</p>\n<ol>\n<li>获得盒子当前位置</li>\n<li>让盒子在当前位置加上 1 个移动距离</li>\n<li>利用定时器不断重复这个操作</li>\n<li>加一个结束定时器的条件</li>\n<li>注意此元素需要添加定位，才能使用  <code>element.style.left</code></li>\n</ol>\n<h2 id=\"动画函数简单封装\"><a class=\"anchor\" href=\"#动画函数简单封装\">#</a> 动画函数简单封装</h2>\n<p>注意函数需要传递 2 个参数，动画对象和移动到的距离。</p>\n<h2 id=\"动画函数给不同元素记录不同定时器\"><a class=\"anchor\" href=\"#动画函数给不同元素记录不同定时器\">#</a> 动画函数给不同元素记录不同定时器</h2>\n<p>如果多个元素都使用这个动画函数，每次都要 var 声明定时器。我们可以给不同的元素使用不同的定时器（自己专门用自己的定时器）。</p>\n<p>核心原理：利用 JS 是一门动态语言，可以很方便的给当前对象添加属性。</p>\n<h2 id=\"缓动效果原理\"><a class=\"anchor\" href=\"#缓动效果原理\">#</a> 缓动效果原理</h2>\n<p>缓动动画就是让元素运动速度有所变化，最常见的是让速度慢慢停下来</p>\n<p>思路：</p>\n<ol>\n<li>让盒子每次移动的距离慢慢变小，速度就会慢慢落下来。</li>\n<li>核心算法：(目标值 - 现在的位置)/10 做为每次移动的距离步长</li>\n<li>停止的条件是：让当前盒子位置等于目标位置就停止定时器</li>\n<li>注意步长值需要取整</li>\n</ol>\n<h2 id=\"动画函数多个目标值之间移动\"><a class=\"anchor\" href=\"#动画函数多个目标值之间移动\">#</a> 动画函数多个目标值之间移动</h2>\n<p>可以让动画函数从 800 移动到 500。</p>\n<p>当我们点击按钮时候，判断步长是正值还是负值</p>\n<ol>\n<li>如果是正值，则步长往大了取整</li>\n<li>如果是负值，则步长向小了取整</li>\n</ol>\n<h2 id=\"动画函数添加回调函数\"><a class=\"anchor\" href=\"#动画函数添加回调函数\">#</a> 动画函数添加回调函数</h2>\n<p><strong>回调函数原理</strong>：函数可以作为一个参数。将这个函数作为参数传到另一个函数里面，当那个函数执行完之后，再执行传进去的这个函数，这个过程就叫做回调。</p>\n<p>回调函数写的位置：定时器结束的位置。</p>\n<h2 id=\"动画函数封装到单独-js-文件里面\"><a class=\"anchor\" href=\"#动画函数封装到单独-js-文件里面\">#</a> 动画函数封装到单独 JS 文件里面</h2>\n<p>因为以后经常使用这个动画函数，可以单独封装到一个 JS 文件里面，使用的时候引用这个 JS 文件即可。</p>\n<ol>\n<li>单独新建一个 JS 文件。</li>\n<li>HTML 文件引入 JS 文件。</li>\n</ol>\n",
            "tags": [
                "前端",
                "JavaScript",
                "前端",
                "JavaScript"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/JS/JS-BOM%E7%AF%87/",
            "url": "https://60saint.github.io/front-end/JS/JS-BOM%E7%AF%87/",
            "title": "JS - BOM篇",
            "date_published": "2022-02-27T16:00:00.000Z",
            "content_html": "<h1 id=\"bom-概述\"><a class=\"anchor\" href=\"#bom-概述\">#</a> BOM 概述</h1>\n<h2 id=\"什么是-bom\"><a class=\"anchor\" href=\"#什么是-bom\">#</a> 什么是 BOM</h2>\n<p>BOM（Browser Object Model）即<strong>浏览器对象模型</strong>，它提供了独立于内容而与浏览器窗口进行交互的对象，其核心对象是 window。</p>\n<p>BOM 由一系列相关的对象构成，并且每个对象都提供了很多方法与属性。</p>\n<p>BOM 缺乏标准，JavaScript 语法的标准化组织是 ECMA，DOM 的标准化组织是 W3C，BOM 最初是 Netscape 浏览器标准的一部分。</p>\n<ul>\n<li>把「浏览器」当做一个「对象」来看待</li>\n<li>BOM 的顶级对象是 window</li>\n<li>BOM 学习的是浏览器窗口交互的一些对象</li>\n<li>BOM 是浏览器厂商在各自浏览器上定义的，兼容性较差</li>\n</ul>\n<h2 id=\"bom-的构成\"><a class=\"anchor\" href=\"#bom-的构成\">#</a> BOM 的构成</h2>\n<p>BOM 比 DOM 更大，它包含 DOM。</p>\n<p><strong>window 对象是浏览器的顶级对象</strong>，它具有双重角色。</p>\n<ol>\n<li>它是 JS 访问浏览器窗口的一个接口。</li>\n<li>它是一个全局对象。定义在全局作用域中的变量、函数都会变成 window 对象的属性和方法。</li>\n</ol>\n<p>在调用的时候可以省略 window，前面学习的对话框都属于 window 对象方法，如 alert ()、prompt () 等。</p>\n<p>** 注意：**window 下的一个特殊属性 <span class=\"exturl\" data-url=\"aHR0cDovL3dpbmRvdy5uYW1l\">window.name</span>，它本身是有意义的，其值是一个空字符串</p>\n<h1 id=\"window-对象的常见事件\"><a class=\"anchor\" href=\"#window-对象的常见事件\">#</a> window 对象的常见事件</h1>\n<h2 id=\"窗口加载事件\"><a class=\"anchor\" href=\"#窗口加载事件\">#</a> 窗口加载事件</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>window.onload 是窗口 (页面）加载事件，当文档内容完全加载完成会触发该事件 (包括图像、脚本文件、CSS 文件等), 就调用的处理函数。</p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>有了 window.onload 就可以把 JS 代码写到页面元素的上方，因为 onload 是等页面内容全部加载完毕，再去执行处理函数。</li>\n<li>window.onload 传统注册事件方式只能写一次，如果有多个，会以最后一个 window.onload 为准。</li>\n<li>如果使用 addEventListener 则没有限制</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>DOMContentLoaded 事件触发时，仅当 DOM 加载完成，不包括样式表，图片，flash 等等。</p>\n<p>如果页面的图片很多的话，从用户访问到 onload 触发可能需要较长的时间，交互效果就不能实现，必然影响用户的体验，此时用 DOMContentLoaded 事件比较合适。</p>\n<h2 id=\"调整窗口大小事件\"><a class=\"anchor\" href=\"#调整窗口大小事件\">#</a> 调整窗口大小事件</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onresize</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resize\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>window.onresize 是调整窗口大小加载事件，当触发时就调用的处理函数。</p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>只要窗口大小发生像素变化，就会触发这个事件。</li>\n<li>我们经常利用这个事件完成响应式布局。window.innerWidth：当前浏览器可视窗口的宽度</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'load'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">&lt;=</span> <span class=\"token number\">800</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            div<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            div<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'block'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"定时器\"><a class=\"anchor\" href=\"#定时器\">#</a> 定时器</h1>\n<h2 id=\"settimeout-定时器\"><a class=\"anchor\" href=\"#settimeout-定时器\">#</a> setTimeout () 定时器</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>调用函数<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>延迟的毫秒数<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>setTimeout () 方法用于设置一个定时器，该定时器在定时器到期后执行调用函数。</p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>window 可以省略。</li>\n<li>这个调用函数可以直接写函数，或者写函数名或者采取字符串‘函数名 ()' 三种形式。第三种不推荐</li>\n<li>延迟的毫秒数省略默认是 0，如果写，必须是毫秒。</li>\n<li>因为定时器可能有很多，所以我们经常给定时器赋值一个标识符。</li>\n</ol>\n<p>setTimeout () 这个调用函数我们也称为回调函数 callback</p>\n<p>普通函数是按照代码顺序直接调用。</p>\n<p>而这个函数，需要等待时间，时间到了才去调用这个函数，因此称为回调函数。</p>\n<p>简单理解：回调，就是回头调用的意思。上一件事干完，再回头再调用这个函数。</p>\n<p>以前我们讲的 element.onclick = function (){} 或者 element.addEventListener (“click”, fn); 里面的函数也是回调函数。</p>\n<blockquote>\n<p>📗<strong>案例：5 秒后自动关闭的广告</strong></p>\n<ol>\n<li>核心思路：5 秒之后，就把这个广告隐藏起来</li>\n<li>用定时器 setTimeout</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/ad.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ad<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ad <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.ad'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">setTimemout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   ad<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"停止-settimeout-定时器\"><a class=\"anchor\" href=\"#停止-settimeout-定时器\">#</a> 停止 setTimeout () 定时器</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeoutID<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>clearTimeout () 方法取消了先前通过调用 setTimeout () 建立的定时器。</p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>window 可以省略。</li>\n<li>里面的参数就是定时器的标识符。</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>点击停止定时器<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'爆炸'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"setinterval-定时器\"><a class=\"anchor\" href=\"#setinterval-定时器\">#</a> setInterval () 定时器</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>回调函数<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>间隔的毫秒数<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>setInterval () 方法重复调用一个函数，每隔这个时间，就去调用一次回调函数。</p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>window 可以省略。</li>\n<li>这个调用函数可以直接写函数，或者写函数名或者采取字符串 ' 函数名 ()' 三种形式。</li>\n<li>间隔的毫秒数省略默认是 0，如果写，必须是毫秒，表示每隔多少毫秒就自动调用这个函数。</li>\n<li>因为定时器可能有很多，所以我们经常给定时器赋值一个标识符。</li>\n<li>第一次执行也是间隔毫秒数之后执行，之后每隔毫秒数就执行一次。</li>\n</ol>\n<blockquote>\n<p>📗<strong>案例：倒计时</strong></p>\n<ol>\n<li>这个倒计时是不断变化的，因此需要定时器来自动变化（setInterval）</li>\n<li>三个黑色盒子里面分别存放时分秒</li>\n<li>三个黑色盒子利用 innerHTML 放入计算的小时分钟秒数</li>\n<li>第一次执行也是间隔毫秒数，因此刚刷新页面会有空白</li>\n<li>最好采取封装函数的方式，这样可以先调用一次这个函数，防止刚开始刷新页面有空白问题</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hour<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>minute<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>second<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> hour <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.hour'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> minute <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.minute'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> second <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.second'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> futureTime <span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2023-8-1 12:30:00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回的是未来秒杀结束的总毫秒数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 先调用一次这个函数，防止第一次刷新页面有空白</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>countDown<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">var</span> nowTime <span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回的是当前时间总的毫秒数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">var</span> times <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>futureTime <span class=\"token operator\">-</span> nowTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//times 是剩余时间总的秒数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">var</span> h <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>times <span class=\"token operator\">/</span> <span class=\"token number\">60</span> <span class=\"token operator\">/</span> <span class=\"token number\">60</span> <span class=\"token operator\">%</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 时</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   h <span class=\"token operator\">=</span> h <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> h <span class=\"token operator\">:</span> h<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   hour<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token keyword\">var</span> m <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>times <span class=\"token operator\">/</span> <span class=\"token number\">60</span> <span class=\"token operator\">%</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 分</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   m <span class=\"token operator\">=</span> m <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> m <span class=\"token operator\">:</span> m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   minute<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>times <span class=\"token operator\">%</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 秒</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   s <span class=\"token operator\">=</span> s <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> s <span class=\"token operator\">:</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  second<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"停止-setinterval-定时器\"><a class=\"anchor\" href=\"#停止-setinterval-定时器\">#</a> 停止 setInterval () 定时器</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>intervalID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>clearInterval () 方法取消了先前通过调用 setInterval () 建立的定时器。</p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>window 可以省略。</li>\n<li>里面的参数就是定时器的标识符。</li>\n</ol>\n<blockquote>\n<p>📗<strong>案例：发送短信</strong></p>\n<p>点击按钮后，该按钮 60 秒之内不能再次点击，防止重复发送短信</p>\n<ol>\n<li>按钮点击之后，会禁用 disabled 为 true</li>\n<li>同时按钮里面的内容会变化，注意 button 里面的内容通过 innerHTML 修改</li>\n<li>面秒数是有变化的，因此需要用到定时器</li>\n<li>定义一个变量，在定时器里面，不断递减</li>\n<li>如果变量为 0 说明到了时间，我们需要停止定时器，并且复原按钮初始状态。</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>手机号码：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>发送<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> time <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 定义剩下的秒数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   btn<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">var</span> timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>time <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>           <span class=\"token comment\">// 清除定时器和复原按钮</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>           <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           btn<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>           btn<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'发送'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>           time <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 剩下的秒数复原为 3</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>           btn<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'还剩下'</span> <span class=\"token operator\">+</span> time <span class=\"token operator\">+</span> <span class=\"token string\">'秒'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       \ttime<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"this\"><a class=\"anchor\" href=\"#this\">#</a> this</h2>\n<p>this 的指向在函数定义的时候是确定不了的，只有函数执行的时候才能确定 this 到底指向谁，一般情况下 this 最终指向的是那个调用它的对象</p>\n<p>现阶段，我们先了解一下几个 this 指向</p>\n<ol>\n<li>\n<p>全局作用域或者普通函数中 this 指向全局对象 window（注意定时器里面的 this 指向 window）</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 相当于 window.fn ();</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>方法调用中谁调用 this 指向谁</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function-variable function\">sayHi</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>o<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// o</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//btn 标签</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//btn 标签</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">var</span> timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>构造函数中 this 指向构造函数的实例</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//this 指向的是实例对象 fun</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> fun <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"js-执行队列\"><a class=\"anchor\" href=\"#js-执行队列\">#</a> JS 执行队列</h1>\n<h2 id=\"js-是单线程\"><a class=\"anchor\" href=\"#js-是单线程\">#</a> JS 是单线程</h2>\n<p>JavaScript 语言的一大特点就是单线程，也就是说，同一个时间只能做一件事。这是因为 Javascript 这门脚本语言诞生的使命所致 ——JavaScript 是为处理页面中用户的交互，以及操作 DOM 而诞生的。比如我们对某个 DOM 元素进行添加和删除操作，不能同时进行。应该先进行添加，之后再删除。</p>\n<p>单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。这样所导致的问题是：如果 JS 执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞的感觉。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 如果按照单线程的任务来说的话，先把 1 打印出来，过 1 秒后才打印 3，第三个任务必须也跟着等 1 秒之后才打印 2</span></pre></td></tr></table></figure><h2 id=\"同步和异步\"><a class=\"anchor\" href=\"#同步和异步\">#</a> 同步和异步</h2>\n<p>为了解决这个问题，利用多核 CPU 的计算能力，HTML5 提出 Web Worker 标准，允许 JavaScript 脚本创建多个线程。于是，JS 中出现了同步和异步。</p>\n<p><strong>同步</strong></p>\n<p>前一个任务结束后再执行后一个任务，程序的执行顺序与任务的排列顺序是一致的、同步的。比如做饭的同步做法：我们要烧水煮饭，等水开了（10 分钟之后），再去切菜，炒菜。</p>\n<p><strong>异步</strong></p>\n<p>你在做一件事情时，因为这件事情会花费很长时间，在做这件事的同时，你还可以去处理其他事情。比如做饭的异步做法，我们在烧水的同时，利用这 10 分钟，去切菜，炒菜。</p>\n<p><strong>他们的本质区别：这条流水线上各个流程的执行顺序不同。</strong></p>\n<pre><code class=\"language-JS\">console.log(1);\nsetTimeout(function () &#123;\n\tconsole.log(3);\n&#125;, 1000);\nconsole.log(2);\n// 先打印1，打印3的代码执行时间比较长，不会等着打印完再执行，而是先打印2，然后再回头打印3\n</code></pre>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 执行的结果仍是 1 2 3</span></pre></td></tr></table></figure><p><strong>同步任务</strong></p>\n<p>同步任务都在主线程上执行，形成一个执行栈。</p>\n<p><strong>异步任务</strong></p>\n<p>JS 的异步是通过回调函数实现的。</p>\n<p>一般而言，异步任务有以下三种类型:</p>\n<ol>\n<li>普通事件，如 click、resize 等</li>\n<li>资源加载，如 load、error 等</li>\n<li>定时器，包括 setInterval、setTimeout 等</li>\n</ol>\n<p>异步任务相关回调函数添加到任务队列中（任务队列也称为消息队列）。</p>\n<h2 id=\"js-执行机制\"><a class=\"anchor\" href=\"#js-执行机制\">#</a> JS 执行机制</h2>\n<ol>\n<li>先执行执行栈中的同步任务。</li>\n<li>异步任务（回调函数）放入任务队列中。</li>\n<li>一旦执行栈中的所有同步任务执行完毕，系统就会按次序读取任务队列中的异步任务，于是被读取的异步任务结束等待状态，进入执行栈，开始执行。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>先打印 1；然后把 document.onclick = fn 这个语句交给异步进程处理，鼠标没有点击 fn 就不放入任务队列，只有鼠标点击才把回调函数 fn 放入任务队列；再打印 2；接着把 setTimeout (fn, 3000); 语句交给异步进程处理，只有 3 秒时间到了才会把回调函数 fn 写到异步任务队列里去；主线程执行栈里的同步任务已经执行完了，回到任务队列里看，有异步任务则拿到执行栈执行。</p>\n<p>由于主线程不断的重复获得任务、执行任务、再获取任务、再执行，所以这种机制被称为事件循环（event loop）。</p>\n<h1 id=\"location-对象\"><a class=\"anchor\" href=\"#location-对象\">#</a> location 对象</h1>\n<h2 id=\"什么是-location-对象\"><a class=\"anchor\" href=\"#什么是-location-对象\">#</a> 什么是 location 对象</h2>\n<p>window 对象给我们提供了一个 location 属性用于获取或设置窗体的 URL，并且可以用于解析 URL 。因为这个属性返回的是一个对象，所以我们将这个属性也称为 location 对象。</p>\n<h2 id=\"url\"><a class=\"anchor\" href=\"#url\">#</a> URL</h2>\n<p>统一资源定位符 (Uniform Resource Locator, URL) 是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的 URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。</p>\n<p>URL 的一般语法格式为：</p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">protocol</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//host[:port]/path/[?query]#fragment</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//www.baidu.com/index.html?name=andy&amp;age=18#link</span></span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>组成</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>protocol</td>\n<td>通信协议，常用 http、ftp、maito 等</td>\n</tr>\n<tr>\n<td>host</td>\n<td>主机（域名）<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5iYWlkdS5jb20=\">www.baidu.com</span></td>\n</tr>\n<tr>\n<td>port</td>\n<td>端口号，可选，省略时使用方案的默认端口，如 http 的默认端口为 80</td>\n</tr>\n<tr>\n<td>path</td>\n<td>路径，由零或多个 '/' 符号隔开的字符串，一般用来表示主机上的一个目录或文件地址</td>\n</tr>\n<tr>\n<td>query</td>\n<td>参数，以键值对的形式，通过 &amp; 符号分隔开来</td>\n</tr>\n<tr>\n<td>fragment</td>\n<td>片段，# 后面内容，常见于链接、锚点</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"location-对象的属性\"><a class=\"anchor\" href=\"#location-对象的属性\">#</a> location 对象的属性</h2>\n<table>\n<thead>\n<tr>\n<th>location 对象属性</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>location.href</td>\n<td>获取或者设置整个 URL</td>\n</tr>\n<tr>\n<td>location.host</td>\n<td>返回主机（域名）<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5iYWlkdS5jb20=\">www.baidu.com</span></td>\n</tr>\n<tr>\n<td>location.port</td>\n<td>返回端口号，如果未写返回空字符串</td>\n</tr>\n<tr>\n<td>location.pathname</td>\n<td>返回路径</td>\n</tr>\n<tr>\n<td>location.search</td>\n<td>返回参数</td>\n</tr>\n<tr>\n<td>location.hash</td>\n<td>返回片段，# 后面内容，常见于链接、锚点</td>\n</tr>\n</tbody>\n</table>\n<p>重点记住：href 和 search</p>\n<blockquote>\n<p>📗<strong>案例：5 秒钟之后自动跳转页面</strong></p>\n<ol>\n<li>利用定时器做倒计时效果</li>\n<li>时间到了，就跳转页面。使用 location.href</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>点击<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.baidu.com'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> timer <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.baidu.com'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       div<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'您将在'</span> <span class=\"token operator\">+</span> timer <span class=\"token operator\">+</span> <span class=\"token string\">'秒之后跳转到首页'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   \ttimer<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>🍏<strong>案例：获取 URL 参数数据</strong></p>\n<p>主要练习数据在不同页面中的传递。</p>\n<ol>\n<li>第一个登录页面，里面有提交表单， action 提交到 index.html 页面</li>\n<li>第二个页面，可以使用第一个页面的参数，这样实现了一个数据不同页面之间的传递效果</li>\n<li>第二个页面之所以可以使用第一个页面的数据，是利用了 URL 里面的 location.search 参数</li>\n<li>在第二个页面中，需要把这个参数提取。</li>\n<li>第一步：去掉 '?'，利用 substr (' 起始的位置 ', 截取几个字符)</li>\n<li>第二步：利用 '=' 分割键和值，split (‘=‘)</li>\n<li>第一个数组就是键，第二个数组就是值</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- login.html --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   用户名：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>uname<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>登录<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">&lt;!-- 一点这个登录提交表单，就会跳转到 index.html 页面去，同时传递参数 uname=andy --></span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- index.html --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// index.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//console.log (location.search);// 得到：?uname=andy</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> params <span class=\"token operator\">=</span> location<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 不写第二个参数默认截取到最后</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>div<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'欢迎您'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"location-对象的方法\"><a class=\"anchor\" href=\"#location-对象的方法\">#</a> location 对象的方法</h2>\n<table>\n<thead>\n<tr>\n<th>location 对象的方法</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>location.assign()</td>\n<td>跟 href 一样，可以跳转页面（也称为重定向页面），记录浏览历史，可以实现后退功能</td>\n</tr>\n<tr>\n<td>location.replace()</td>\n<td>替换当前页面，因为不记录历史，所以不能后退页面</td>\n</tr>\n<tr>\n<td>location.reload()</td>\n<td>重新加载页面，相当于刷新按钮或者 f5。如果参数为 true 则强制刷新（ctrl+f5），即重新加载页面不用之前缓存到本地的图片和内容等，直接从服务器读取</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>点击<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    location<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.baidu.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"navigator-对象\"><a class=\"anchor\" href=\"#navigator-对象\">#</a> navigator 对象</h1>\n<p>navigator 对象包含有关浏览器的信息，它有很多属性，我们最常用的是 userAgent，该属性可以返回由客 户机发送服务器的 user-agent 头部的值。</p>\n<p>下面前端代码可以判断用户哪个终端打开页面，实现跳转</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>userAgent<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\twindow<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 手机</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 电脑</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 比如某 PC 端的 js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>userAgent<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\twindow<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'../H5/index.html'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 相应手机端的 js</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"history-对象\"><a class=\"anchor\" href=\"#history-对象\">#</a> history 对象</h1>\n<p>window 对象给我们提供了一个 history 对象，与浏览器历史记录进行交互。该对象包含用户（在浏览器窗口中） 访问过的 URL。</p>\n<table>\n<thead>\n<tr>\n<th>history 对象方法</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>back()</td>\n<td>可以后退功能</td>\n</tr>\n<tr>\n<td>forward()</td>\n<td>前进功能</td>\n</tr>\n<tr>\n<td>go (参数)</td>\n<td>前进后退功能，参数如果是 1 前进 1 个页面，如果是 - 1 后退 1 个页面</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- index.html --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点击我去往列表页<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>前进<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// index.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    history<span class=\"token punctuation\">.</span><span class=\"token function\">forward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 或写成 history.go (1);</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- list.html --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点击我去往首页<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>后退<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// list.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    history<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 或写成 history.go (-1);</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>history 对象一般在实际开发中比较少用，但是会在一些 OA 办公系统中见到</p>\n",
            "tags": [
                "前端",
                "JavaScript",
                "前端",
                "JavaScript"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/JS/JS-DOM%E7%AF%87/",
            "url": "https://60saint.github.io/front-end/JS/JS-DOM%E7%AF%87/",
            "title": "JS - DOM篇",
            "date_published": "2022-02-25T16:00:00.000Z",
            "content_html": "<h1 id=\"web-apis-简介\"><a class=\"anchor\" href=\"#web-apis-简介\">#</a> Web APIs 简介</h1>\n<h2 id=\"web-apis-和-js-基础关联性\"><a class=\"anchor\" href=\"#web-apis-和-js-基础关联性\">#</a> Web APIs 和 JS 基础关联性</h2>\n<p><strong>JS 基础阶段：</strong></p>\n<ul>\n<li>学习的是 ECMAScript 标准规定的基本语法</li>\n<li>要求掌握 JS 基础语法</li>\n<li>只学习基本语法，做不了常用的网页交互效果</li>\n<li>目的是为了 JS 后面的课程打基础、做铺垫</li>\n</ul>\n<p><strong>Web APIs 阶段：</strong></p>\n<ul>\n<li>Web APIs 是 W3C 组织的标准</li>\n<li>Web APIs 主要学习 DOM 和 BOM</li>\n<li>Web APIs 是 JS 所独有的部分</li>\n<li>主要学习页面交互功能</li>\n<li>需要使用 JS 基础的课程内容做基础</li>\n</ul>\n<p>JS 基础学习 ECMAScript 基础语法为后面作铺垫，Web APIs 是 JS 的应用，大量使用 JS 基础语法做交互效果</p>\n<h2 id=\"api-和-web-api\"><a class=\"anchor\" href=\"#api-和-web-api\">#</a> API 和 Web API</h2>\n<p>API</p>\n<p>API（Application Programming Interface, 应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。</p>\n<p>简单理解：<strong>API 是给程序员提供的一种工具，以便能更轻松的实现想要完成的功能。</strong></p>\n<h3 id=\"web-api\"><a class=\"anchor\" href=\"#web-api\">#</a> Web API</h3>\n<p><strong>Web API 是浏览器</strong>提供的一套操作浏览器功能和页面元素的 API (BOM 和 DOM)。</p>\n<p>现阶段我们主要针对于浏览器讲解常用的 API , 主要针对浏览器做交互效果。</p>\n<p>比如我们想要浏览器弹出一个警示框，直接使用 alert (‘弹出’)</p>\n<p>MDN 详细 API : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJ\">https://developer.mozilla.org/zh-CN/docs/Web/API</span></p>\n<p>因为 Web API 很多，所以我们将这个阶段称为 <strong>Web APIs</strong></p>\n<h1 id=\"dom-简介\"><a class=\"anchor\" href=\"#dom-简介\">#</a> DOM 简介</h1>\n<h2 id=\"什么是-dom\"><a class=\"anchor\" href=\"#什么是-dom\">#</a> 什么是 DOM</h2>\n<p>文档对象模型（Document Object Model，简称 DOM），是 W3C 组织推荐的处理可扩展标记语言（HTML 或者 XML）的标准编程接口。</p>\n<p>W3C 已经定义了一系列的 DOM 接口，通过这些 DOM 接口可以改变网页的内容、结构和样式。</p>\n<h2 id=\"dom-树\"><a class=\"anchor\" href=\"#dom-树\">#</a> DOM 树</h2>\n<ul>\n<li>文档：一个页面就是一个文档，DOM 中使用 document 表示</li>\n<li>元素：页面中的所有标签都是元素，DOM 中使用 element 表示</li>\n<li>节点：网页中的所有内容都是节点（标签、属性、文本、注释等），DOM 中使用 node 表示</li>\n</ul>\n<p><strong>DOM 把以上内容都看做是对象</strong></p>\n<h1 id=\"获取元素\"><a class=\"anchor\" href=\"#获取元素\">#</a> 获取元素</h1>\n<p>DOM 在实际开发中主要用来操作元素。</p>\n<h2 id=\"根据-id-获取\"><a class=\"anchor\" href=\"#根据-id-获取\">#</a> 根据 ID 获取</h2>\n<p>使用 getElementById () 方法可以获取带有 ID 的元素对象。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>补充：使用 console.dir () 可以打印我们获取的元素对象，更好的查看对象里面的属性和方法。</p>\n<h2 id=\"根据标签名获取\"><a class=\"anchor\" href=\"#根据标签名获取\">#</a> 根据标签名获取</h2>\n<p>使用 getElementsByTagName () 方法可以返回带有指定标签名的对象的集合。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'标签名'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>注意：</p>\n<ol>\n<li>因为得到的是一个对象的集合，所以我们想要操作里面的元素就需要遍历。</li>\n<li>得到元素对象是动态的</li>\n</ol>\n<h2 id=\"通过-html5-新增的方法获取\"><a class=\"anchor\" href=\"#通过-html5-新增的方法获取\">#</a> 通过 HTML5 新增的方法获取</h2>\n<ol>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'类名'</span><span class=\"token punctuation\">)</span>；<span class=\"token comment\">// 根据类名返回元素对象集合</span></pre></td></tr></table></figure></li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选择器'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 根据指定选择器返回第一个元素对象</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>盒子1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>盒子2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nav<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>首页<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>产品<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> firstBox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> nav <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#nav'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选择器'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 根据指定选择器返回</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"获取特殊元素bodyhtml\"><a class=\"anchor\" href=\"#获取特殊元素bodyhtml\">#</a> 获取特殊元素（body，html）</h2>\n<p><strong>获取 body 元素</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>doucumnet<span class=\"token punctuation\">.</span>body<span class=\"token comment\">// 返回 body 元素对象</span></pre></td></tr></table></figure><p><strong>获取 html 元素</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span>documentElement<span class=\"token comment\">// 返回 html 元素对象</span></pre></td></tr></table></figure><h1 id=\"事件基础\"><a class=\"anchor\" href=\"#事件基础\">#</a> 事件基础</h1>\n<p>JavaScript 使我们有能力创建动态页面，而事件是可以被 JavaScript 侦测到的行为。</p>\n<p>简单理解：触发 --- 响应机制。</p>\n<p>网页中的每个元素都可以产生某些可以触发 JavaScript 的事件，例如，我们可以在用户点击某按钮时产生一个事件，然后去执行某些操作。</p>\n<h2 id=\"事件三要素\"><a class=\"anchor\" href=\"#事件三要素\">#</a> 事件三要素</h2>\n<ol>\n<li>事件源（谁）</li>\n<li>事件类型（什么事件）</li>\n<li>事件处理程序（做啥）</li>\n</ol>\n<blockquote>\n<p>📗<strong>案例：点击按钮弹出警示框</strong></p>\n<p>页面中有一个按钮，当鼠标点击按钮的时候，弹出 “你好吗” 警示框。</p>\n<ol>\n<li>获取事件源（按钮）</li>\n<li>注册事件（绑定事件），使用 onclick</li>\n<li>编写事件处理程序，写一个函数弹出 alert 警示框</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你好吗'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"执行事件的步骤\"><a class=\"anchor\" href=\"#执行事件的步骤\">#</a> 执行事件的步骤</h2>\n<ol>\n<li>获取事件源</li>\n<li>注册事件（绑定事件）</li>\n<li>添加事件处理程序（采取函数赋值形式）</li>\n</ol>\n<h2 id=\"常见的鼠标事件\"><a class=\"anchor\" href=\"#常见的鼠标事件\">#</a> 常见的鼠标事件</h2>\n<table>\n<thead>\n<tr>\n<th>鼠标事件</th>\n<th>触发条件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onclick</td>\n<td>鼠标点击左键触发</td>\n</tr>\n<tr>\n<td>onmouseover</td>\n<td>鼠标经过触发</td>\n</tr>\n<tr>\n<td>onmouseout</td>\n<td>鼠标离开触发</td>\n</tr>\n<tr>\n<td>onfocus</td>\n<td>获得鼠标焦点触发</td>\n</tr>\n<tr>\n<td>onblur</td>\n<td>失去鼠标焦点触发</td>\n</tr>\n<tr>\n<td>onmousemove</td>\n<td>鼠标移动触发</td>\n</tr>\n<tr>\n<td>onmouseup</td>\n<td>鼠标弹起触发</td>\n</tr>\n<tr>\n<td>onmousedown</td>\n<td>鼠标按下触发</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"操作元素\"><a class=\"anchor\" href=\"#操作元素\">#</a> 操作元素</h1>\n<p>JavaScript 的 DOM 操作可以改变网页内容、结构和样式，我们可以利用 DOM 操作元素来改变元素里面的内容、属性等。注意以下都是属性</p>\n<h2 id=\"改变元素内容\"><a class=\"anchor\" href=\"#改变元素内容\">#</a> 改变元素内容</h2>\n<ol>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>element<span class=\"token punctuation\">.</span>innerText</pre></td></tr></table></figure><p>从起始位置到终止位置的内容，但它不识别 html 标签，去除空格和换行</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    我是文字</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>123<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>div<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;strong>今天是：&lt;/strong> 2023'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 页面会显示 &amp; lt;strong > 和 &amp; lt;/strong>，且没有加粗效果</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 控制台不显示 &amp; lt;span > 和 &amp; lt;/span>，且 “我是文字” 和 “&lt;span>123&lt;/span>” 在同一行，它俩前面的空格也没有了</span></pre></td></tr></table></figure></li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>element<span class=\"token punctuation\">.</span>innerHTML</pre></td></tr></table></figure><p>起始位置到终止位置的全部内容，包括 html 标签，同时保留空格和换行</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>div<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;strong>今天是：&lt;/strong> 2023'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 页面不显示 &amp; lt;strong > 和 &amp; lt;/strong>，有加粗效果</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 控制台显示 &amp; lt;span > 和 &amp; lt;/span>，且 “我是文字” 和 “&lt;span>123&lt;/span>” 之间有换行，它俩前面的空格都保留</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"常用元素的属性操作\"><a class=\"anchor\" href=\"#常用元素的属性操作\">#</a> 常用元素的属性操作</h2>\n<ol>\n<li>innerText、innerHTML 改变元素内容</li>\n<li>src、href</li>\n<li>id、alt、title</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ldh<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>刘德华<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>zxy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>张学友<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/ldh.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">titile</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>刘德华<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ldh <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ldh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> zxy <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zxy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>zxy<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'images/zxy.jpg'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    img<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'张学友'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'images/ldh.jpg'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    img<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'刘德华'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>📗<strong>案例：分时显示不同图片，显示不同问候语</strong></p>\n<p>根据不同时间，页面显示不同图片，同时显示不同的问候语。</p>\n<p>如果上午时间打开页面，显示上午好，显示上午的图片。</p>\n<p>如果下午时间打开页面，显示下午好，显示下午的图片。</p>\n<p>如果晚上时间打开页面，显示晚上好，显示晚上的图片。</p>\n<p><strong>案例分析</strong></p>\n<ol>\n<li>根据系统不同时间来判断，所以需要用到日期内置对象</li>\n<li>利用多分支语句来设置不同的图片</li>\n<li>需要一个图片，并且根据时间修改图片，就需要用到操作元素 src 属性</li>\n<li>需要一个 div 元素，显示不同问候语，修改元素内容即可</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/s.gif<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>上午好<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 得到当前的小时数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> h <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 判断小时数，改变图片和文字信息</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">&lt;</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'images/s.gif'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   div<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'亲，上午好，好好写代码'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">&lt;</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'images/x.gif'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   div<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'亲，下午好，好好写代码'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'images/w.gif'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   div<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'亲，晚上好，好好写代码'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"表单元素的属性操作\"><a class=\"anchor\" href=\"#表单元素的属性操作\">#</a> 表单元素的属性操作</h2>\n<p>利用 DOM 可以操作如下表单元素的属性：</p>\n<p>type、value、checked、selected、disabled</p>\n<blockquote>\n<p>📗<strong>案例：仿京东显示密码</strong></p>\n<p>点击按钮将密码框切换为文本框，并可以查看密码明文。</p>\n<p><strong>案例分析</strong></p>\n<ol>\n<li>核心思路： 点击眼睛按钮，把密码框类型改为文本框就可以看见里面的密码</li>\n<li>一个按钮两个状态，点击一次，切换为文本框，继续点击一次切换为密码框</li>\n<li>算法：利用一个 flag 变量，来判断 flag 的值，如果是 1 就切换为文本框，flag 设置为 0，如果是 0 就切换为密码框，flag 设置为 1</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/close.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>eye<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pwd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> eye <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eye'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> pwd <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pwd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>eye<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       pwd<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       eye<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'images/open.png'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       pwd<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       pwd<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'images/close.png'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"样式属性操作\"><a class=\"anchor\" href=\"#样式属性操作\">#</a> 样式属性操作</h2>\n<p>可以通过 JS 修改元素的大小、颜色、位置等样式。</p>\n<ul>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>element<span class=\"token punctuation\">.</span>style<span class=\"token comment\">// 行内样式操作</span></pre></td></tr></table></figure><p><strong>注意：</strong></p>\n<ol>\n<li>JS 里面的样式采取驼峰命名法比如 fontSize、backgroundColor</li>\n<li>JS 修改 style 样式操作，产生的是行内样式，CSS 权重比较高</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>div<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'purple'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token string\">'250px'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><strong>📗案例：淘宝点击关闭二维码</strong></p>\n<p>当鼠标点击二维码关闭按钮的时候，则关闭整个二维码。</p>\n<ol>\n<li>核心思路： 利用样式的显示和隐藏完成，display:none 隐藏元素 display:block 显示元素</li>\n<li>点击按钮，就让这个二维码盒子隐藏起来即可</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.close-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>box<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>🍏<strong>案例：循环精灵图背景</strong></p>\n<p>可以利用 for 循环设置一组元素的精灵图背景</p>\n<ol>\n<li>首先精灵图图片排列有规律的</li>\n<li>核心思路：利用 for 循环 修改精灵图片的背景位置 background-position</li>\n<li>让循环里面的 i 索引号 * 44 就是每个图片的 y 坐标</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       ...</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token comment\">&lt;!-- 共 12 个 li 标签 --></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> lis <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lis<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">44</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   lis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundPosition <span class=\"token operator\">=</span> <span class=\"token string\">'0 -'</span> <span class=\"token operator\">+</span> index <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p><strong>💚案例：显示隐藏文本框内容</strong></p>\n<p>当鼠标点击文本框时，里面的默认文字隐藏，当鼠标离开文本框时，里面的文字显示。</p>\n<ol>\n<li>首先表单需要 2 个新事件，获得焦点 onfocus 失去焦点 onblur</li>\n<li>如果获得焦点，判断表单里面内容是否为默认文字，如果是默认文字，就清空表单内容</li>\n<li>如果失去焦点，判断表单内容是否为空，如果为空，则表单内容改为默认文字</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>手机<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>text<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onfocus</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">'手机'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 获得焦点需要把文本框里的文字颜色变黑</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">'#333'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>text<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onblur</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">'手机'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token comment\">// 失去焦点需要把文本框里的文字颜色变浅</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">'#999'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n</li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>element<span class=\"token punctuation\">.</span>className<span class=\"token comment\">// 类名样式操作</span></pre></td></tr></table></figure><p><strong>注意：</strong></p>\n<ol>\n<li>如果样式修改较多，可以采取操作类名方式更改元素样式。</li>\n<li>class 因为是个保留字，因此使用 className 来操作元素类名属性</li>\n<li>className 会直接更改元素的类名，会覆盖原先的类名。</li>\n</ol>\n<blockquote>\n<p>📗<strong>案例：密码框格式提示错误信息</strong></p>\n<p>用户如果离开密码框，里面输入个数不是 6~16，则提示错误信息，否则提示输入正确信息</p>\n<ol>\n<li>首先判断的事件是表单失去焦点 onblur</li>\n<li>如果输入正确则提示正确的信息颜色为绿色，小图标变化</li>\n<li>如果输入不是 6 到 16 位，则提示错误信息颜色为红色，小图标变化</li>\n<li>因为里面变化样式较多，我们采取 className 修改样式</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>register<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ipt<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>请输入6~16位密码<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 100px auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token selector\">.message</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 12px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #999<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>images/mess.png<span class=\"token punctuation\">)</span></span> no-repeat left center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token selector\">.wrong</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>images/wrong.png<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token selector\">.right</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>images/right.png<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ipt <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.ipt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> message <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.message'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ipt<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onblur</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       message<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'message wrong'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       message<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'您输入的位数不对，要求6~16位'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       message<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'message right'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       message<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'您输入得正确'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>\n<h2 id=\"排他思想\"><a class=\"anchor\" href=\"#排他思想\">#</a> 排他思想</h2>\n<p>如果有同一组元素，我们想要某一个元素实现某种样式，需要用到循环的排他思想算法：</p>\n<ol>\n<li>所有元素全部清除样式</li>\n<li>给当前元素设置样式</li>\n<li>注意顺序不能颠倒</li>\n</ol>\n<blockquote>\n<p>📗<strong>案例：百度换肤</strong></p>\n<ol>\n<li>这个案例练习的是给一组元素注册事件</li>\n<li>给 4 个小图片利用循环注册点击事件</li>\n<li>当我们点击了这个图片，让我们页面背景改为当前的图片</li>\n<li>核心算法：把当前图片的 src 路径取过来，给 body 做为背景即可</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>baidu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/1.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/2.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/3.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/4.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> imgs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.baidu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 循环注册事件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> imgs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   imgs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundImage <span class=\"token operator\">=</span> <span class=\"token string\">'url('</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>🍏<strong>案例：表格隔行变色</strong></p>\n<ol>\n<li>用到新的鼠标事件鼠标经过 onmouseover 鼠标离开 onmouseout</li>\n<li>核心思路：鼠标经过 tr 行，当前的行变背景颜色，鼠标离开去掉当前的背景颜色</li>\n<li>注意：第一行（thead 里面的行）不需要变换颜色，因此我们获取的是 tbody 里面的行</li>\n</ol>\n<pre><code class=\"language-HTML\">&lt;table&gt;\n   &lt;thead&gt;\n       &lt;tr&gt;\n           &lt;th&gt;&lt;/th&gt;...&lt;th&gt;&lt;/th&gt;\n       &lt;/tr&gt;\n   &lt;/thead&gt;\n   &lt;tbody&gt;\n       &lt;tr&gt;\n           &lt;td&gt;&lt;/td&gt;...&lt;td&gt;&lt;/td&gt;\n       &lt;/tr&gt;\n       ...\n       &lt;tr&gt;\n           &lt;td&gt;&lt;/td&gt;...&lt;td&gt;&lt;/td&gt;\n       &lt;/tr&gt;\n   &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.bg</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> skyblue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> trs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tbody'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tr'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> trs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   trs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseover</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'bg'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   trs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>💚<strong>案例：表单全选取消全选案例</strong></p>\n<p><strong>业务需求：</strong></p>\n<ol>\n<li>点击上面全选复选框，下面所有的复选框都选中（全选）</li>\n<li>再次点击全选复选框，下面所有的复选框都不中选（取消全选）</li>\n<li>如果下面复选框全部选中，上面全选按钮就自动选中</li>\n<li>如果下面复选框有一个没有选中，上面全选按钮就不选中</li>\n<li>所有复选框一开始默认都没选中状态</li>\n</ol>\n<p><strong>案例分析：</strong></p>\n<ol>\n<li>全选和取消全选做法： 让下面所有复选框的 checked 属性（选中状态）跟随全选按钮即可</li>\n<li>下面复选框需要全部选中，上面全选才能选中做法：给下面所有复选框绑定点击事件，每次点击，都要循环查看下面所有的复选框是否有没选中的，如果有一个没选中的，上面全选就不选中。</li>\n<li>可以设置一个变量，来控制全选是否选中</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>j_cbAll<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>商品<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>价钱<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>j_tb<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>iPhone8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>8000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>iPad Pro<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>5000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>iPad Air<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>Apple Watch<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 全选和取消全选做法： 让下面所有复选框的 checked 属性（选中状态）跟随全选按钮即可</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> j_cbAll <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'j_cbAll'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> j_tbs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'j_tb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>j_cbAll<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">//this.checked 可以得到当前复选框的选中状态，如果是 true 就是选中，如果是 false 就是未选中</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> j_tbs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       j_tbs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>checked <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 2. 下面复选框需要全部选中，上面全选才能选中做法：给下面所有复选框绑定点击事件，每次点击，都要循环查看下面所有的复选框是否有没选中的，如果有一个没选中的，上面全选就不选中。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> j_tbs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   j_tbs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token comment\">//flag 控制全选按钮是否选中</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token keyword\">var</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> j_tbs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>j_tbs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>               flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>               <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 只要有一个没有选中，剩下的就无需循环判断了</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>           <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>       j_cbAll<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"自定义属性的操作\"><a class=\"anchor\" href=\"#自定义属性的操作\">#</a> 自定义属性的操作</h2>\n<ol>\n<li>\n<p><strong>获取属性值</strong></p>\n<ul>\n<li>\n<p><code>element.属性</code>  获取属性值。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// demo</span></pre></td></tr></table></figure><p>获取内置属性值（元素本身自带的属性），如 id、class 等</p>\n</li>\n<li>\n<p><code>element.getAttribute('属性');</code></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 1</span></pre></td></tr></table></figure><p>主要获得自定义的属性（标准）我们程序员自定义的属性，如上面的 index</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>设置属性值</strong></p>\n<ul>\n<li>\n<p><code>element.属性=‘值’</code>  设置内置属性值。</p>\n</li>\n<li>\n<p><code>element.setAttribute('属性','值');</code></p>\n<p>主要设置自定义的属性（标准）</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>移除属性</strong></p>\n<ul>\n<li><code>element.removeAttribute('属性');</code></li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>📗<strong>案例：tab 栏切换</strong></p>\n<p>当鼠标点击上面相应的选项卡（tab），下面内容跟随变化</p>\n<ol>\n<li>Tab 栏切换有 2 个大的模块</li>\n<li>上面的模块选项卡，点击某一个，当前这一个底色会是红色，其余不变（排他思想）修改类名的方式</li>\n<li>下面的模块内容，会跟随上面的选项卡变化。所以下面模块变化写到点击事件里面。</li>\n<li>规律：下面的模块显示内容和上面的选项卡一一对应，相匹配。</li>\n<li>核心思路：给上面的 tab_list 里面的所有小 li 添加自定义属性，属性值从 0 开始编号。</li>\n<li>当我们点击 tab_list 里面的某个小 li，让 tab_con 里面对应序号的内容显示，其余隐藏（排他思想）</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tab<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tab_list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>current<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>商品介绍<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>规格与包装<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>售后保障<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>商品评价（50000）<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>手机社区<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tab_con<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- display: block 除了改为块级元素之外，还有可以显示的意思 --></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>           商品介绍模块内容</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>           规格与包装模块内容</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>           售后保障模块内容</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>           商品评价（50000）模块内容</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>           手机社区</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.tab_list .current</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token selector\">.item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 元素会被完全从文档流中移除，不占据页面布局空间 */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> tab_list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.tablist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> lis <span class=\"token operator\">=</span> tab_list<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> items <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.item'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lis<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">// 开始给 5 个小 li 设置索引号</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   lis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   lis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token comment\">// 1. 上面的模块选项卡，点击某一个，当前这一个底色会是红色，其余不变（排他思想）修改类名的方式</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token comment\">// 其余的 li 清除 current 这个类</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lis<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>           lis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token comment\">// 被点击的 li 留下类名</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'current'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token comment\">// 2. 下面的显示内容模块</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token comment\">// 让其余的 item 类 div 隐藏</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> items<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>           items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>       <span class=\"token comment\">// 留下对应的 item 显示出来</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>       items<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'block'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"h5-自定义属性\"><a class=\"anchor\" href=\"#h5-自定义属性\">#</a> H5 自定义属性</h2>\n<p><strong>自定义属性目的：是为了保存并使用数据。有些数据可以保存到页面中而不用保存到数据库中。</strong></p>\n<p>自定义属性获取是通过 getAttribute (‘属性’) 获取。</p>\n<p>但是有些自定义属性很容易引起歧义，不容易判断是元素的内置属性还是自定义属性。</p>\n<p>H5 给我们新增了自定义属性：</p>\n<ol>\n<li>\n<p><strong>设置 H5 自定义属性</strong></p>\n<p>H5 规定自定义属性 data - 开头作为属性名并且赋值。</p>\n<p>比如  <code>&lt;div data-index=“1”&gt;&lt;/div&gt;</code></p>\n<p>或者使用 JS 设置  <code>element.setAttribute(‘data-index’, 2)</code></p>\n</li>\n<li>\n<p><strong>获取 H5 自定义属性</strong></p>\n<ol>\n<li>\n<p>兼容性获取  <code>element.getAttribute(‘data-index’);</code></p>\n</li>\n<li>\n<p>H5 新增  <code>element.dataset.index</code>  或者  <code>element.dataset[‘index’]</code></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">data-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-list-name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>andy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//dataset 是一个集合，里面存放了所有 data - 开头的自定义属性</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 如果自定义属性里有多个 - 连接的单词，获取的时候采取驼峰命名法</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>listName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">[</span><span class=\"token string\">'listName'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<h1 id=\"节点操作\"><a class=\"anchor\" href=\"#节点操作\">#</a> 节点操作</h1>\n<p>获取元素通常使用两种方式：</p>\n<ol>\n<li><strong>利用 DOM 提供的方法获取元素</strong>\n<ul>\n<li>document.getElementById()</li>\n<li>document.getElementsByTagName()</li>\n<li>document.querySelector 等</li>\n<li>逻辑性不强、繁琐</li>\n</ul>\n</li>\n<li><strong>利用节点层级关系获取元素</strong>\n<ul>\n<li>利用父子兄节点关系获取元素</li>\n<li>逻辑性强，但是兼容性稍差</li>\n</ul>\n</li>\n</ol>\n<p>这两种方式都可以获取元素节点，我们后面都会使用，但是节点操作更简单</p>\n<h2 id=\"节点概述\"><a class=\"anchor\" href=\"#节点概述\">#</a> 节点概述</h2>\n<p>网页中的所有内容都是节点（标签、属性、文本、注释等），在 DOM 中，节点使用 node 来表示。</p>\n<p>HTML DOM 树中的所有节点均可通过 JavaScript 进行访问，所有 HTML 元素（节点）均可被修改，也可以创建或删除。</p>\n<p>一般地，节点至少拥有 nodeType（节点类型）、nodeName（节点名称）和 nodeValue（节点值）这三个基本属性。</p>\n<ul>\n<li>元素节点 nodeType 为 1</li>\n<li>属性节点 nodeType 为 2</li>\n<li>文本节点 nodeType 为 3（文本节点包含文字、空格、换行等）</li>\n</ul>\n<p>在实际开发中，节点操作主要操作的是<strong>元素节点</strong></p>\n<h2 id=\"节点层级\"><a class=\"anchor\" href=\"#节点层级\">#</a> 节点层级</h2>\n<p>利用 DOM 树可以把节点划分为不同的层级关系，常见的是<strong>父子兄弟层级关系</strong>。</p>\n<h3 id=\"父级节点\"><a class=\"anchor\" href=\"#父级节点\">#</a> 父级节点</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node<span class=\"token punctuation\">.</span>parentNode</pre></td></tr></table></figure><ul>\n<li>parentNode 属性可返回某节点的父节点，注意是最近的一个父节点</li>\n<li>如果指定的节点没有父节点则返回 null</li>\n</ul>\n<h3 id=\"子节点\"><a class=\"anchor\" href=\"#子节点\">#</a> 子节点</h3>\n<ol>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>parentNode<span class=\"token punctuation\">.</span>childNodes<span class=\"token comment\">//（标准）</span></pre></td></tr></table></figure><p>parentNode.childNodes 返回包含指定节点的子节点的集合，该集合为即时更新的集合。</p>\n<p><strong>注意：</strong> 返回值里面包含了所有的子节点，包括元素节点，文本节点等。</p>\n<p>如果只想要获得里面的元素节点，则需要专门处理。所以我们一般不提倡使用 childNodes</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span> <span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>‘ul’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> ul<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ul<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nodeType <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">//ul.childNodes [i] 是元素节点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ul<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>parentNode<span class=\"token punctuation\">.</span>children<span class=\"token comment\">//（非标准）</span></pre></td></tr></table></figure><p>parentNode.children 是一个只读属性，返回所有的子元素节点。它只返回子元素节点，其余节点不返回（<strong>这个是我们重点掌握的</strong>）。</p>\n<p>虽然 children 是一个非标准，但是得到了各个浏览器的支持，因此我们可以放心使用</p>\n<ol>\n<li>如果想要第一个子元素节点，可以使用  <code>parentNode.chilren[0]</code></li>\n<li>如果想要最后一个子元素节点，可以使用  <code>parentNode.chilren[parentNode.chilren.length -1]</code></li>\n</ol>\n</li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>parentNode<span class=\"token punctuation\">.</span>firstChild</pre></td></tr></table></figure><p>firstChild 返回第一个子节点，找不到则返回 null。同样，也是包含所有的节点。</p>\n</li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>parentNode<span class=\"token punctuation\">.</span>lastChild</pre></td></tr></table></figure><p>lastChild 返回最后一个子节点，找不到则返回 null。同样，也是包含所有的节点。</p>\n</li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>parentNode<span class=\"token punctuation\">.</span>firstElementChild</pre></td></tr></table></figure><p>firstElementChild 返回第一个子元素节点，找不到则返回 null。</p>\n</li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>parentNode<span class=\"token punctuation\">.</span>lastElementChild</pre></td></tr></table></figure><p>lastElementChild 返回最后一个子元素节点，找不到则返回 null。</p>\n</li>\n</ol>\n<blockquote>\n<p>📗<strong>案例：下拉菜单</strong></p>\n<ol>\n<li>导航栏里面的 li 都要有鼠标经过效果，所以需要循环注册鼠标事件</li>\n<li>核心原理：当鼠标经过 li，里面的第二个孩子 ul 显示，当鼠标离开，则 ul 隐藏</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nav<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>微博<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>私信<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>评论<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>@我<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   ...</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>微博<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>私信<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>评论<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>@我<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.nav li</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> nav <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.nav'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> lis <span class=\"token operator\">=</span> nav<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lis<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   lis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseover</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'block'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   lis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<h3 id=\"兄弟节点\"><a class=\"anchor\" href=\"#兄弟节点\">#</a> 兄弟节点</h3>\n<ol>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node<span class=\"token punctuation\">.</span>nextSibling</pre></td></tr></table></figure><p>nextSibling 返回当前元素的下一个兄弟节点，找不到则返回 null。同样，也是包含所有的节点。</p>\n</li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node<span class=\"token punctuation\">.</span>previousSibling</pre></td></tr></table></figure><p>previousSibling 返回当前元素上一个兄弟节点，找不到则返回 null。同样，也是包含所有的节点。</p>\n</li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node<span class=\"token punctuation\">.</span>nextElementSibling</pre></td></tr></table></figure><p>nextElementSibling 返回当前元素下一个兄弟元素节点，找不到则返回 null。</p>\n</li>\n<li>\n<pre><code class=\"language-js\">\n</code></pre>\n<p>previousElementSibling 返回当前元素上一个兄弟节点，找不到则返回 null。</p>\n</li>\n</ol>\n<h2 id=\"创建节点\"><a class=\"anchor\" href=\"#创建节点\">#</a> 创建节点</h2>\n<ol>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tagName'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>document.createElement () 方法创建由 tagName 指定的 HTML 元素。因为这些元素原先不存在，是根据我们的需求动态生成的，所以我们也称为动态创建元素节点。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>create<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> create <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.create'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    create<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>createElement () 创建多个元素效率稍低一点点，但是结构更清晰</p>\n</li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>直接将内容写入页面的内容流</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>点击<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>abc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;div>123&lt;/div>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// \"123\" 会显示在 “abc” 下方</span></pre></td></tr></table></figure><p>但是文档流执行完毕（整个页面解析完成）再去调用 document.write ()，会导致页面全部重绘，只剩下 document.write () 括号内的内容</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;div>123&lt;/div>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 点击按钮后页面只剩 “123”</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//window.onload 是整个页面加载完了，再去调用里面的 js</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;div>123&lt;/div>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 页面一加载出来就只剩 “123” 了</span></pre></td></tr></table></figure></li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>element<span class=\"token punctuation\">.</span>innerHTML</pre></td></tr></table></figure><p>将内容写入某个 DOM 节点，不会导致页面全部重绘</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> inner <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.inner'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 拼接字符串</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/* </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>for (var i = 0; i &lt;= 100; i++) &#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    inner.innerHTML += '&lt;a href=\"#\"> 百度 &amp; lt;/a>';</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 数组形式拼接</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;a href=\"#\">百度&lt;/a>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>inner<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>innerHTML 创建多个元素效率更高（不要拼接字符串，采取数组形式拼接），结构稍微复杂</p>\n<p>innerHTML 效率要比 creatElement 高</p>\n</li>\n</ol>\n<h2 id=\"添加节点\"><a class=\"anchor\" href=\"#添加节点\">#</a> 添加节点</h2>\n<ol>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>node.appendChild () 方法将一个节点添加到指定父节点的子节点列表末尾。类似于 CSS 里面的 after 伪元素。</p>\n</li>\n<li>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> 指定元素<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>node.insertBefore () 方法将一个节点添加到父节点的指定子节点前面。类似于 CSS 里面的 before 伪元素。</p>\n</li>\n</ol>\n<blockquote>\n<p>📗<strong>案例：简单版发布留言案例</strong></p>\n<ol>\n<li>核心思路：点击按钮之后，就动态创建一个 li，添加到 ul 里面。</li>\n<li>创建 li 的同时，把文本域里面的值通过 li.innerHTML 赋值给 li</li>\n<li>如果想要新的留言后面显示就用 appendChild，如果想要前面显示就用 insertBefore</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>123<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>发布<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'textarea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'您没有输入内容'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 终止这个操作</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token comment\">// 1. 创建元素</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   \t<span class=\"token keyword\">var</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       li<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token comment\">// 2. 添加元素</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token comment\">// ul.appendChild(li);</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       ul<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">,</span> ul<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"删除节点\"><a class=\"anchor\" href=\"#删除节点\">#</a> 删除节点</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>node.removeChild () 方法从 DOM 中删除一个子节点，返回删除的节点。</p>\n<blockquote>\n<p>📗<strong>案例：删除留言案例</strong></p>\n<ol>\n<li>\n<p>当我们把文本域里面的值赋值给 li 的时候，多添加一个删除的链接</p>\n</li>\n<li>\n<p>需要把所有的链接获取过来，当我们点击当前的链接的时候，删除当前链接所在的 li</p>\n</li>\n<li>\n<p>阻止链接跳转需要添加 javascript:void (0); 或者 javascript:;</p>\n</li>\n</ol>\n<p>（若添加的是 #，则当前页面的 url 最后会多出一个 #）</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">li a</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'您没有输入内容'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 终止这个操作</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token comment\">// 1. 创建元素</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   \t<span class=\"token keyword\">var</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       li<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;a href=\"javascript:;\">删除&lt;/a>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token comment\">// 2. 添加元素</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       <span class=\"token comment\">// ul.appendChild(li);</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       ul<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">,</span> ul<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token comment\">// 3. 删除元素，删除的是当前链接的父亲 li</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token keyword\">var</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">as</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>           <span class=\"token keyword\">as</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>               ul<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>           <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"复制节点克隆节点\"><a class=\"anchor\" href=\"#复制节点克隆节点\">#</a> 复制节点（克隆节点）</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node<span class=\"token punctuation\">.</span><span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>node.cloneNode () 方法返回调用该方法的节点的副本。也称为克隆节点 / 拷贝节点</p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>如果括号参数为空或者为 false，则是浅拷贝，即只克隆复制节点本身，不克隆里面的子节点。</li>\n<li>如果括号参数为空或者为 false，则是浅拷贝，即只克隆复制节点本身，不克隆里面的子节点。</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> lili <span class=\"token operator\">=</span> ul<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ul<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>lili<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>📗<strong>案例：动态生成表格</strong></p>\n<ol>\n<li>因为里面的学生数据都是动态的，我们需要 js 动态生成。这里我们模拟数据，自己定义好数据。数据我们采取对象形式存储。</li>\n<li>所有的数据都是放到 tbody 里面的行里面。</li>\n<li>因为行很多，我们需要循环创建多个行（对应多少人）</li>\n<li>每个行里面又有很多单元格（对应里面的数据），我们还继续使用循环创建多个单元格，并且把数据存入里面（双重 for 循环）</li>\n<li>最后一列单元格是删除，需要单独创建单元格。</li>\n<li>最后添加删除操作，单击删除，可以删除当前行。</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">cellspacing</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>姓名<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>科目<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>成绩<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>操作<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 先去准备好学生的数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> datas <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'李欣怡'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token literal-property property\">subject</span><span class=\"token operator\">:</span> <span class=\"token string\">'JavaScript'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token literal-property property\">score</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'弘历'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token literal-property property\">subject</span><span class=\"token operator\">:</span> <span class=\"token string\">'JavaScript'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token literal-property property\">score</span><span class=\"token operator\">:</span> <span class=\"token number\">98</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'乾隆'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token literal-property property\">subject</span><span class=\"token operator\">:</span> <span class=\"token string\">'JavaScript'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token literal-property property\">score</span><span class=\"token operator\">:</span> <span class=\"token number\">99</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'李隆基'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token literal-property property\">subject</span><span class=\"token operator\">:</span> <span class=\"token string\">'JavaScript'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token literal-property property\">score</span><span class=\"token operator\">:</span> <span class=\"token number\">88</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 2. 往 tbody 里面创建行，有几个人（通过数组的长度）就创建几行</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">var</span> tbody <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tbody'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> datas<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token comment\">// 创建 tr 行</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token keyword\">var</span> tr <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tr'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   tbody<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token comment\">// 3. 行里面创建单元格 td</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token keyword\">in</span> datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//k 得到的是属性名，obj [k] 得到属性值</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>       <span class=\"token keyword\">var</span> td <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'td'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>       td<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>       tr<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>td<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token comment\">// 4. 创建有 “删除” 2 字的单元格</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token keyword\">var</span> td <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'td'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   td<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;a href=\"javascript:;\">删除&lt;/a>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   tr<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>td<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">// 5. 删除操作</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">as</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   <span class=\"token keyword\">as</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>       tbody<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<h1 id=\"事件高级\"><a class=\"anchor\" href=\"#事件高级\">#</a> 事件高级</h1>\n<h2 id=\"注册事件绑定事件\"><a class=\"anchor\" href=\"#注册事件绑定事件\">#</a> 注册事件（绑定事件）</h2>\n<p>给元素添加事件，称为注册事件或者绑定事件。</p>\n<p>注册事件有两种方式：传统方式和方法监听注册方式</p>\n<h3 id=\"传统注册方式\"><a class=\"anchor\" href=\"#传统注册方式\">#</a> 传统注册方式</h3>\n<ul>\n<li>\n<p>利用 on 开头的事件 onclick</p>\n</li>\n<li>\n<p><code>&lt;button onclick=“alert('hi~')”&gt;&lt;/button&gt;</code></p>\n</li>\n<li>\n<p><code>btn.onclick = function() &#123;&#125;</code></p>\n</li>\n<li>\n<p>特点：注册事件的<strong>唯一性</strong></p>\n</li>\n<li>\n<p>同一个元素同一个事件只能设置一个处理函数，最后注册的处理函数将会覆盖前面注册的处理函数</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>传统注册事件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btns <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>btns<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncilck</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>btns<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncilck</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hao a u'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 最后只会弹出 “hao a u”</span></pre></td></tr></table></figure><h3 id=\"方法监听注册方式\"><a class=\"anchor\" href=\"#方法监听注册方式\">#</a> 方法监听注册方式</h3>\n<ul>\n<li>w3c 标准推荐方式</li>\n<li>addEventListener () 是一个方法</li>\n<li>特点：同一个元素同一个事件可以注册多个监听器</li>\n<li>按注册顺序依次执行</li>\n</ul>\n<ol>\n<li>\n<p><strong>addEventListener 事件监听方式</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eventTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> useCapture<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>eventTarget.addEventListener () 方法将指定的监听器注册到 eventTarget（目标对象）上，当该对象触发指定的事件时，就会执行事件处理函数。</p>\n<p>该方法接收三个参数：</p>\n<ul>\n<li>type：事件类型字符串，比如 click 、mouseover ，注意这里不要带 on</li>\n<li>listener：事件处理函数，事件发生时，会调用该监听函数</li>\n<li>useCapture：可选参数，是一个布尔值，默认是 false。</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>方法监听注册事件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 先弹出 22，再弹出 33</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>attachEvent 事件监听方式</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eventTarget<span class=\"token punctuation\">.</span><span class=\"token function\">attachEvent</span><span class=\"token punctuation\">(</span>eventNameWithOn<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>eventTarget.attachEvent () 方法将指定的监听器注册到 eventTarget（目标对象）上，当该对象触发指定的事件时，指定的回调函数就会被执行。</p>\n<p>该方法接收两个参数：</p>\n<ul>\n<li>eventNameWithOn：事件类型字符串，比如 onclick 、onmouseover ，这里要带 on</li>\n<li>callback：事件处理函数，当目标触发事件时回调函数被调用</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>attachEvent<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">attachEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onclick'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"删除事件解绑事件\"><a class=\"anchor\" href=\"#删除事件解绑事件\">#</a> 删除事件（解绑事件）</h2>\n<h3 id=\"传统注册方式-2\"><a class=\"anchor\" href=\"#传统注册方式-2\">#</a> 传统注册方式</h3>\n<p>eventTarget.onclick = null;</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>div<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 只有第一次点击的时候弹出，之后点击不再弹出</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    div<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"方法监听注册方式-2\"><a class=\"anchor\" href=\"#方法监听注册方式-2\">#</a> 方法监听注册方式</h3>\n<ol>\n<li>\n<p>eventTarget.removeEventListener(type, listener[, useCapture]);</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>div<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    div<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>eventTarget.detachEvent(eventNameWithOn, callback);</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>div<span class=\"token punctuation\">.</span><span class=\"token function\">attachEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onclick'</span><span class=\"token punctuation\">,</span> fn1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    div<span class=\"token punctuation\">.</span><span class=\"token function\">detachEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onclick'</span><span class=\"token punctuation\">,</span> fn1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"dom-事件流\"><a class=\"anchor\" href=\"#dom-事件流\">#</a> DOM 事件流</h2>\n<p>事件流描述的是从页面中接收事件的顺序。</p>\n<p>事件发生时会在元素节点之间按照特定的顺序传播，这个传播过程即 DOM 事件流。</p>\n<p>比如我们给一个 div 注册了点击事件：</p>\n<p>DOM 事件流分为 3 个阶段：</p>\n<ol>\n<li>\n<p>捕获阶段</p>\n<p>由 DOM 最顶层节点开始，然后逐级向下传播到到最具体的元素接收的过程。</p>\n</li>\n<li>\n<p>当前目标阶段</p>\n</li>\n<li>\n<p>冒泡阶段</p>\n<p>事件开始时由最具体的元素接收，然后逐级向上传播到 DOM 最顶层节点的过程。</p>\n</li>\n</ol>\n<p>我们向水里面扔一块石头，首先它会有一个下降的过程，这个过程就可以理解为从最顶层向事件发生的最具体元素（目标点）的捕获过程；之后会产生泡泡，会在最低点（最具体元素）之后漂浮到水面上，这个过程相当于事件冒泡。</p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>JS 代码中只能执行捕获或者冒泡其中的一个阶段。</li>\n<li>onclick 和 attachEvent 只能得到冒泡阶段。</li>\n<li>addEventListener (type, listener [, useCapture]) 第三个参数如果是 true，表示在事件捕获阶段调用事件处理程序；如果是 false（不写默认就是 false），表示在事件冒泡阶段调用事件处理程序。</li>\n<li>实际开发中我们很少使用事件捕获，我们更关注事件冒泡。</li>\n<li>有些事件是没有冒泡的，比如 onblur、onfocus、onmouseenter、onmouseleave</li>\n<li>事件冒泡有时候会带来麻烦，有时候又会帮助很巧妙的做某些事件</li>\n</ol>\n<h2 id=\"事件对象\"><a class=\"anchor\" href=\"#事件对象\">#</a> 事件对象</h2>\n<h3 id=\"什么是事件对象\"><a class=\"anchor\" href=\"#什么是事件对象\">#</a> 什么是事件对象</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eventTarget<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>eventTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 这个 event 就是事件对象，我们还喜欢的写成 e 或者 evt</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//event 是形参，系统帮我们设定为事件对象，不需要传递实参过去。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 当我们注册事件时，event 对象就会被系统自动创建，并依次传递给事件监听器（事件处理函数）。</span></pre></td></tr></table></figure><p>官方解释：event 对象代表事件的状态，比如键盘按键的状态、鼠标的位置、鼠标按钮的状态。</p>\n<p>简单理解：事件发生后，跟事件相关的一系列信息数据的集合都放到这个对象里面，这个对象就是事件对象 event，它有很多属性和方法。</p>\n<p>比如：</p>\n<ol>\n<li>谁绑定了这个事件。</li>\n<li>鼠标触发事件的话，会得到鼠标的相关信息，如鼠标位置。</li>\n<li>键盘触发事件的话，会得到键盘的相关信息，如按了哪个键。</li>\n</ol>\n<h3 id=\"事件对象的常见属性和方法\"><a class=\"anchor\" href=\"#事件对象的常见属性和方法\">#</a> 事件对象的常见属性和方法</h3>\n<p>e.target 和 this 的区别：</p>\n<ul>\n<li>\n<p>this 返回的是绑定事件的对象（元素）</p>\n</li>\n<li>\n<p>e.target 返回的是触发事件的对象（元素）</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>abc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>abc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>abc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ul<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 我们给 ul 绑定了事件，那么 this 就指向 ul</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//e.target 指向我们点击的那个对象，谁触发了这个事件，我们点击的是 li，e.target 指向的就是 li</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>事件对象属性方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>e.target</td>\n<td>返回触发事件的对象，标准</td>\n</tr>\n<tr>\n<td>e.srcElement</td>\n<td>返回触发事件的对象，非标准</td>\n</tr>\n<tr>\n<td>e.type</td>\n<td>返回事件的类型，比如 click、mouseover，不带 on</td>\n</tr>\n<tr>\n<td>e.cancelBubble</td>\n<td>该属性阻止冒泡，非标准</td>\n</tr>\n<tr>\n<td>e.returnValue</td>\n<td>该属性阻止默认事件（默认行为），非标准</td>\n</tr>\n<tr>\n<td>e.preventDefault()</td>\n<td>该方法阻止默认事件（默认行为），标准，比如不让链接跳转</td>\n</tr>\n<tr>\n<td>e.stopPropagation()</td>\n<td>阻止冒泡，标准</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.baidu.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>百度<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 传统的注册方式</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 属性</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    e<span class=\"token punctuation\">.</span>returnValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">//return false 也能阻止默认行为，return 后面的代码不执行了，而且只限于传统的注册方式</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"阻止事件冒泡\"><a class=\"anchor\" href=\"#阻止事件冒泡\">#</a> 阻止事件冒泡</h2>\n<p>事件冒泡：开始时由最具体的元素接收，然后逐级向上传播到到 DOM 最顶层节点。</p>\n<p>事件冒泡本身的特性，会带来坏处，也会带来好处，需要我们灵活掌握。</p>\n<ul>\n<li>\n<p>标准写法：利用事件对象里面的 stopPropagation () 方法</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>非标准写法：利用事件对象 cancelBubble 属性</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>e<span class=\"token punctuation\">.</span>cancelBubble <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"事件委托代理-委派\"><a class=\"anchor\" href=\"#事件委托代理-委派\">#</a> 事件委托（代理、委派）</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>点击每个 li 都会弹出对话框，以前需要给每个 li 注册事件，是非常辛苦的，而且访问 DOM 的次数越多，这就会延长整个页面的交互就绪时间。</p>\n<p><strong>事件委托</strong></p>\n<p>事件委托也称为事件代理，在 jQuery 里面称为事件委派。</p>\n<p><strong>事件委托的原理</strong></p>\n<p>不是每个子节点单独设置事件监听器，而是事件监听器设置在其父节点上，然后利用冒泡原理影响设置每个子节点。</p>\n<p>以上案例：给 ul 注册点击事件，然后利用事件对象的 target 来找到当前点击的 li，因为点击 li，事件会冒泡到 ul 上，ul 有注册事件，就会触发事件监听器。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ul<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'pink'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>事件委托的作用</strong></p>\n<p>我们只操作了一次 DOM，提高了程序的性能。</p>\n<h2 id=\"鼠标事件\"><a class=\"anchor\" href=\"#鼠标事件\">#</a> 鼠标事件</h2>\n<h3 id=\"常用的鼠标事件\"><a class=\"anchor\" href=\"#常用的鼠标事件\">#</a> 常用的鼠标事件</h3>\n<table>\n<thead>\n<tr>\n<th>鼠标事件</th>\n<th>触发条件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onclick</td>\n<td>鼠标点击左键触发</td>\n</tr>\n<tr>\n<td>onmouseover</td>\n<td>鼠标经过触发</td>\n</tr>\n<tr>\n<td>onmouseout</td>\n<td>鼠标离开触发</td>\n</tr>\n<tr>\n<td>onfocus</td>\n<td>获得鼠标焦点触发</td>\n</tr>\n<tr>\n<td>onblur</td>\n<td>失去鼠标焦点触发</td>\n</tr>\n<tr>\n<td>onmousemove</td>\n<td>鼠标移动触发</td>\n</tr>\n<tr>\n<td>onmouseup</td>\n<td>鼠标弹起触发</td>\n</tr>\n<tr>\n<td>onmousedown</td>\n<td>鼠标按下触发</td>\n</tr>\n</tbody>\n</table>\n<ol>\n<li>\n<p>禁止鼠标右键菜单</p>\n<p>contextmenu 主要控制应该何时显示上下文菜单，主要用于程序员取消默认的上下文菜单</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'contextmenu'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>禁止鼠标选中（selectstart 开始选中）</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'selectstart'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\te<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"鼠标事件对象\"><a class=\"anchor\" href=\"#鼠标事件对象\">#</a> 鼠标事件对象</h3>\n<p>event 对象代表事件的状态，跟事件相关的一系列信息的集合。现阶段我们主要是用鼠标事件对象 MouseEvent 和键盘事件对象 KeyboardEvent。</p>\n<table>\n<thead>\n<tr>\n<th>鼠标事件对象</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>e.clientX</td>\n<td>返回鼠标相对于浏览器窗口可视区的 X 坐标</td>\n</tr>\n<tr>\n<td>e.clientY</td>\n<td>返回鼠标相对于浏览器窗口可视区的 Y 坐标</td>\n</tr>\n<tr>\n<td>e.pageX</td>\n<td>返回鼠标相对于文档页面的 X 坐标</td>\n</tr>\n<tr>\n<td>e.pageY</td>\n<td>返回鼠标相对于文档页面的 Y 坐标</td>\n</tr>\n<tr>\n<td>e.screenX</td>\n<td>返回鼠标相对于电脑屏幕的 X 坐标</td>\n</tr>\n<tr>\n<td>e.screenY</td>\n<td>返回鼠标相对于电脑屏幕的 Y 坐标</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>📗案例：跟随鼠标的天使</strong></p>\n<p>某个天使图片一直跟随鼠标移动</p>\n<ol>\n<li>鼠标不断的移动，使用鼠标移动事件：mousemove</li>\n<li>在页面中移动，给 document 注册事件</li>\n<li>图片要移动距离，而且不占位置，我们使用绝对定位即可</li>\n<li>核心原理：每次鼠标移动，我们都会获得最新的鼠标坐标，把这个 x 和 y 坐标做为图片的 top 和 left 值就可以移动图片</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/angel.gif<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">img</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">var</span> pic <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">// 不要忘记给 left 和 top 添加 px 单位</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   pic<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> x <span class=\"token operator\">-</span> <span class=\"token number\">50</span> <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   pic<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> y <span class=\"token operator\">-</span> <span class=\"token number\">40</span> <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"键盘事件\"><a class=\"anchor\" href=\"#键盘事件\">#</a> 键盘事件</h2>\n<h3 id=\"常用键盘事件\"><a class=\"anchor\" href=\"#常用键盘事件\">#</a> 常用键盘事件</h3>\n<p>事件除了使用鼠标触发，还可以使用键盘触发，注意给文档 document 添加键盘事件</p>\n<table>\n<thead>\n<tr>\n<th>键盘事件</th>\n<th>触发条件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onkeyup</td>\n<td>某个键盘按键被松开时触发</td>\n</tr>\n<tr>\n<td>onkeydown</td>\n<td>某个键盘按键被按下时触发</td>\n</tr>\n<tr>\n<td>onkeypress</td>\n<td>某个键盘按键被按下并弹起时触发</td>\n</tr>\n</tbody>\n</table>\n<p>** 注意：**onkeypress 和前面 2 个的区别是，它不识别功能键，比如左右箭头，shift 等。</p>\n<h3 id=\"键盘事件对象\"><a class=\"anchor\" href=\"#键盘事件对象\">#</a> 键盘事件对象</h3>\n<table>\n<thead>\n<tr>\n<th>键盘事件对象</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>keyCode</td>\n<td>返回该键的 ASCII 值</td>\n</tr>\n</tbody>\n</table>\n<p>** 注意：**onkeypress 和前面 2 个的区别是，它不识别功能键，比如左右箭头，shift 等。</p>\n<blockquote>\n<p>📗<strong>案例：模拟京东按键输入内容</strong></p>\n<p>当我们按下 s 键，光标就定位到搜索框</p>\n<ol>\n<li>核心思路：检测用户是否按下了 s 键，如果按下 s 键，就把光标定位到搜索框里面</li>\n<li>使用键盘事件对象里面的 keyCode 判断用户按下的是否是 s 键</li>\n<li>搜索框获得焦点：使用 js 里面的 focus () 方法</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> search <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyup'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 用 'keydown' 的话，会把一个 s 输入搜索框</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">//console.log (e.keyCode);// 测 s 键的 ASCII 码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">==</span> <span class=\"token number\">83</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       search<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p><strong>🍏案例：模拟京东快递单号查询</strong></p>\n<p>要求：当我们在文本框中输入内容时，文本框上面自动显示大字号的内容。</p>\n<ol>\n<li>快递单号输入内容时，上面的大号字体盒子（con）显示，这里面的字号更大</li>\n<li>表单检测用户输入：给表单添加键盘事件</li>\n<li>同时把快递单号里面的值（value）获取过来赋值给 con 盒子（innerText）作为内容</li>\n<li>如果快递单号里面内容为空，则隐藏大号字体盒子（con）盒子</li>\n<li>注意：keydown 和 keypress 在文本框里面的特点：他们两个事件触发的时候，文字还没有落入文本框中</li>\n<li>keyup 事件触发的时候，文字已经落入文本框里面了</li>\n<li>当我们失去焦点，就隐藏这个 con 盒子</li>\n<li>当我们获得焦点，并且文本框内容不为空，就显示这个 con 盒子</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>con<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>123<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入您的快递单号<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.con</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/* con 盒子下的白色小三角形 */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token selector\">.con::before</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 28px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 18px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 8px solid #000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token property\">border-style</span><span class=\"token punctuation\">:</span> solid dashed dashed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> #fff transparent transparent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> con <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.con'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> jd_input <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.jd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>jd_input<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyup'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 用 'keydown' 或 'keypress' 的话，输入第一个字符触发 keydown 或 keypress 的时候，文字还没落入文本框，事件结束了文字才落入文本框，这时文本框内有内容，但触发 keydown 或 keypress 事件时文本框里相当于是空值，con 元素不显示。这两个事件触发时文本框的 value 值总是比实际输入并显示的字符串少一个字符</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       con<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       con<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'block'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   \tcon<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>jd_input<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blur'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   con<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>jd_input<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'focus'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       con<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'block'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n",
            "tags": [
                "前端",
                "JavaScript",
                "前端",
                "JavaScript"
            ]
        },
        {
            "id": "https://60saint.github.io/front-end/JS/JS-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E7%AF%87/",
            "url": "https://60saint.github.io/front-end/JS/JS-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E7%AF%87/",
            "title": "JS - 基本语法篇",
            "date_published": "2022-02-22T16:00:00.000Z",
            "content_html": "<h1 id=\"初识-javascript\"><a class=\"anchor\" href=\"#初识-javascript\">#</a> 初识 JavaScript</h1>\n<h2 id=\"javascript-是什么\"><a class=\"anchor\" href=\"#javascript-是什么\">#</a> JavaScript 是什么</h2>\n<ul>\n<li>JavaScript 是世界上最流行的语言之一，是一种运行在客户端的脚本语言（Script 是脚本的意思）</li>\n<li>脚本语言：不需要编译，运行过程中由 js 解释器 (js 引擎）逐行来进行解释并执行</li>\n<li>现在也可以基于 Node.js 技术进行服务器端编程</li>\n</ul>\n<h2 id=\"javascript-的作用\"><a class=\"anchor\" href=\"#javascript-的作用\">#</a> JavaScript 的作用</h2>\n<ul>\n<li>表单动态校验（密码强度检测） （JS 产生最初的目的）</li>\n<li>网页特效</li>\n<li>服务端开发 (Node.js)</li>\n<li>桌面程序 (Electron)</li>\n<li>App(Cordova)</li>\n<li>控制硬件 - 物联网 (Ruff)</li>\n<li>游戏开发 (cocos2d-js)</li>\n</ul>\n<h2 id=\"htmlcssjs-的关系\"><a class=\"anchor\" href=\"#htmlcssjs-的关系\">#</a> HTML/CSS/JS 的关系</h2>\n<p><strong>HTML/CSS 标记语言 -- 描述类语言</strong></p>\n<ul>\n<li>HTML 决定网页结构和内容 (决定看到什么)，相当于人的身体</li>\n<li>CSS 决定网页呈现给用户的模样 (决定好不好看)，相当于给人穿衣服、化妆</li>\n</ul>\n<p><strong>JS 脚本语言 -- 编程类语言</strong></p>\n<ul>\n<li>实现业务逻辑和页面控制 (决定功能)，相当于人的各种动作</li>\n</ul>\n<h2 id=\"浏览器执行-js-简介\"><a class=\"anchor\" href=\"#浏览器执行-js-简介\">#</a> 浏览器执行 JS 简介</h2>\n<p>浏览器分成两部分：渲染引擎和 JS 引擎</p>\n<ul>\n<li><strong>渲染引擎</strong>：用来解析 HTML 与 CSS，俗称内核，比如 chrome 浏览器的 blink，老版本的 webkit</li>\n<li><strong>JS 引擎</strong>：也称为 JS 解释器。用来读取网页中的 JavaScript 代码，对其处理后运行，比如 chrome 浏览器的 V8</li>\n</ul>\n<p>浏览器本身并不会执行 JS 代码，而是通过内置 JavaScript 引擎 (解释器) 来执行 JS 代码。JS 引擎执行代码时逐行解释每一句源码（转换为机器语言），然后由计算机去执行，所以 JavaScript 语言归为脚本语言，会逐行解释执行。</p>\n<h2 id=\"js-的组成\"><a class=\"anchor\" href=\"#js-的组成\">#</a> JS 的组成</h2>\n<p>JavaScript</p>\n<ul>\n<li>\n<p>ECMAScript（JavaScript 语法）</p>\n<p><strong>ECMAScript</strong> 是由 ECMA 国际（原欧洲计算机制造商协会）进行标准化的一门编程语言，这种语言在万维网上应用广泛，它往往被称为 JavaScript 或 JScript，但实际上后两者是 ECMAScript 语言的实现和扩展。</p>\n<p>ECMAScript：ECMAScript 规定了 JS 的编程语法和基础核心知识，是所有浏览器厂商共同遵守的一套 JS 语法工业标准。</p>\n<p>更多参看 MDN: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9KYXZhU2NyaXB0X3RlY2hub2xvZ2llc19vdmVydmlldw==\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/JavaScript_technologies_overview</span></p>\n</li>\n<li>\n<p>DOM（文档对象模型）</p>\n<p><strong>文档对象模型</strong>（Document Object Model，简称 DOM），是 W3C 组织推荐的处理可扩展标记语言的标准编程接口。</p>\n<p>通过 DOM 提供的接口可以对页面上的各种元素进行操作（大小、位置、颜色等）。</p>\n</li>\n<li>\n<p>BOM（浏览器对象模型）</p>\n<p><strong>BOM</strong> (Browser Object Model，简称 BOM) 是指浏览器对象模型，它提供了独立于内容的、可以与浏览器窗口进行互动的对象结构。</p>\n<p>通过 BOM 可以操作浏览器窗口，比如弹出框、控制浏览器跳转、获取分辨率等。</p>\n</li>\n</ul>\n<h2 id=\"js-书写位置\"><a class=\"anchor\" href=\"#js-书写位置\">#</a> JS 书写位置</h2>\n<p>JS 有 3 种书写位置，分别为行内、内嵌和外部。</p>\n<ol>\n<li>\n<p><strong>行内式 JS</strong></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>点我试试<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><ul>\n<li>可以将单行或少量 JS 代码写在 HTML 标签的事件属性中（以 on 开头的属性），如：onclick</li>\n<li>注意单双引号的使用：在 HTML 中我们推荐使用双引号，JS 中我们推荐使用单引号</li>\n<li>可读性差，在 html 中编写 JS 大量代码时，不方便阅读；</li>\n<li>引号易错，引号多层嵌套匹配时，非常容易弄混；</li>\n<li>特殊情况下使用</li>\n</ul>\n</li>\n<li>\n<p><strong>内嵌 JS</strong></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">    </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World~!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>可以将多行 JS 代码写到  <code>&lt;script&gt;</code>  标签中</li>\n<li>内嵌 JS 是学习时常用的方式</li>\n</ul>\n</li>\n<li>\n<p><strong>外部 JS 文件</strong></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>利于 HTML 页面代码结构化，把大段 JS 代码独立到 HTML 页面之外，既美观，也方便文件级别的复用</li>\n<li>引用外部 JS 文件的 script 标签中间不可以写代码</li>\n<li>适合于 JS 代码量比较大的情况</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"javascript-注释\"><a class=\"anchor\" href=\"#javascript-注释\">#</a> JavaScript 注释</h1>\n<p>为了提高代码的可读性，JS 与 CSS 一样，也提供了注释功能。JS 中的注释主要有两种，分别是单行注释和多行注释。</p>\n<h2 id=\"单行注释\"><a class=\"anchor\" href=\"#单行注释\">#</a> 单行注释</h2>\n<p>为了提高代码的可读性，JS 与 CSS 一样，也提供了注释功能。JS 中的注释主要有两种，分别是单行注释和多行注释。</p>\n<p>单行注释的注释方式如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 我是一行文字，不想被 JS 引擎执行，所以注释起来</span></pre></td></tr></table></figure><p>// 用来注释单行文字（ 快捷键 ctrl + /）</p>\n<h2 id=\"多行注释\"><a class=\"anchor\" href=\"#多行注释\">#</a> 多行注释</h2>\n<p>多行注释的注释方式如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    获取用户年龄和姓名</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    并通过提示框显示出来</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>*/</span></pre></td></tr></table></figure><p>/* */ 用来注释多行文字（默认快捷键 alt + shift+ a）</p>\n<p>快捷键修改为： ctrl + shift + /</p>\n<p>vscode -&gt; 首选项按钮 -&gt; 键盘快捷方式 -&gt; 查找原来的快捷键 -&gt; 修改为新的快捷键 -&gt; 回车确认</p>\n<h1 id=\"javascript-输入输出语句\"><a class=\"anchor\" href=\"#javascript-输入输出语句\">#</a> JavaScript 输入输出语句</h1>\n<p>为了方便信息的输入输出，JS 中提供了一些输入输出语句，其常用的语句如下：</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n<th>归属</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>alert(msg)</td>\n<td>浏览器弹出警示框</td>\n<td>浏览器</td>\n</tr>\n<tr>\n<td>console.log(msg)</td>\n<td>浏览器控制台打印输出信息</td>\n<td>浏览器</td>\n</tr>\n<tr>\n<td>prompt(info)</td>\n<td>浏览器弹出输入框，用户可以输入</td>\n<td>浏览器</td>\n</tr>\n</tbody>\n</table>\n<p>** 注意：**alert () 主要用来显示消息给用户，console.log () 用来给程序员自己看运行时的消息。</p>\n<h1 id=\"变量\"><a class=\"anchor\" href=\"#变量\">#</a> 变量</h1>\n<h2 id=\"变量概述\"><a class=\"anchor\" href=\"#变量概述\">#</a> 变量概述</h2>\n<p><strong>什么是变量</strong></p>\n<p>白话：变量就是一个装东西的盒子。</p>\n<p>通俗：变量是用于存放数据的容器。我们通过变量名获取数据，甚至数据可以修改。</p>\n<p><strong>变量在内存中的存储</strong></p>\n<p>本质：变量是程序在内存中申请的一块用来存放数据的空间。</p>\n<p>类似我们酒店的房间，一个房间就可以看做是一个变量。</p>\n<h2 id=\"变量的使用\"><a class=\"anchor\" href=\"#变量的使用\">#</a> 变量的使用</h2>\n<ol>\n<li>\n<p><strong>声明变量</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 声明变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 声明一个名称为 age 的变量</span></pre></td></tr></table></figure><ul>\n<li>var 是一个 JS 关键字，用来声明变量 (variable 变量的意思)。使用该关键字声明变量后，计算机会自动为变量分配内存空间，不需要程序员管</li>\n<li>age 是程序员定义的变量名，我们要通过变量名来访问内存中分配的空间</li>\n</ul>\n</li>\n<li>\n<p><strong>赋值</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>age <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 给 age 这个变量赋值为 10</span></pre></td></tr></table></figure><ul>\n<li>= 用来把右边的值赋给左边的变量空间中 此处代表赋值的意思</li>\n<li>变量值是程序员保存到变量空间里的值</li>\n</ul>\n</li>\n<li>\n<p><strong>变量的初始化</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 声明变量同时赋值为 18</span></pre></td></tr></table></figure><p>声明一个变量并赋值，我们称之为变量的初始化。</p>\n</li>\n</ol>\n<h2 id=\"变量语法扩展\"><a class=\"anchor\" href=\"#变量语法扩展\">#</a> 变量语法扩展</h2>\n<ol>\n<li>\n<p><strong>更新变量</strong></p>\n<p>一个变量被重新复赋值后，它原有的值就会被覆盖，变量值将以最后一次赋的值为准。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>age <span class=\"token operator\">=</span> <span class=\"token number\">81</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 最后的结果就是 81 因为 18 被覆盖掉了</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>同时声明多个变量</strong></p>\n<p>同时声明多个变量时，只需要写一个 var，多个变量名之间使用英文逗号隔开。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'zs'</span><span class=\"token punctuation\">,</span> sex <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>声明变量特殊情况</strong></p>\n<table>\n<thead>\n<tr>\n<th>情况</th>\n<th>说明</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>var age ; console.log (age);</td>\n<td>只声明，不赋值</td>\n<td>undefined</td>\n</tr>\n<tr>\n<td>console.log(age)</td>\n<td>不声明，不赋值，直接使用</td>\n<td>报错</td>\n</tr>\n<tr>\n<td>age = 10; console.log (age);</td>\n<td>不声明，只赋值</td>\n<td>10</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h2 id=\"变量命名规范\"><a class=\"anchor\" href=\"#变量命名规范\">#</a> 变量命名规范</h2>\n<ul>\n<li>由字母 (A-Za-z)、数字 (0-9)、下划线 (_)、美元符号 ( $ ) 组成，如：usrAge, num01, _name</li>\n<li>严格区分大小写。var app; 和 var App; 是两个变量</li>\n<li>不能以数字开头。18age 是错误的</li>\n<li>不能是关键字、保留字。例如：var、for、while</li>\n<li>变量名必须有意义。</li>\n<li>遵守驼峰命名法。首字母小写，后面单词的首字母需要大写。myFirstName</li>\n</ul>\n<h1 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h1>\n<h2 id=\"数据类型简介\"><a class=\"anchor\" href=\"#数据类型简介\">#</a> 数据类型简介</h2>\n<h3 id=\"为什么需要数据类型\"><a class=\"anchor\" href=\"#为什么需要数据类型\">#</a> 为什么需要数据类型</h3>\n<p>在计算机中，不同的数据所需占用的存储空间是不同的，为了便于把数据分成所需内存大小不同的数据，充分利用存储空间，于是定义了不同的数据类型。</p>\n<p>简单来说，数据类型就是数据的类别型号。比如姓名 “张三”，年龄 18，这些数据的类型是不一样的。</p>\n<h3 id=\"变量的数据类型\"><a class=\"anchor\" href=\"#变量的数据类型\">#</a> 变量的数据类型</h3>\n<p>变量是用来存储值的所在处，它们有名字和数据类型。变量的数据类型决定了如何将代表这些值的位存储到计算机的内存中。**JavaScript 是一种弱类型或者说动态语言。** 这意味着不用提前声明变量的类型，在程序运行过程中，类型会被自动确定。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 这是一个数字型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> areYouOk <span class=\"token operator\">=</span> <span class=\"token string\">'是的'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 这是一个字符串</span></pre></td></tr></table></figure><p>在代码运行时，变量的数据类型是由 JS 引擎根据  <code>=</code>  右边变量值的数据类型来判断的，运行完毕之后，变量就确定了数据类型。</p>\n<p>JavaScript 拥有动态类型，同时也意味着相同的变量可用作不同的类型：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//x 为数字</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token string\">\"Bill\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//x 为字符串</span></pre></td></tr></table></figure><h3 id=\"数据类型的分类\"><a class=\"anchor\" href=\"#数据类型的分类\">#</a> 数据类型的分类</h3>\n<p>JS 把数据类型分为两类：</p>\n<ul>\n<li>简单数据类型（Number,String,Boolean,Undefined,Null）</li>\n<li>复杂数据类型（object)</li>\n</ul>\n<h2 id=\"简单数据类型\"><a class=\"anchor\" href=\"#简单数据类型\">#</a> 简单数据类型</h2>\n<p>JavaScript 中的简单数据类型及其说明如下：</p>\n<table>\n<thead>\n<tr>\n<th>简单数据类型</th>\n<th>说明</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Number</td>\n<td>数字型，包含整型值和浮点值，如 21、0.21</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Boolean</td>\n<td>布尔值类型，如 true、false，等价于 1 和 0</td>\n<td>false</td>\n</tr>\n<tr>\n<td>String</td>\n<td>字符串类型，如 &quot;张三&quot;。注意 js 里面字符串都带引号</td>\n<td>&quot;&quot;</td>\n</tr>\n<tr>\n<td>Undefined</td>\n<td><code>var a;</code>  声明了变量 a 但是没有给值，此时 a=undefined</td>\n<td>undefined</td>\n</tr>\n<tr>\n<td>Null</td>\n<td><code>var a = null;</code>  声明了变量 a 为空置</td>\n<td>null</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"数字型-number\"><a class=\"anchor\" href=\"#数字型-number\">#</a> 数字型 Number</h3>\n<p>JavaScript 数字类型既可以用来保存整数值，也可以保存小数 (浮点数）。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 整数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> Age <span class=\"token operator\">=</span> <span class=\"token number\">21.3747</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 小数</span></pre></td></tr></table></figure><ol>\n<li>\n<p><strong>数字型进制</strong></p>\n<p>最常见的进制有二进制、八进制、十进制、十六进制。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 八进制数字序列范围：0~7</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">07</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 对应十进制的 7</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 2. 十六进制数字序列范围：0~9 以及 A~F</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0xA</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在 JS 中八进制前面加 0，十六进制前面加 0x</p>\n</li>\n<li>\n<p><strong>数字型范围</strong></p>\n<p>JavaScript 中数值的最大和最小值</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 1.7976931348623157e+308</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MIN_VALUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 5e-324</span></pre></td></tr></table></figure><ul>\n<li>最大值：Number.MAX_VALUE，这个值为：1.7976931348623157e+308</li>\n<li>最小值：Number.MIN_VALUE，这个值为：5e-32</li>\n</ul>\n</li>\n<li>\n<p><strong>数字型三个特殊值</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// Infinity</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// -Infinity</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// NaN</span></pre></td></tr></table></figure><ul>\n<li>Infinity，代表无穷大，大于任何数值</li>\n<li>-Infinity，代表无穷小，小于任何数值</li>\n<li>NaN ，Not a number，代表一个非数值</li>\n</ul>\n</li>\n<li>\n<p><strong>isNaN()</strong></p>\n<p>用来判断一个变量是否为非数字的类型，返回 true 或者 false</p>\n<p>isNaN(x)：</p>\n<ul>\n<li>x 是数字，返回 false</li>\n<li>x 不是数字，返回 true</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> usrAge <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> isOk <span class=\"token operator\">=</span> <span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>userAge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>isNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//false，21 不是一个非数字</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> usrName <span class=\"token operator\">=</span> <span class=\"token string\">\"andy\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//true，\"andy\" 是一个非数字</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"字符串型-string\"><a class=\"anchor\" href=\"#字符串型-string\">#</a> 字符串型 String</h3>\n<p>字符串型可以是引号中的任意文本，其语法为双引号 &quot;&quot; 和单引号 ''</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> strMsg <span class=\"token operator\">=</span> <span class=\"token string\">\"我爱北京天安门~\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 使用双引号表示字符串</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> strMsg2 <span class=\"token operator\">=</span> <span class=\"token string\">'我爱吃猪蹄~'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 使用单引号表示字符串</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 常见错误</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> strMsg3 <span class=\"token operator\">=</span> 我爱大肘子<span class=\"token punctuation\">;</span><span class=\"token comment\">// 报错，没使用引号，会被认为是 js 代码，但 js 没有这些语法</span></pre></td></tr></table></figure><p>因为 HTML 标签里面的属性使用的是双引号，JS 这里我们更推荐使用单引号。</p>\n<ol>\n<li>\n<p><strong>字符串引号嵌套</strong></p>\n<p>JS 可以用单引号嵌套双引号，或者用双引号嵌套单引号 (<strong>外双内单，外单内双</strong>)</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> strMsg <span class=\"token operator\">=</span> <span class=\"token string\">'我是\"高帅富\"程序猿'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 可以用 '' 包含 \"\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> strMsg2 <span class=\"token operator\">=</span> <span class=\"token string\">\"我是'高帅富'程序猿\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 也可以用 \"\" 包含 ''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 常见错误</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> badQuotes <span class=\"token operator\">=</span> 'What on earth<span class=\"token operator\">?</span>\"<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 报错，不能单双引号搭配</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>字符串转义符</strong></p>\n<p>类似 HTML 里面的特殊字符，字符串中也有特殊字符，我们称之为转义符。</p>\n<p>转义符都是 \\ 开头的，常用的转义符及其说明如下：</p>\n<table>\n<thead>\n<tr>\n<th>转义符</th>\n<th>解释说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\n</td>\n<td>换行符，n 是 newline 的意思</td>\n</tr>\n<tr>\n<td><code>\\\\</code></td>\n<td>斜杠 \\</td>\n</tr>\n<tr>\n<td><code>\\'</code></td>\n<td>' 单引号</td>\n</tr>\n<tr>\n<td><code>\\&quot;</code></td>\n<td>” 双引号</td>\n</tr>\n<tr>\n<td>\\t</td>\n<td>tab 缩进</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>空格，b 是 blank 的意思</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p><strong>字符串长度</strong></p>\n<p>字符串是由若干字符组成的，这些字符的数量就是字符串的长度。通过字符串的 length 属性可以获取整个字符串的长度。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> strMsg <span class=\"token operator\">=</span> <span class=\"token string\">\"我是帅气多金的程序猿！\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>strMsg<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 显示 11</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>字符串拼接</strong></p>\n<ul>\n<li>多个字符串之间可以使用 + 进行拼接，其拼接方式为字符串 + 任何类型 = 拼接之后的新字符串</li>\n<li>拼接前会把与字符串相加的任何类型转成字符串，再拼接成一个新的字符串</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1.1 字符串 \"相加\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span> <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token string\">'world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// hello world</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 1.2 数值字符串 \"相加\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'100'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'100'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 100100</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 1.3 数值字符串 + 数值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'11'</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 1112</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我'</span><span class=\"token operator\">+</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 只要有字符就会相连</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//console.log (' 我 age 岁啦 ');// 这样不行</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我'</span> <span class=\"token operator\">+</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 我 18</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我'</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span> <span class=\"token string\">'岁啦'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 我 18 岁啦</span></pre></td></tr></table></figure><ul>\n<li>我们经常会将字符串和变量来拼接，因为变量可以很方便地修改里面的值</li>\n<li>变量是不能添加引号的，因为加引号的变量会变成字符串</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"布尔型-boolean\"><a class=\"anchor\" href=\"#布尔型-boolean\">#</a> 布尔型 Boolean</h3>\n<p>布尔类型有两个值：true 和 false，其中 true 表示真（对），而 false 表示假（错）。</p>\n<p>布尔型和数字型相加的时候，true 的值为 1，false 的值为 0。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 1</span></pre></td></tr></table></figure><h3 id=\"undefined-和-null\"><a class=\"anchor\" href=\"#undefined-和-null\">#</a> Undefined 和 Null</h3>\n<p>一个声明后没有被赋值的变量会有一个默认值 undefined ( 如果进行相连或者相加时，注意结果）</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> variable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// undefined</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你好'</span> <span class=\"token operator\">+</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 你好 undefined</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span> <span class=\"token operator\">+</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// NaN</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token operator\">+</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// NaN</span></pre></td></tr></table></figure><p>一个声明变量给 null 值，里面存的值为空</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> vari <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你好'</span> <span class=\"token operator\">+</span> vari<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 你好 null</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span> <span class=\"token operator\">+</span> vari<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 11</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token operator\">+</span> vari<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 1</span></pre></td></tr></table></figure><h2 id=\"获取变量数据类型\"><a class=\"anchor\" href=\"#获取变量数据类型\">#</a> 获取变量数据类型</h2>\n<h3 id=\"获取检测变量的数据类型\"><a class=\"anchor\" href=\"#获取检测变量的数据类型\">#</a> 获取检测变量的数据类型</h3>\n<p>typeof 可用来获取检测变量的数据类型</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 结果 number</span></pre></td></tr></table></figure><p>不同类型的返回值</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>typeof &quot;小白&quot;</td>\n<td>&quot;string&quot;</td>\n</tr>\n<tr>\n<td>Number</td>\n<td>typeof 18</td>\n<td>&quot;number&quot;</td>\n</tr>\n<tr>\n<td>Boolean</td>\n<td>typeof true</td>\n<td>&quot;boolean&quot;</td>\n</tr>\n<tr>\n<td>Undefined</td>\n<td>typeof undefined</td>\n<td>&quot;undefined&quot;</td>\n</tr>\n<tr>\n<td>Null</td>\n<td>typeof null</td>\n<td>&quot;object&quot;</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"字面量\"><a class=\"anchor\" href=\"#字面量\">#</a> 字面量</h3>\n<p>字面量是在源代码中一个固定值的表示法，通俗来说，就是字面量表示如何表达这个值。</p>\n<ul>\n<li>数字字面量：8, 9, 10</li>\n<li>字符串字面量：' 程序员 ', &quot;大前端&quot;</li>\n<li>布尔字面量：true，false</li>\n</ul>\n<h2 id=\"数据类型转换\"><a class=\"anchor\" href=\"#数据类型转换\">#</a> 数据类型转换</h2>\n<h3 id=\"什么是数据类型转换\"><a class=\"anchor\" href=\"#什么是数据类型转换\">#</a> 什么是数据类型转换</h3>\n<p>使用表单、prompt 获取过来的数据默认是字符串类型的，此时就不能直接简单的进行加法运算，而需要转换变量的数据类型。通俗来说，就是把一种数据类型的变量转换成另外一种数据类型。</p>\n<p>我们通常会实现 3 种方式的转换：</p>\n<ul>\n<li>转换为字符串类型</li>\n<li>转换为数字型</li>\n<li>转换为布尔型</li>\n</ul>\n<h3 id=\"转换为字符串\"><a class=\"anchor\" href=\"#转换为字符串\">#</a> 转换为字符串</h3>\n<table>\n<thead>\n<tr>\n<th>方式</th>\n<th>说明</th>\n<th>案例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>toString()</td>\n<td>转成字符串</td>\n<td>var num = 1; alert(num.toString());</td>\n</tr>\n<tr>\n<td>String () 强制转换</td>\n<td>转成字符串</td>\n<td>var num = 1; alert(String(num));</td>\n</tr>\n<tr>\n<td><strong>加号拼接字符串</strong></td>\n<td>和字符串拼接的结果都是字符串</td>\n<td>var num = 1; alert (num + &quot;我是字符串&quot;);</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>toString () 和 String () 使用方式不一样。</li>\n<li>三种转换方式，我们更喜欢用第三种加号拼接字符串转换方式，这一种方式也称之为隐式转换。</li>\n</ul>\n<h3 id=\"转换为数字型\"><a class=\"anchor\" href=\"#转换为数字型\">#</a> 转换为数字型</h3>\n<table>\n<thead>\n<tr>\n<th>方式</th>\n<th>说明</th>\n<th>案例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>parseInt (String) 函数</td>\n<td>将 string 类型转成整数数值型</td>\n<td>parseInt('78');</td>\n</tr>\n<tr>\n<td>parseFloat (string) 函数</td>\n<td>将 string 类型转成浮点数数值型</td>\n<td>parseFloat('78.21');</td>\n</tr>\n<tr>\n<td>Number () 强制转换函数</td>\n<td>将 string 类型转换为数值型</td>\n<td>Number('12');</td>\n</tr>\n<tr>\n<td>js 隐式转换（- * /）</td>\n<td>利用算数运算隐式转换为数值型</td>\n<td>'12' - 0</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>注意 parseInt 和 parseFloat 单词的大小写</li>\n<li>隐式转换是我们在进行算数运算的时候，JS 自动转换了数据类型</li>\n</ul>\n<h3 id=\"转换为布尔型\"><a class=\"anchor\" href=\"#转换为布尔型\">#</a> 转换为布尔型</h3>\n<table>\n<thead>\n<tr>\n<th>方式</th>\n<th>说明</th>\n<th>案例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Boolean () 函数</td>\n<td>其他类型转成布尔值</td>\n<td>Boolean('true');</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>代表空、否定的值会被转换为 false，如 ''、0、NaN、null、undefined</li>\n<li>其余值都会被转换为 true</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">'小白'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// true</span></pre></td></tr></table></figure><h1 id=\"运算符\"><a class=\"anchor\" href=\"#运算符\">#</a> 运算符</h1>\n<h2 id=\"运算符的分类\"><a class=\"anchor\" href=\"#运算符的分类\">#</a> 运算符的分类</h2>\n<p><strong>运算符</strong>（operator）也被称为操作符，是用于实现赋值、比较和执行算数运算等功能的符号。</p>\n<p>JavaScript 中常用的运算符有：</p>\n<ul>\n<li>算术运算符</li>\n<li>递增和递减运算符</li>\n<li>比较运算符</li>\n<li>逻辑运算符</li>\n<li>赋值运算符</li>\n</ul>\n<h2 id=\"算术运算符\"><a class=\"anchor\" href=\"#算术运算符\">#</a> 算术运算符</h2>\n<ul>\n<li>\n<p>算术运算符概述</p>\n<p>概念：算术运算使用的符号，用于执行两个变量或值的算术运算。</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+</td>\n<td>加</td>\n<td>10+20=30</td>\n</tr>\n<tr>\n<td>-</td>\n<td>减</td>\n<td>10-20=-10</td>\n</tr>\n<tr>\n<td>*</td>\n<td>乘</td>\n<td>10*20=200</td>\n</tr>\n<tr>\n<td>/</td>\n<td>除</td>\n<td>10/20=0.5</td>\n</tr>\n<tr>\n<td>%</td>\n<td>取余数（取模）</td>\n<td>返回除法的余数 9%2=1</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>浮点数的精度问题</p>\n<p>浮点数值的最高精度是 17 位小数，但在进行算术计算时其精确度远远不如整数。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 结果不是 0.3，而是：0.30000000000000004</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.07</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 结果不是 7，而是：7.000000000000001</span></pre></td></tr></table></figure><p>所以：不要直接判断两个浮点数是否相等！</p>\n</li>\n<li>\n<p>表达式和返回值</p>\n<p>表达式：是由数字、运算符、变量等以能求得数值的有意义排列方法所得的组合</p>\n<p>简单理解：是由数字、运算符、变量等组成的式子</p>\n<p>表达式最终都会有一个结果，返回给开发者，称为返回值</p>\n</li>\n</ul>\n<h2 id=\"递增和递减运算符\"><a class=\"anchor\" href=\"#递增和递减运算符\">#</a> 递增和递减运算符</h2>\n<ul>\n<li>\n<p>递增和递减运算符概述</p>\n<p>如果需要反复给数字变量添加或减去 1，可以使用递增（++）和递减（--）运算符来完成。</p>\n<p>在 JavaScript 中，递增（++）和递减（--）既可以放在变量前面，也可以放在变量后面。放在变量前面时，我们可以称为前置递增（递减）运算符，放在变量后面时，我们可以称为后置递增（递减）运算符。</p>\n<p>注意：递增和递减运算符必须和变量配合使用。</p>\n</li>\n<li>\n<p>递增运算符</p>\n<ul>\n<li>\n<p>前置递增运算符</p>\n<p>num 前置递增，就是自加 1，类似于 num = num + 1，但是 num 写起来更简单。</p>\n<p>先自加，后返回值</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>num <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 21</span></pre></td></tr></table></figure></li>\n<li>\n<p>后置递增运算符</p>\n<p>num 后置递增，就是自加 1，类似于 num = num + 1，但是 num 写起来更简单。</p>\n<p>先返回原值，后自加</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> num<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 20</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"比较运算符\"><a class=\"anchor\" href=\"#比较运算符\">#</a> 比较运算符</h2>\n<ul>\n<li>\n<p>比较运算符概述</p>\n<p>概念：比较运算符（关系运算符）是两个数据进行比较时所使用的运算符，比较运算后，会返回一个布尔值（true /false）作为比较运算的结果。</p>\n<table>\n<thead>\n<tr>\n<th>运算符名称</th>\n<th>说明</th>\n<th>案例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&lt;</td>\n<td>小于号</td>\n<td>1 &lt; 2</td>\n<td>true</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于号</td>\n<td>1 &gt; 2</td>\n<td>false</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>大于等于号（大于或者等于）</td>\n<td>2 &gt;= 2</td>\n<td>true</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>小于等于号（小于或者等于）</td>\n<td>3 &lt;= 2</td>\n<td>false</td>\n</tr>\n<tr>\n<td>==</td>\n<td>判等号（会转型）</td>\n<td>37 == 37</td>\n<td>true</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>不等号</td>\n<td>37 != 37</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>===</code>   <code>!===</code></td>\n<td>全等，要求值和数据类型都一致</td>\n<td>37 === '37'</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>等号比较</p>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>用法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>=</td>\n<td>赋值</td>\n<td>把右边给左边</td>\n</tr>\n<tr>\n<td>==</td>\n<td>判断</td>\n<td>判断两边是否相等（注意此时有隐式转换）</td>\n</tr>\n<tr>\n<td>===</td>\n<td>全等</td>\n<td>判断两边的值和数据类型是否完全相同</td>\n</tr>\n</tbody>\n</table>\n<p>&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td data-num=&quot;1&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;<mark>&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'18'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&quot;2&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;</mark>=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'18'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</p>\n</li>\n</ul>\n<h2 id=\"逻辑运算符\"><a class=\"anchor\" href=\"#逻辑运算符\">#</a> 逻辑运算符</h2>\n<ul>\n<li>\n<p>逻辑运算符概述</p>\n<p>概念：逻辑运算符是用来进行布尔值运算的运算符，其返回值也是布尔值。后面开发中经常用于多个条件的判断</p>\n<table>\n<thead>\n<tr>\n<th>逻辑运算符</th>\n<th>说明</th>\n<th>案例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&amp;&amp;</td>\n<td>” 逻辑与 “，简称” 与 “ and</td>\n<td>true &amp;&amp; false</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>!</td>\n<td>” 逻辑非 “，简称” 非 “ not</td>\n<td>!true</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>逻辑与 &amp;&amp;</p>\n<p>两边都是 true 才返回 true，否则返回 false</p>\n</li>\n<li>\n<p>逻辑或 ||</p>\n<p>两边都是 false 才返回 false，否则返回 true</p>\n</li>\n<li>\n<p>逻辑非！</p>\n<p>逻辑非（!）也叫作取反符，用来取一个布尔值相反的值，如 true 的相反值是 false</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> isOk <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>isOk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// false</span></pre></td></tr></table></figure></li>\n<li>\n<p>短路运算（逻辑中断）</p>\n<p>短路运算的原理：当有多个表达式（值）时，左边的表达式值可以确定结果时，就不再继续运算右边的表达式的值；</p>\n<ul>\n<li>\n<p>逻辑与</p>\n<p>语法：表达式 1 &amp;&amp; 表达式 2</p>\n<p>如果第一个表达式的值为真，则返回表达式 2</p>\n<p>如果第一个表达式的值为假，则返回表达式 1</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">456</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 456</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">456</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">456</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">789</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 789</span></pre></td></tr></table></figure></li>\n<li>\n<p>逻辑或</p>\n<p>语法：表达式 1|| 表达式 2</p>\n<p>如果第一个表达式的值为真，则返回表达式 1</p>\n<p>如果第一个表达式的值为假，则返回表达式 2</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span> <span class=\"token operator\">||</span> <span class=\"token number\">456</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 123</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token number\">456</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 456</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span> <span class=\"token operator\">||</span> <span class=\"token number\">456</span> <span class=\"token operator\">||</span> <span class=\"token number\">789</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 123</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"赋值运算符\"><a class=\"anchor\" href=\"#赋值运算符\">#</a> 赋值运算符</h2>\n<p>概念：用来把数据赋值给变量的运算符。</p>\n<table>\n<thead>\n<tr>\n<th>赋值运算符</th>\n<th>说明</th>\n<th>案例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>=</td>\n<td>直接赋值</td>\n<td>var usrName = ' 我是值 ';</td>\n</tr>\n<tr>\n<td>+=、-=</td>\n<td>加、减一个数后再赋值</td>\n<td>var age = 10; age += 5;// 15</td>\n</tr>\n<tr>\n<td>*=、/=、%=</td>\n<td>乘、除、取模后再赋值</td>\n<td>var age = 2; age *= 5;// 10</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>age <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 相当于 age = age + 5;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>age <span class=\"token operator\">-=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 相当于 age = age - 5;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>age <span class=\"token operator\">*=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 相当于 age = age * 10;</span></pre></td></tr></table></figure><h2 id=\"运算符优先级\"><a class=\"anchor\" href=\"#运算符优先级\">#</a> 运算符优先级</h2>\n<table>\n<thead>\n<tr>\n<th>优先级</th>\n<th>运算符</th>\n<th>顺序</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>小括号</td>\n<td>()</td>\n</tr>\n<tr>\n<td>2</td>\n<td>一元运算符</td>\n<td>++ -- !</td>\n</tr>\n<tr>\n<td>3</td>\n<td>算术运算符</td>\n<td><strong>先 * / %，后 + -</strong></td>\n</tr>\n<tr>\n<td>4</td>\n<td>关系运算符</td>\n<td>&gt; &gt;= &lt; &lt;=</td>\n</tr>\n<tr>\n<td>5</td>\n<td>相等运算符</td>\n<td><code>==</code>   <code>!=</code>   <code>===</code>   <code>!==</code></td>\n</tr>\n<tr>\n<td>6</td>\n<td>逻辑运算符</td>\n<td>** 先 &amp;&amp;，后</td>\n</tr>\n<tr>\n<td>7</td>\n<td>赋值运算符</td>\n<td>=</td>\n</tr>\n<tr>\n<td>8</td>\n<td>逗号运算符</td>\n<td>,</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>一元运算符里面的逻辑非优先级很高</li>\n<li>逻辑与比逻辑或优先级高</li>\n</ul>\n<h1 id=\"流程控制\"><a class=\"anchor\" href=\"#流程控制\">#</a> 流程控制</h1>\n<h2 id=\"流程控制概念\"><a class=\"anchor\" href=\"#流程控制概念\">#</a> 流程控制概念</h2>\n<p>在一个程序执行的过程中，各条代码的执行顺序对程序的结果是有直接影响的。很多时候我们要通过控制代码的执行顺序来实现我们要完成的功能。</p>\n<p>简单理解：<strong>流程控制就是来控制代码按照一定结构顺序来执行</strong></p>\n<p>流程控制主要有三种结构，分别是<strong>顺序结构</strong>、<strong>分支结构</strong>和<strong>循环结构</strong>，代表三种代码执行的顺序。</p>\n<h2 id=\"顺序流程控制\"><a class=\"anchor\" href=\"#顺序流程控制\">#</a> 顺序流程控制</h2>\n<p>顺序结构是程序中最简单、最基本的流程控制，它没有特定的语法结构，程序会按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</p>\n<h2 id=\"分支流程控制\"><a class=\"anchor\" href=\"#分支流程控制\">#</a> 分支流程控制</h2>\n<ul>\n<li>\n<p>分支结构</p>\n<p>由上到下执行代码的过程中，根据不同的条件，执行不同的路径代码（执行代码多选一的过程），从而得到不同的结果</p>\n<p>JS 语言提供了两种分支结构语句：if 语句、switch 语句</p>\n</li>\n<li>\n<p>if 语句</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 条件成立执行代码，否则什么也不做</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>条件表达式<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 条件成立执行的代码语句</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>if else 语句（双分支语句）</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 条件成立 执行 if 里面代码，否则执行 else 里面的代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>条件表达式<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token comment\">// [如果] 条件成立执行的代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     <span class=\"token comment\">// [否则] 执行的代码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>if else if 语句（多分支语句）</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 适合于检查多重条件。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>条件表达式<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     语句<span class=\"token number\">1</span>；</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>条件表达式<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     语句<span class=\"token number\">2</span>；</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>条件表达式<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     语句<span class=\"token number\">3</span>；</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     <span class=\"token comment\">// 上述条件都不成立执行此处代码</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>三元表达式</p>\n<p>三元表达式也能做一些简单的条件选择。 有三元运算符组成的式子称为三元表达式</p>\n<ol>\n<li>\n<p>语法结构</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>表达式<span class=\"token number\">1</span> <span class=\"token operator\">?</span> 表达式<span class=\"token number\">2</span> <span class=\"token operator\">:</span> 表达式<span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>执行思路</p>\n<ul>\n<li>如果表达式 1 为 true ，则返回表达式 2 的<strong>值</strong>，如果表达式 1 为 false，则返回表达式 3 的<strong>值</strong></li>\n<li>简单理解： 就类似于 if else （双分支） 的简写</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>switch 语句</p>\n<ol>\n<li>\n<p>语法结构</p>\n<p>switch 语句也是多分支语句，它用于基于不同的条件来执行不同的代码。当要针对变量设置一系列的特定值的选项时，就可以使用 switch。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span> 表达式 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     <span class=\"token keyword\">case</span> <span class=\"token literal-property property\">value1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     \t<span class=\"token comment\">// 表达式 等于 value1 时要执行的代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     \t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     <span class=\"token keyword\">case</span> <span class=\"token literal-property property\">value2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     \t<span class=\"token comment\">// 表达式 等于 value2 时要执行的代码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     \t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     \t<span class=\"token comment\">// 表达式 不等于任何一个 value 时要执行的代码</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>switch ：开关 转换 ， case ：小例子 选项</li>\n<li>关键字 switch 后面<strong>括号内</strong>可以是<strong>表达式</strong>或<strong>值</strong>， 通常是一个<strong>变量</strong></li>\n<li>关键字 <strong>case</strong> , 后跟一个选项的表达式或值，<strong>后面跟一个冒号</strong></li>\n<li>switch 表达式的值会与结构中的 case 的值做比较</li>\n<li>如果存在匹配<strong>全等</strong> (===) ，则与该 case 关联的代码块会被执行，并在遇<strong>到 break 时停止</strong>，整个 switch 语句代码执行结束</li>\n<li>如果所有的 case 的值都和表达式的值不匹配，则执行 default 里的代码</li>\n</ul>\n<p><strong>注意：</strong> <em>执行 case 里面的语句时，如果没有 break，则继续执行下一个 case 里面的语句。</em></p>\n</li>\n<li>\n<p>switch 语句和 if else if 语句的区别</p>\n<ol>\n<li>一般情况下，它们两个语句可以相互替换</li>\n<li>switch...case 语句通常处理 case 为比较确定值的情况， 而 if…else… 语句更加灵活，常用于范围判断 (大于、等于某个范围)</li>\n<li>switch 语句进行条件判断后直接执行到程序的条件语句，效率更高。而 if…else 语句有几种条件，就得判断多次。</li>\n<li>当分支比较少时，if… else 语句的执行效率比 switch 语句高。</li>\n<li>当分支比较多时，switch 语句的执行效率比较高，而且结构更清晰。</li>\n</ol>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"循环流程控制\"><a class=\"anchor\" href=\"#循环流程控制\">#</a> 循环流程控制</h2>\n<p><strong>循环目的</strong></p>\n<ul>\n<li>在实际问题中，有许多具有<em>规律性的重复操作</em>，因此在程序中要完成这类操作就需要<em>重复执行某些语句</em></li>\n</ul>\n<p><strong>JS 中的循环</strong></p>\n<p>再 JS 中，主要有三种类型的循环语句：</p>\n<ul>\n<li>for 循环</li>\n<li>while 循环</li>\n<li>do...while 循环</li>\n</ul>\n<h3 id=\"for-循环\"><a class=\"anchor\" href=\"#for-循环\">#</a> for 循环</h3>\n<p>在程序中，一组被重复执行的语句被称之为<em>循环体</em>，能否继续重复执行，取决于循环的<em>终止条件</em>。由循环体及循环的终止条件组成的语句，被称之为<strong>循环语句</strong></p>\n<ul>\n<li>\n<p>语法结构</p>\n<p>for 循环主要用于把某些代码循环若干次，通常跟计数有关系。其语法结构如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>初始化变量<span class=\"token punctuation\">;</span> 条件表达式<span class=\"token punctuation\">;</span> 操作表达式 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     <span class=\"token comment\">// 循环体</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>\n<p><strong>初始化变量：</strong> 通常被用于初始化一个计数器，该表达式可以使用 var 关键字声明新的变量，这个变量帮我们来记录次数。</p>\n</li>\n<li>\n<p><strong>条件表达式：</strong> 用于确定每一次循环是否能被执行。如果结果是 true 就继续循环，否则退出循环。</p>\n</li>\n<li>\n<p><strong>操作表达式：</strong> 每次循环的最后都要执行的表达式。通常被用于更新或者递增计数器变量。当然，递减变量也是可以的。</p>\n</li>\n</ul>\n<p><em>初始化操作在整个 for 循环只会执行一次</em></p>\n<p><strong>断点调试：</strong></p>\n<p>断点调试是指自己在程序的某一行设置一个断点，调试时，程序运行到这一行就会停住，然后你可以一步一步往下调试，调试过程中可以看各个变量当前的值，出错的话，调试到出错的代码行即显示错误，停下。</p>\n<p><em>断点调试可以帮我们观察程序的运行过程</em></p>\n<p>浏览器中按 F12--&gt; sources --&gt; 找到需要调试的文件 --&gt; 在程序的某一行设置断点</p>\n<p>Watch: 监视，通过 watch 可以监视变量的值的变化，非常的常用。</p>\n<p>F11: 程序单步执行，让程序一行一行的执行，这个时候，观察 watch 中变量的值的变化。</p>\n</li>\n<li>\n<p>for 循环重复相同的代码</p>\n<p>for 循环可以重复相同的代码 ，比如我们要输出 10 句 “我要上川大”</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 基本写法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我要上川大'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 用户输入次数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入次数:'</span><span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> num<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我要上川大'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>for 循环重复不相同的代码</p>\n<p>for 循环还可以重复不同的代码，这主要是因为使用了计数器 ，计数器在每次循环过程中都会有变化。</p>\n<p>例如，求输出一个人 1 到 100 岁：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 基本写法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这个人今年'</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">'岁了'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//for 里面是可以添加其他语句的</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    \tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这个人今年1岁了， 它出生了'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    \tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这个人今年100岁了，它死了'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    \tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这个人今年'</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">'岁了'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>for 循环重复某些相同操作</p>\n<p>for 循环因为有了计数器的存在，我们还可以重复的执行某些操作，比如做一些算术运算。</p>\n</li>\n</ul>\n<h3 id=\"双重-for-循环\"><a class=\"anchor\" href=\"#双重-for-循环\">#</a> 双重 for 循环</h3>\n<ul>\n<li>\n<p>双重 for 循环概述</p>\n<p>很多情况下，单层 for 循环并不能满足我们的需求，比如我们要打印一个 5 行 5 列的图形、打印一个倒直角三角形等，此时就可以通过循环嵌套来实现。</p>\n<p><strong>循环嵌套</strong>是指<em>在一个循环语句中再定义一个循环语句的语法结构</em>，例如在 for 循环语句中，可以再嵌套一个 for 循环，这样的 for 循环语句我们称之为<em>双重 for 循环</em></p>\n</li>\n<li>\n<p>双重 for 循环语法</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>外循环的初始<span class=\"token punctuation\">;</span> 外循环的条件<span class=\"token punctuation\">;</span> 外循环的操作表达式<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>内循环的初始<span class=\"token punctuation\">;</span> 内循环的条件<span class=\"token punctuation\">;</span> 内循环的操作表达式<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t需执行的代码<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>\n<p>内层循环可以看做外层循环的语句</p>\n</li>\n<li>\n<p>内层循环执行的顺序也要遵循 for 循环的执行顺序</p>\n</li>\n<li>\n<p>外层循环执行一次，内层循环要执行全部次数</p>\n</li>\n</ul>\n</li>\n<li>\n<p>打印三行三列星星</p>\n<p>核心：</p>\n<p>1. 内层循环负责一行打印三个星星</p>\n<p>2. 外层循环负责打印三行</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> star <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tstar <span class=\"token operator\">+=</span> <span class=\"token string\">'☆'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 每次满 5 个星星 就 加一次换行</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tstar <span class=\"token operator\">+=</span> <span class=\"token string\">'\\n'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>star<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"while-循环\"><a class=\"anchor\" href=\"#while-循环\">#</a> while 循环</h3>\n<p>while 语句可以在条件表达式为真的前提下，循环执行指定的一段代码，直到表达式不为真时结束循环</p>\n<p>while 语句的语法结构如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>条件表达式<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 循环体代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>执行思路</strong></p>\n<p>① 先执行条件表达式，如果结果为 true，则执行循环体代码；如果为 false，则退出循环，执行后面代码</p>\n<p>② 执行循环体代码</p>\n<p>③ 循环体代码执行完毕后，程序会继续判断执行条件表达式，如条件仍为 true，则会继续执行循环体，直到循环条件为 false 时，整个循环过程才会结束</p>\n<p><strong>注意：</strong></p>\n<p>① 使用 while 循环时一定要注意，它必须要有退出条件，否则会成为死循环</p>\n<p>② while 循环和 for 循环的不同之处在于 while 循环可以做较为复杂的条件判断，比如判断用户名和密码</p>\n<h3 id=\"do-while-循环\"><a class=\"anchor\" href=\"#do-while-循环\">#</a> do while 循环</h3>\n<p>do... while 语句其实是 while 语句的一个变体。该循环会先执行一次代码块，然后对条件表达式进行判断，如果条件为真，就会重复执行循环体，否则退出循环。</p>\n<p>do... while 语句的语法结构如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 循环体代码 - 条件表达式为 true 时重复执行循环体代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>条件表达式<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>执行思路：</strong></p>\n<p>① 先执行一次循环体代码</p>\n<p>② 再执行条件表达式，如果结果为 true，则继续执行循环体代码，如果为 false，则退出循环，继续执行后面代码</p>\n<p><strong>注意：<strong>先执行循环体，再判断，我们会发现 do…while 循环语句</strong>至少会执行一次循环体代码</strong></p>\n<h3 id=\"continue-break\"><a class=\"anchor\" href=\"#continue-break\">#</a> continue break</h3>\n<ul>\n<li>\n<p>continue 关键字</p>\n<p><strong>continue 关键字</strong>用于立即<strong>跳出本次循环</strong>，<strong>继续下一次循环</strong>（本次循环体中 continue 之后的代码就会少执行一次）。</p>\n<p>例如，吃 5 个包子，第 3 个有虫子，就扔掉第 3 个，继续吃第 4 个第 5 个包子，其代码实现如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这个包子有虫子，扔掉'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 跳出本次循环，跳出的是第 3 次循环</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我正在吃第'</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">'个包子呢'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>break 关键字</p>\n<p><strong>break 关键字用于</strong>立即<strong>跳出整个循环</strong>（循环结束）。</p>\n<p>例如，吃 5 个包子，吃到第 3 个发现里面有半个虫子，其余的不吃了，其代码实现如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 直接退出整个 for 循环，跳到整个 for 下面的语句</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我正在吃第'</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">'个包子呢'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"javascript-命名规范\"><a class=\"anchor\" href=\"#javascript-命名规范\">#</a> JavaScript 命名规范</h1>\n<h2 id=\"标识符命名规范\"><a class=\"anchor\" href=\"#标识符命名规范\">#</a> 标识符命名规范</h2>\n<ul>\n<li>变量、函数的命名必须要有意义</li>\n<li>变量的名称一般用名词</li>\n<li>函数的名称一般用动词</li>\n</ul>\n<h2 id=\"操作符规范\"><a class=\"anchor\" href=\"#操作符规范\">#</a> 操作符规范</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 操作符的左右两侧各保留一个空格</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我正在吃第'</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">'个包子呢'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"单行注释规范\"><a class=\"anchor\" href=\"#单行注释规范\">#</a> 单行注释规范</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 单行注释前面注意有个空格</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我正在吃第'</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">'个包子呢'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"javascript-数组\"><a class=\"anchor\" href=\"#javascript-数组\">#</a> JavaScript 数组</h1>\n<h2 id=\"数组的概念\"><a class=\"anchor\" href=\"#数组的概念\">#</a> 数组的概念</h2>\n<p>数组（Array）可以把一组相关的数据一起存放，并提供方便的访问 (获取）方式。</p>\n<p>数组是指一组数据的集合，其中的每个数据被称作元素，在数组中可以存放任意类型的元素。数组是一 种将一组数据存储在单个变量名下的优雅方式。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 普通变量一次只能存储一个值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 数组一次可以存储多个值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h2 id=\"创建数组\"><a class=\"anchor\" href=\"#创建数组\">#</a> 创建数组</h2>\n<h3 id=\"利用-new-创建数组\"><a class=\"anchor\" href=\"#利用-new-创建数组\">#</a> 利用 new 创建数组</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> 数组名 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> ；</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建一个新的空数组</span></pre></td></tr></table></figure><h3 id=\"利用数组字面量创建数组\"><a class=\"anchor\" href=\"#利用数组字面量创建数组\">#</a> 利用数组字面量创建数组</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//1. 使用数组字面量方式创建空的数组</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> 数组名 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>；</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//2. 使用数组字面量方式创建带初始值的数组</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> 数组名 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'小白'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'小黑'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'大黄'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'瑞奇'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>数组的字面量是方括号 [ ]</li>\n<li>声明数组并赋值称为数组的初始化</li>\n<li>这种字面量方式也是最多使用的方式</li>\n</ul>\n<h3 id=\"数组元素的类型\"><a class=\"anchor\" href=\"#数组元素的类型\">#</a> 数组元素的类型</h3>\n<p>数组中可以存放<strong>任意类型</strong>的数据，例如字符串，数字，布尔值等</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> arrStus <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'小白'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28.9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"数组的索引\"><a class=\"anchor\" href=\"#数组的索引\">#</a> 数组的索引</h2>\n<p><strong>索引 (下标) ：</strong> 用来访问数组元素的序号（数组下标从 0 开始）。</p>\n<p>数组可以通过<strong>索引</strong>来访问、设置、修改对应的数组元素，我们可以通过 “数组名 [索引]” 的形式来获取数组中的元素。</p>\n<p>这里的<strong>访问</strong>就是获取得到的意思</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 定义数组</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> arrStus <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 获取数组中的第 2 个元素</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>arrStus<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"遍历数组\"><a class=\"anchor\" href=\"#遍历数组\">#</a> 遍历数组</h2>\n<p><strong>遍历:</strong> 就是把数组中的每个元素从头到尾都访问一次（类似我们每天早上学生的点名）。 我们可以通过 for 循环索引遍历数组中的每一项</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arrStus<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"数组的长度\"><a class=\"anchor\" href=\"#数组的长度\">#</a> 数组的长度</h2>\n<p>使用 “数组名.length” 可以访问数组元素的数量（数组长度）。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> arrStus <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>arrStus<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></pre></td></tr></table></figure><p><strong>注意：</strong></p>\n<ol>\n<li>此处数组的长度是数组元素的个数 ，不要和数组的索引号混淆。</li>\n<li>当我们数组里面的元素个数发生了变化，这个 length 属性跟着一起变化。</li>\n</ol>\n<h2 id=\"数组中新增元素\"><a class=\"anchor\" href=\"#数组中新增元素\">#</a> 数组中新增元素</h2>\n<h3 id=\"通过修改-length-长度新增数组元素\"><a class=\"anchor\" href=\"#通过修改-length-长度新增数组元素\">#</a> 通过修改 length 长度新增数组元素</h3>\n<ul>\n<li>可以通过修改 length 长度来实现数组扩容的目的</li>\n<li>length 属性是可读写的</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pink'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中索引号是 4，5，6 的空间没有给值，就是声明变量未给值，默认值就是 undefined。</p>\n<h3 id=\"通过修改数组索引新增数组元素\"><a class=\"anchor\" href=\"#通过修改数组索引新增数组元素\">#</a> 通过修改数组索引新增数组元素</h3>\n<ul>\n<li>可以通过修改数组索引的方式追加数组元素</li>\n<li>不能直接给数组名赋值，否则会覆盖掉以前的数据</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pink'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'hotpink'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这种方式也是最常用的一种方式</p>\n<h1 id=\"javascript-函数\"><a class=\"anchor\" href=\"#javascript-函数\">#</a> JavaScript 函数</h1>\n<h2 id=\"函数的概念\"><a class=\"anchor\" href=\"#函数的概念\">#</a> 函数的概念</h2>\n<p>在 JS 里面，可能会定义非常多的相同代码或者功能相似的代码，这些代码可能需要大量重复使用。</p>\n<p>虽然 for 循环语句也能实现一些简单的重复操作，但是比较具有局限性，此时我们就可以使用 JS 中的函数。</p>\n<p><strong>函数</strong>：就是封装了一段可被重复调用执行的<strong>代码块</strong>。通过此代码块可以实现大量代码的重复使用。</p>\n<h2 id=\"函数的使用\"><a class=\"anchor\" href=\"#函数的使用\">#</a> 函数的使用</h2>\n<p>函数在使用时分为两步：声明函数和调用函数。</p>\n<h3 id=\"声明函数\"><a class=\"anchor\" href=\"#声明函数\">#</a> 声明函数</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 声明函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">函数名</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 函数体代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>function 是声明函数的关键字，必须小写</li>\n<li>由于函数一般是为了实现某个功能才定义的，所以通常我们将函数名命名为动词，比如 getSum</li>\n</ul>\n<h3 id=\"调用函数\"><a class=\"anchor\" href=\"#调用函数\">#</a> 调用函数</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 调用函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">函数名</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 通过调用函数名来执行函数体代码</span></pre></td></tr></table></figure><ul>\n<li>调用的时候千万不要忘记添加小括号</li>\n<li>函数不调用，自己不执行。</li>\n</ul>\n<p><strong>注意：</strong> 声明函数本身并不会执行代码，只有调用函数时才会执行函数体代码。</p>\n<h3 id=\"函数的封装\"><a class=\"anchor\" href=\"#函数的封装\">#</a> 函数的封装</h3>\n<ul>\n<li>函数的封装是把一个或者多个功能通过<strong>函数的方式封装起来</strong>，对外只提供一个简单的函数接口</li>\n<li>简单理解：封装类似于将电脑配件整合组装到机箱中 ( 类似快递打包）</li>\n</ul>\n<h2 id=\"函数的参数\"><a class=\"anchor\" href=\"#函数的参数\">#</a> 函数的参数</h2>\n<h3 id=\"形参和实参\"><a class=\"anchor\" href=\"#形参和实参\">#</a> 形参和实参</h3>\n<p>在声明函数时，可以在函数名称后面的小括号中添加一些参数，这些参数被称为<strong>形参</strong>，而在调用该函数时，同样也需要传递相应的参数，这些参数被称为<strong>实参</strong>。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>形参</strong></td>\n<td><strong>形</strong>式上的参数，<strong>函数定义</strong>的时候传递的参数，当前并不知道是什么</td>\n</tr>\n<tr>\n<td>实参</td>\n<td><strong>实</strong>际上的参数，<strong>函数调用</strong>的时候传递的参数，实参是传递给形参的</td>\n</tr>\n</tbody>\n</table>\n<p><strong>参数的作用:</strong> 在<strong>函数内部</strong>某些值不能固定，我们可以通过参数在<strong>调用函数时传递</strong>不同的值进去。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 带参数的函数声明</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">函数名</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">形参<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 形参<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> 形参<span class=\"token number\">3.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 函数体</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 带参数的函数调用</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">函数名</span><span class=\"token punctuation\">(</span>实参<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 实参<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> 实参<span class=\"token number\">3.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"函数参数的传递过程\"><a class=\"anchor\" href=\"#函数参数的传递过程\">#</a> 函数参数的传递过程</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 声明函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 调用函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 4</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 11</span></pre></td></tr></table></figure><ol>\n<li>调用的时候实参值是传递给形参的</li>\n<li>形参简单理解为：<strong>不用声明的变量</strong></li>\n<li>实参和形参的多个参数之间用逗号（,）分隔</li>\n</ol>\n<h3 id=\"函数形参和实参个数不匹配问题\"><a class=\"anchor\" href=\"#函数形参和实参个数不匹配问题\">#</a> 函数形参和实参个数不匹配问题</h3>\n<table>\n<thead>\n<tr>\n<th>参数个数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>实参等于形参个数</td>\n<td>输出正确结果</td>\n</tr>\n<tr>\n<td>实参多于形参个数</td>\n<td>只取到形参的个数</td>\n</tr>\n<tr>\n<td>实参小于形参个数</td>\n<td>多的形参定义为 undefined，结果为 NaN</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 形参和实参个数相等，输出正确结果</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 实参个数多于形参，只取到形参的个数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 实参个数少于形参，多的形参定义为 undefined，结果为 NaN</span></pre></td></tr></table></figure><p><strong>注意</strong>：在 JavaScript 中，形参的默认值是 undefined。</p>\n<h2 id=\"函数的返回值\"><a class=\"anchor\" href=\"#函数的返回值\">#</a> 函数的返回值</h2>\n<h3 id=\"return-语句\"><a class=\"anchor\" href=\"#return-语句\">#</a> return 语句</h3>\n<p>有的时候，我们会希望函数将值返回给调用者，此时通过使用 return 语句就可以实现。</p>\n<p>return 语句的语法格式如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 声明函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">函数名</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> 需要返回的值<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 调用函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">函数名</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 此时调用函数就可以得到函数体内 return 后面的值</span></pre></td></tr></table></figure><ul>\n<li>在使用 return 语句时，函数会停止执行，并返回指定的值</li>\n<li>如果函数没有 return，返回的值是 undefined</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 声明函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">666</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 调用函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 此时 sum 的值就等于 666，因为 return 语句会把自身后面的值返回给调用者</span></pre></td></tr></table></figure><h3 id=\"return-终止函数\"><a class=\"anchor\" href=\"#return-终止函数\">#</a> return 终止函数</h3>\n<p>return 语句之后的代码不被执行。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 函数体</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span><span class=\"token comment\">// 注意：return 后的代码不执行</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我不会被执行，因为前面有return'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> resNum <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 调用函数，传入两个实参，并通过 resNum 接收函数返回值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>resNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 27</span></pre></td></tr></table></figure><h3 id=\"return-的返回值\"><a class=\"anchor\" href=\"#return-的返回值\">#</a> return 的返回值</h3>\n<p><strong>return 只能返回一个值</strong>。如果用逗号隔开多个值，以<strong>最后一个</strong>为准。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1，num2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 函数体</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> resNum <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 调用函数，传入两个实参，并通过 resNum 接收函数返回值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>resNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 6</span></pre></td></tr></table></figure><h2 id=\"arguments-的使用\"><a class=\"anchor\" href=\"#arguments-的使用\">#</a> arguments 的使用</h2>\n<p>当我们不确定有多少个参数传递的时候，可以用 arguments 来获取。在 JavaScript 中，arguments 实际上是当前函数的一个内置对象。所有函数都内置了一个 arguments 对象，arguments 对象中存储了传递的所有实参。</p>\n<p><strong>arguments 展示形式是一个伪数组</strong>，因此可以进行遍历。伪数组具有以下特点：</p>\n<ul>\n<li>具有 length 属性</li>\n<li>按索引方式储存数据</li>\n<li>不具有数组的 push,pop 等方法</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 利用函数求任意个数的最大值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">maxValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> max <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            max <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> max<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">maxValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">maxValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"函数的两种声明方式\"><a class=\"anchor\" href=\"#函数的两种声明方式\">#</a> 函数的两种声明方式</h2>\n<h3 id=\"自定义函数方式命名函数\"><a class=\"anchor\" href=\"#自定义函数方式命名函数\">#</a> 自定义函数方式（命名函数）</h3>\n<p>利用函数关键字 function 自定义函数方式。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 声明定义方式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 调用</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>因为有名字，所以也被称为命名函数</li>\n<li>调用函数的代码既可以放到声明函数的前面，也可以放在声明函数的后面</li>\n</ul>\n<h3 id=\"函数表达式方式匿名函数\"><a class=\"anchor\" href=\"#函数表达式方式匿名函数\">#</a> 函数表达式方式（匿名函数）</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 这是函数表达式写法，匿名函数后面跟分号结束</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span>；</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 调用的方式，函数调用必须写到函数体下面</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>因为函数没有名字，所以也被称为匿名函数</li>\n<li>这个 fn 里面存储的是一个函数</li>\n<li>函数表达式方式原理跟声明变量方式是一致的</li>\n<li>函数调用的代码必须写到函数体后面</li>\n</ul>\n<h1 id=\"作用域\"><a class=\"anchor\" href=\"#作用域\">#</a> 作用域</h1>\n<p>通常来说，一段程序代码中所用到的名字并不总是有效和可用的，而限定这个名字的可用性的代码范围就是这个名字的作用域。作用域的使用提高了程序逻辑的局部性，增强了程序的可靠性，减少了名字冲突。</p>\n<p>JavaScript（es6 前）中的作用域有两种：</p>\n<ul>\n<li>\n<p>全局作用域</p>\n<p>作用于所有代码执行的环境 (整个 script 标签内部) 或者一个独立的 js 文件。</p>\n</li>\n<li>\n<p>局部作用域（函数作用域）</p>\n<p>作用于函数内的代码环境，就是局部作用域。因为跟函数有关系，所以也称为函数作用域。</p>\n</li>\n<li>\n<p>JS 没有块级作用域（在 ES6 之前）</p>\n<p>块作用域由 { } 包括。</p>\n<p>在其他编程语言中（如 java、c# 等），在 if 语句、循环语句中创建的变量，仅仅只能在本 if 语句、本循环语句中使用，如下面的 Java 代码：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//java 有块级作用域</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    int num <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    system<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 123</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>system<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 报错，因为代码中 &#123;&#125; 即一块作用域，其中声明的变量 num，在 “&#123;&#125;” 之外不能使用</span></pre></td></tr></table></figure><p>而与之类似的 JavaScript 代码，则不会报错：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 123</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 123</span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"变量的作用域\"><a class=\"anchor\" href=\"#变量的作用域\">#</a> 变量的作用域</h2>\n<p>在 JavaScript 中，根据作用域的不同，变量可以分为两种：</p>\n<ul>\n<li>全局变量</li>\n<li>局部变量</li>\n</ul>\n<ol>\n<li>\n<p>全局变量</p>\n<p>在全局作用域下声明的变量叫做全局变量（在函数外部定义的变量）。</p>\n<ul>\n<li>全局变量在代码的任何位置都可以使用</li>\n<li>在全局作用域下 var 声明的变量是全局变量</li>\n<li>特殊情况下，在函数内不使用 var 声明的变量也是全局变量（不建议使用）</li>\n</ul>\n</li>\n<li>\n<p>局部变量</p>\n<p>在局部作用域下声明的变量叫做局部变量（在函数内部定义的变量）</p>\n<ul>\n<li>局部变量只能在该函数内部使用</li>\n<li>在函数内部 var 声明的变量是局部变量</li>\n<li>函数的形参实际上就是局部变量</li>\n</ul>\n</li>\n<li>\n<p>全局变量和局部变量的区别</p>\n<ul>\n<li>全局变量：在任何一个地方都可以使用，只有在浏览器关闭时才会被销毁，因此比较占内存</li>\n<li>局部变量：只在函数内部使用，当其所在的代码块被执行时，会被初始化；当代码块运行结束后，就会被销毁，因此更节省内存空间</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"作用域链\"><a class=\"anchor\" href=\"#作用域链\">#</a> 作用域链</h2>\n<p>如果函数中还有函数，那么在这个作用域中就又可以诞生一个作用域；根据在 <strong>[内部函数可以访问外部函数变量]</strong> 的这种机制，用链式查找决定哪些数据能被内部函数访问，就称作作用域链</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">456</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 123</span></pre></td></tr></table></figure><p>作用域链：采取就近原则的方式来查找变量最终的值。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token string\">'22'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">fn3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">function</span> <span class=\"token function\">fn3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 4</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 22</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"预解析\"><a class=\"anchor\" href=\"#预解析\">#</a> 预解析</h2>\n<p>JavaScript 代码是由浏览器中的 JavaScript 解析器来执行的。JavaScript 解析器在运行 JavaScript 代码的时候分为两步：预解析和代码执行。</p>\n<ul>\n<li>预解析：在当前作用域下，JS 代码执行之前，浏览器会默认把带有 var 和 function 声明的变量在内存中进行提前声明或者定义。</li>\n<li>代码执行：从上到下执行 JS 语句。</li>\n</ul>\n<p><strong>预解析会把变量和函数的声明在代码执行之前执行完成。</strong></p>\n<h3 id=\"变量预解析\"><a class=\"anchor\" href=\"#变量预解析\">#</a> 变量预解析</h3>\n<p>变量提升（变量预解析）：变量的声明会被提升到当前作用域的最上面，变量的赋值不会提升。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//undefined</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"函数预解析\"><a class=\"anchor\" href=\"#函数预解析\">#</a> 函数预解析</h3>\n<p>函数提升：函数的声明会被提升到当前作用域的最上面，但是不会调用函数。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'打印'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 结果：控制台打印字符串 ---” 打印 “</span></pre></td></tr></table></figure><p><strong>函数表达式声明函数问题：</strong></p>\n<p>函数表达式创建函数，会执行变量提升，此时接收函数的变量名无法正确的调用</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'想不到吧'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 结果：报错提示”fn is not a function\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 解释：该段代码执行之前，会做变量声明提升，fn 在提升之后的值是 undefined；而 fn 调用是在 fn 被赋值为函数体之前，此时 fn 的值是 undefined，所以无法正确调用</span></pre></td></tr></table></figure><h1 id=\"对象\"><a class=\"anchor\" href=\"#对象\">#</a> 对象</h1>\n<h2 id=\"对象的相关概念\"><a class=\"anchor\" href=\"#对象的相关概念\">#</a> 对象的相关概念</h2>\n<ul>\n<li>在 JavaScript 中，对象是一组无序的相关属性和方法的集合，所有的事物都是对象，例如字符串、数值、数组、函数等。对象是由属性和方法组成的。</li>\n<li>属性：事物的特征，在对象中用属性来表示（常用名词）</li>\n<li>方法：事物的行为，在对象中用方法来表示（常用动词）</li>\n</ul>\n<p>保存一个值时，可以使用变量，保存多个值（一组值）时，可以使用数组。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 如果要保存一个人的完整信息呢？</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 例如，将 “张三” 的个人的信息保存在数组中的方式为：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">154</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>用数组保存数据的缺点是：数据只能通过索引值访问，开发者需要清晰的清楚所有的数据的排行才能准确地获取数据，而当数据量庞大时，不可能做到记忆所有数据的索引值。</p>\n<p>为了更好地存储一组数据，对象应运而生：对象中为每项数据设置了属性名称，可以访问数据更语义化，数据结构清晰，表意明显，方便开发者使用。</p>\n<p>使用对象记录上组数据为：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"张三疯\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string-property property\">\"sex\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"男\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string-property property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string-property property\">\"height\"</span><span class=\"token operator\">:</span> <span class=\"token number\">154</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>JS 中的对象表达结构更清晰，更强大。</p>\n<h2 id=\"创建对象的三种方式\"><a class=\"anchor\" href=\"#创建对象的三种方式\">#</a> 创建对象的三种方式</h2>\n<h3 id=\"使用对象字面量创建对象\"><a class=\"anchor\" href=\"#使用对象字面量创建对象\">#</a> 使用对象字面量创建对象</h3>\n<p>就是花括号 {} 里面包含了表达这个具体事物（对象）的属性和方法；{} 里面采取键值对的形式表示</p>\n<ul>\n<li>键：相当于属性名</li>\n<li>值：相当于属性值，可以是任意类型的值（数字类型、字符串类型、布尔类型，函数类型等）</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> star <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">sex</span><span class=\"token operator\">:</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function-variable function\">sayHi</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'大家好啊~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"利用-new-object-创建对象\"><a class=\"anchor\" href=\"#利用-new-object-创建对象\">#</a> 利用 new Object 创建对象</h3>\n<ul>\n<li>\n<p>创建空对象</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> andy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Obect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>通过内置构造函数 Object 创建对象，此时 andy 变量已经保存了创建出来的空对象</p>\n</li>\n<li>\n<p>给空对象添加属性和方法</p>\n<p>通过对象操作属性和方法的方式，来为对象增加属性和方法</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>andy<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>andy<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">19</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>andy<span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>andy<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sayHi</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'大家好啊~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"利用构造函数创建对象\"><a class=\"anchor\" href=\"#利用构造函数创建对象\">#</a> 利用构造函数创建对象</h3>\n<ul>\n<li>\n<p>构造函数：是一种特殊的函数，主要用来初始化对象，即为对象成员变量赋初始值，它总与 new 运算符一起使用。我们可以把对象中一些公共的属性和方法抽取出来，然后封装到这个函数里面。</p>\n</li>\n<li>\n<p>构造函数的封装格式：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">构造函数名</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">形参<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 形参<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> 形参<span class=\"token number\">3</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>属性名<span class=\"token number\">1</span> <span class=\"token operator\">=</span> 参数<span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>属性名<span class=\"token number\">2</span> <span class=\"token operator\">=</span> 参数<span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>属性名<span class=\"token number\">3</span> <span class=\"token operator\">=</span> 参数<span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>方法名 <span class=\"token operator\">=</span> 函数体<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>构造函数的调用格式</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">构造函数名</span><span class=\"token punctuation\">(</span>实参<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 实参<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> 实参<span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>以上代码中，obj 即接收到构造函数创建出来的对象。</p>\n</li>\n<li>\n<p>注意事项</p>\n<ol>\n<li>构造函数约定<strong>首字母大写。</strong></li>\n<li>函数内的属性和方法前面需要添加 <strong>this</strong>，表示当前对象的属性和方法。</li>\n<li>构造函数中<strong>不需要 return 返回结果</strong>。</li>\n<li>当我们创建对象的时候，<strong>必须用 new 来调用构造函数</strong>。</li>\n<li>构造函数，如 Stars ()，抽象了对象的公共部分，封装到了函数里面，它泛指某一大类（class）</li>\n<li>构造函数，如 Stars ()，抽象了对象的公共部分，封装到了函数里面，它泛指某一大类（class）</li>\n</ol>\n</li>\n<li>\n<p>new 关键字的作用</p>\n<ol>\n<li>在构造函数代码开始执行之前，创建一个空对象；</li>\n<li>修改 this 的指向，把 this 指向创建出来的空对象；</li>\n<li>执行函数的代码</li>\n<li>在函数完成之后，返回 this--- 即创建出来的对象</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"对象的使用\"><a class=\"anchor\" href=\"#对象的使用\">#</a> 对象的使用</h2>\n<ul>\n<li>\n<p>对象的属性</p>\n<p>对象中存储<strong>具体数据</strong>的 &quot;键值对&quot; 中的 &quot;键&quot; 称为对象的属性，即对象中存储具体数据的项</p>\n</li>\n<li>\n<p>对象的方法</p>\n<p>对象中存储函数的 &quot;键值对&quot; 中的 &quot;键&quot; 称为对象的方法，即对象中存储函数的项</p>\n</li>\n<li>\n<p>访问对象的属性</p>\n<ul>\n<li>对象里面的属性调用：对象。属性名，这个小点。就理解为 “的”</li>\n<li>对象里面属性的另一种调用方式：对象 [‘属性名’]，注意方括号里面的属性必须加引号</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>star<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 调用名字属性</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>star<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 调用名字属性</span></pre></td></tr></table></figure></li>\n<li>\n<p>调用对象的方法</p>\n<p>对象里面的方法调用：对象。方法名 ()，注意这个方法名字后面一定加括号</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>star<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 调用 sayHi 方法，注意，一定不要忘记带后面的括号</span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"遍历对象\"><a class=\"anchor\" href=\"#遍历对象\">#</a> 遍历对象</h2>\n<p>for...in 语句用于对数组或者对象的属性进行循环操作。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>变量 <span class=\"token keyword\">in</span> 对象名字<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 在此执行代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>语法中的变量是自定义的，它需要符合命名规范，通常我们会将这个变量写为 k 或者 key。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 这里的 k 是属性名</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 这里的 obj [k] 是属性值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"javascript-内置对象\"><a class=\"anchor\" href=\"#javascript-内置对象\">#</a> JavaScript 内置对象</h1>\n<ul>\n<li>JavaScript 中的对象分为 3 种：自定义对象、内置对象、浏览器对象</li>\n<li>前面两种对象是 JS 基础内容，属于 ECMAScript；第三个浏览器对象属于 JS 独有，JS API 讲解</li>\n<li>内置对象就是指 JS 语言自带的一些对象，这些对象供开发者使用，并提供了一些常用的或是最基本而必要的功能（属性和方法）</li>\n<li>内置对象最大的优点就是帮助我们快速开发</li>\n<li>JavaScript 提供了多个内置对象：Math、Date、Array、String 等</li>\n</ul>\n<p>学习一个内置对象的使用，只要学会其常用成员的使用即可，我们可以通过查文档学习，可以通过 MDN/W3C 来查询。</p>\n<p>Mozilla 开发者网络（MDN）提供了有关开放网络技术（Open Web）的信息，包括 HTML、CSS 和万维网及 HTML5 应用的 API。</p>\n<p>MDN:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04v\">https://developer.mozilla.org/zh-CN/</span></p>\n<p><strong>如何学习对象中的方法：</strong></p>\n<ol>\n<li>查阅该方法的功能</li>\n<li>查看里面参数的意义和类型</li>\n<li>查看返回值的意义和类型</li>\n<li>通过 demo 进行测试</li>\n</ol>\n<h2 id=\"math-对象\"><a class=\"anchor\" href=\"#math-对象\">#</a> Math 对象</h2>\n<h3 id=\"math-概述\"><a class=\"anchor\" href=\"#math-概述\">#</a> Math 概述</h3>\n<p>Math 对象不是构造函数，它具有数学常数和函数的属性和方法。跟数学相关的运算（求绝对值，取整、最大值等）可以使用 Math 中的成员。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token comment\">// 圆周率</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 向下取整</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 向上取整</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 四舍五入版就近取整，注意 - 3.5 结果是 - 3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 绝对值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 求最大和最小值</span></pre></td></tr></table></figure><h3 id=\"随机数方法-random\"><a class=\"anchor\" href=\"#随机数方法-random\">#</a> 随机数方法 random ()</h3>\n<p>random () 方法可以随机返回一个小数，其取值范围是 [0，1)，左闭右开 0 &lt;= x &lt; 1</p>\n<p>得到一个两数之间的随机整数，包括两个数在内:</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getRandom</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">min<span class=\"token punctuation\">,</span> max</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">-</span> min <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> min<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"日期对象\"><a class=\"anchor\" href=\"#日期对象\">#</a> 日期对象</h2>\n<ul>\n<li>Date 对象和 Math 对象不一样，他是一个构造函数，所以我们需要实例化后才能使用</li>\n<li>Date 实例用来处理日期和时间</li>\n</ul>\n<h3 id=\"date-方法的使用\"><a class=\"anchor\" href=\"#date-方法的使用\">#</a> Date () 方法的使用</h3>\n<ol>\n<li>\n<p><strong>获取当前时间必须实例化</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// Wed Jul 26 2023 14:52:46 GMT+0800 (中国标准时间)</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>Date () 构造函数的参数</strong></p>\n</li>\n</ol>\n<p>如果括号里面有时间，就返回参数里面的时间。例如日期格式字符串为‘2019-5-1’，可以写成 new Date ('2019-5-1') 或者 new Date ('2019/5/1')</p>\n<ul>\n<li>如果 Date () 不写参数，就返回当前时间</li>\n<li>如果 Date () 里面写参数，就返回括号里面输入的时间</li>\n</ul>\n<h3 id=\"日期格式化\"><a class=\"anchor\" href=\"#日期格式化\">#</a> 日期格式化</h3>\n<p>我们想要 2019-8-8 8:8:8 格式的日期，要怎么办？</p>\n<p>需要获取日期指定的部分，所以我们要手动的得到这种格式。</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getFullYear()</td>\n<td>获取当年</td>\n<td>dObj.getFullYear()</td>\n</tr>\n<tr>\n<td>getMonth()</td>\n<td>获取当月（0-11）</td>\n<td>dObj.getMonth()</td>\n</tr>\n<tr>\n<td>getDate()</td>\n<td>获取当天日期</td>\n<td>dObj.getDate()</td>\n</tr>\n<tr>\n<td>getDay()</td>\n<td>获取星期几（周日 0 到周六 6）</td>\n<td>dObj.getDay()</td>\n</tr>\n<tr>\n<td>getHours()</td>\n<td>获取当前小时</td>\n<td>dObj.getHours()</td>\n</tr>\n<tr>\n<td>getMinutes()</td>\n<td>获取当前分钟</td>\n<td>dObj.getMinutes()</td>\n</tr>\n<tr>\n<td>getSeconds()</td>\n<td>获取当前秒钟</td>\n<td>dObj.getSeconds()</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"获取日期的总的毫秒形式\"><a class=\"anchor\" href=\"#获取日期的总的毫秒形式\">#</a> 获取日期的总的毫秒形式</h3>\n<p>Date 对象是基于 1970 年 1 月 1 日（世界标准时间）起的毫秒数（时间戳）</p>\n<p>我们经常利用总的毫秒数来计算时间，因为它更精确</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 实例化 Date 对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 1. 用于获取对象的原始值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 1690353452935（就是我们现在时间距离 1970.1.1 总的毫秒数）</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 1690353452935</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 2. 简单写可以这么做（最常用的写法）</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">var</span> date1 <span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// +new Date () 返回的就是总的毫秒数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>date1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 3. HTML5 中提供的方法</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"数组对象\"><a class=\"anchor\" href=\"#数组对象\">#</a> 数组对象</h2>\n<h3 id=\"检测是否为数组\"><a class=\"anchor\" href=\"#检测是否为数组\">#</a> 检测是否为数组</h3>\n<ul>\n<li>instanceof 运算符，可以判断一个对象是否属于某种类型</li>\n<li>Array.isArray () 用于判断一个对象是否为数组，isArray () 是 HTML5 中提供的方法</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// false</span></pre></td></tr></table></figure><h3 id=\"添加删除数组元素\"><a class=\"anchor\" href=\"#添加删除数组元素\">#</a> 添加删除数组元素</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>push (参数 1...)</td>\n<td>末尾添加一个或多个元素，注意修改原数组</td>\n<td>并返回新的长度</td>\n</tr>\n<tr>\n<td>pop()</td>\n<td>删除数组最后一个元素，把数组长度减 1，无参数，修改原数组</td>\n<td>返回它删除的元素的值</td>\n</tr>\n<tr>\n<td>unshift (参数 1...)</td>\n<td>向数组的开头添加一个或更多元素，注意修改原数组</td>\n<td>并返回新的长度</td>\n</tr>\n<tr>\n<td>shift()</td>\n<td>删除数组中的第一个元素，数组长度减 1，无参数，修改原数组</td>\n<td>并返回第一个元素的值</td>\n</tr>\n<tr>\n<td>slice()</td>\n<td>数组截取 slice (begin, end)，结束索引不包含在提取结果中</td>\n<td>返回被截取项目的新数组，不会修改原数组</td>\n</tr>\n<tr>\n<td>splice()</td>\n<td>数组删除 splice (第几个开始，要删除个数)</td>\n<td>返回被删除项目的新数组，会影响原数组</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"数组排序\"><a class=\"anchor\" href=\"#数组排序\">#</a> 数组排序</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>是否修改原数组</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reverse()</td>\n<td>颠倒数组中元素的顺序，无参数</td>\n<td>该方法会改变原来的数组，返回新数组</td>\n</tr>\n<tr>\n<td>sort()</td>\n<td>对数组的元素进行排序</td>\n<td>该方法会改变原来的数组，返回新数组</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">;</span><span class=\"token comment\">// 降序</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">//return a - b;// 升序</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"数组索引方法\"><a class=\"anchor\" href=\"#数组索引方法\">#</a> 数组索引方法</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>indexOf()</td>\n<td>数组中查找给定元素的第一个索引</td>\n<td>如果存在返回索引号，如果不存在返回 - 1</td>\n</tr>\n<tr>\n<td>lastIndexOf()</td>\n<td>在数组中的最后一个的索引</td>\n<td>如果存在返回索引号，如果不存在返回 - 1</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"数组转换为字符串\"><a class=\"anchor\" href=\"#数组转换为字符串\">#</a> 数组转换为字符串</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>toString()</td>\n<td>把数组转换成字符串，逗号分隔每一项</td>\n<td>返回一个字符串</td>\n</tr>\n<tr>\n<td>join (' 分隔符 ')</td>\n<td>方法用于把数组中的所有元素转换为一个字符串</td>\n<td>返回一个字符串</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"连接数组\"><a class=\"anchor\" href=\"#连接数组\">#</a> 连接数组</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>concat()</td>\n<td>连接两个或多个数组，不影响原数组</td>\n<td>返回一个新的数组</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"字符串对象\"><a class=\"anchor\" href=\"#字符串对象\">#</a> 字符串对象</h2>\n<h3 id=\"基本包装类型\"><a class=\"anchor\" href=\"#基本包装类型\">#</a> 基本包装类型</h3>\n<p>为了方便操作基本数据类型，JavaScript 还提供了三个特殊的引用类型：String、Number 和 Boolean。</p>\n<p><strong>基本包装类型</strong>就是把简单数据类型包装成为复杂数据类型，这样基本数据类型就有了属性和方法。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 下面代码有什么问题？</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'andy'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>按道理基本数据类型是没有属性和方法的，而对象才有属性和方法，但上面代码却可以执行，这是因为 js 会把基本数据类型包装为复杂数据类型，其执行过程如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 生成临时变量，把简单类型包装为复杂数据类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">'andy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 2. 赋值给我们声明的字符变量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>str <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 3. 销毁临时变量</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>temp <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"字符串的不可变\"><a class=\"anchor\" href=\"#字符串的不可变\">#</a> 字符串的不可变</h3>\n<p>指的是里面的值不可变，虽然看上去可以改变内容，但其实是地址变了，内存中新开辟了一个内存空间。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>str <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 当重新给 str 赋值的时候，常量 'abc' 不会被修改，依然在内存中</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 重新给字符串赋值，会重新在内存中开辟空间，这个特点就是字符串的不可变</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 由于字符串的不可变，在大量拼接字符串的时候会有效率问题</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tstr <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 这个结果需要花费大量时间来显示，因为需要不断的开辟新的空间</span></pre></td></tr></table></figure><h3 id=\"根据字符返回位置\"><a class=\"anchor\" href=\"#根据字符返回位置\">#</a> 根据字符返回位置</h3>\n<p>字符串所有的方法，都不会修改字符串本身 (字符串是不可变的)，操作完成会返回一个新的字符串。</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>indexOf (' 要查找的字符 ', 开始的位置)</td>\n<td>返回指定内容在原字符串中的位置，如果找不到就返回 - 1，开始的位置是 index 索引号</td>\n</tr>\n<tr>\n<td>lastIndexOf()</td>\n<td>从后往前找，只找第一个匹配的</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"根据位置返回字符\"><a class=\"anchor\" href=\"#根据位置返回字符\">#</a> 根据位置返回字符</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>使用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>charAt(index)</td>\n<td>返回指定位置的字符（index 字符串的索引号）</td>\n<td>str.charAt(0)</td>\n</tr>\n<tr>\n<td>charCodeAt(index)</td>\n<td>获取指定位置处字符的 ASCII 码（index 左引号）</td>\n<td>str.charCodeAt(0)</td>\n</tr>\n<tr>\n<td>str[index]</td>\n<td>获取指定位置处字符</td>\n<td>HTML5 支持，和 charAt 等效</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"字符串操作方法\"><a class=\"anchor\" href=\"#字符串操作方法\">#</a> 字符串操作方法</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>concact(str1, str2, str3...)</td>\n<td>concat () 方法用于连接两个或多个字符串。拼接字符串，等效于 +，+ 更常用</td>\n</tr>\n<tr>\n<td>substr(start, length)</td>\n<td>从 start 位置开始（索引号），length 取的个数</td>\n</tr>\n<tr>\n<td>slice(start, end)</td>\n<td>从 start 位置开始，截取到 end 位置，end 取不到。接受负数索引，表示从字符串的末尾开始计算索引，例如 slice (-3, -1)，start 取不到</td>\n</tr>\n<tr>\n<td>substring(start, end)</td>\n<td>从 start 位置开始，截取到 end 位置，end 取不到，基本和 slice 相同，但是不接受负值，如果传递了负数索引，则会将其视为 0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"replace-方法\"><a class=\"anchor\" href=\"#replace-方法\">#</a> replace () 方法</h3>\n<p>replace () 方法用于在字符串中用一些字符替换另一些字符。</p>\n<p>其使用格式如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>被替换的字符串<span class=\"token punctuation\">,</span> 要替换为的字符串<span class=\"token punctuation\">)</span>；</pre></td></tr></table></figure><h3 id=\"split-方法\"><a class=\"anchor\" href=\"#split-方法\">#</a> split () 方法</h3>\n<p>split () 方法用于切分字符串，它可以将字符串切分为数组。在切分完毕之后，返回的是一个新数组。</p>\n<p>例如下面代码：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'a,b,c,d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回的是一个数组 [a, b, c, d]</span></pre></td></tr></table></figure><h3 id=\"转换大小写\"><a class=\"anchor\" href=\"#转换大小写\">#</a> 转换大小写</h3>\n<ol>\n<li>\n<p><code>toUpperCase()</code>  方法将字符串中的所有字符转换为大写形式，并返回转换后的新字符串。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出 \"HELLO, WORLD!\"</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>toLowerCase()</code>  方法将字符串中的所有字符转换为小写形式，并返回转换后的新字符串。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出 \"hello, world!\"</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"javascript-简单类型与复杂类型\"><a class=\"anchor\" href=\"#javascript-简单类型与复杂类型\">#</a> JavaScript 简单类型与复杂类型</h1>\n<p>简单类型又叫做基本数据类型或者值类型，复杂类型又叫做引用类型。</p>\n<ul>\n<li>\n<p>值类型：简单数据类型 / 基本数据类型，在存储时变量中存储的是值本身，因此叫做值类型</p>\n<p>string，number，boolean，undefined，null</p>\n</li>\n<li>\n<p>引用类型：复杂数据类型，在存储时变量中存储的仅仅是地址（引用），因此叫做引用数据类型</p>\n<p>通过 new 关键字创建的对象（系统对象、自定义对象），如 Object、Array、Date 等</p>\n</li>\n</ul>\n<h2 id=\"堆和栈\"><a class=\"anchor\" href=\"#堆和栈\">#</a> 堆和栈</h2>\n<p>堆栈空间分配区别：</p>\n<ol>\n<li>栈（操作系统）：由操作系统自动分配释放存放函数的参数值、局部变量的值等。其操作方式类似于数据结构中的栈；简单数据类型存放到栈里面</li>\n<li>堆（操作系统）：存储复杂类型 (对象)，一般由程序员分配释放，若程序员不释放，由垃圾回收机制回收。复杂数据类型存放到堆里面</li>\n</ol>\n<p><strong>注意</strong>：JavaScript 中没有堆栈的概念，通过堆栈的方式，可以更容易理解代码的一些执行方式，便于将来学习其他语言。</p>\n<h2 id=\"简单类型的内存分配\"><a class=\"anchor\" href=\"#简单类型的内存分配\">#</a> 简单类型的内存分配</h2>\n<ul>\n<li>值类型（简单数据类型）：string，number，boolean，undefined，null</li>\n<li>值类型变量的数据直接存放在变量（栈空间）中</li>\n</ul>\n<h2 id=\"复杂类型的内存分配\"><a class=\"anchor\" href=\"#复杂类型的内存分配\">#</a> 复杂类型的内存分配</h2>\n<ul>\n<li>引用类型（复杂数据类型）：通过 new 关键字创建的对象（系统对象、自定义对象），如 Object、Array、Date 等</li>\n<li>引用类型变量（栈空间）里存放的是地址，真正的对象实例存放在堆空间中</li>\n</ul>\n<h2 id=\"简单类型传参\"><a class=\"anchor\" href=\"#简单类型传参\">#</a> 简单类型传参</h2>\n<p>函数的形参也可以看做是一个变量，当我们把一个值类型变量作为参数传给函数的形参时，其实是把变量在栈空间里的值复制了一份给形参，那么在方法内部对形参做任何修改，都不会影响到外部变量。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 11</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 10</span></pre></td></tr></table></figure><h2 id=\"复杂类型传参\"><a class=\"anchor\" href=\"#复杂类型传参\">#</a> 复杂类型传参</h2>\n<p>函数的形参也可以看做是一个变量，当我们把引用类型变量传给形参时，其实是把变量在栈空间里保存的堆地址复制给了形参，形参和实参其实保存的是同一个堆地址，所以操作的是同一个对象。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 刘德华</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    x<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'张学友'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 张学友</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'刘德华'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 刘德华</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 张学友</span></pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaScript",
                "前端",
                "JavaScript"
            ]
        }
    ]
}